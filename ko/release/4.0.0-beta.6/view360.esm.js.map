{"version":3,"file":"view360.esm.js","sources":["../src/core/View360Error.ts","../src/const/error.ts","../src/const/browser.ts","../src/const/external.ts","../src/const/internal.ts","../src/utils.ts","../src/core/Motion.ts","../src/core/CameraAnimation.ts","../src/core/Camera.ts","../src/control/input/MouseInput.ts","../src/control/input/TouchInput.ts","../src/control/input/KeyboardInput.ts","../src/control/RotateControl.ts","../src/control/input/WheelInput.ts","../src/control/input/PinchInput.ts","../src/control/ZoomControl.ts","../src/control/input/GyroInput.ts","../src/control/GyroControl.ts","../src/control/PanoControl.ts","../src/texture/Texture.ts","../src/texture/Texture2D.ts","../src/texture/TextureVideo.ts","../src/texture/TextureCube.ts","../src/core/TextureLoader.ts","../src/core/FrameAnimator.ts","../src/core/AutoResizer.ts","../src/core/Autoplay.ts","../src/core/XRManager.ts","../src/hotspot/Hotspot.ts","../src/hotspot/HotspotRenderer.ts","../src/core/VertexArrayObject.ts","../src/core/WebGLContext.ts","../src/core/WebGLRenderer.ts","../src/View360.ts","../src/core/Object3D.ts","../src/plugin/LoadingSpinner/LoadingSpinner.ts","../src/plugin/ControlBar/ControlBarItem.ts","../src/plugin/ControlBar/const.ts","../src/plugin/ControlBar/RangeControl.ts","../src/plugin/ControlBar/ProgressBar.ts","../src/plugin/ControlBar/PlayButton.ts","../src/plugin/ControlBar/VolumeControl.ts","../src/plugin/ControlBar/FullscreenButton.ts","../src/plugin/ControlBar/VideoTime.ts","../src/plugin/ControlBar/PieView.ts","../src/plugin/ControlBar/VRButton.ts","../src/plugin/ControlBar/GyroButton.ts","../src/plugin/ControlBar/AutoHide.ts","../src/plugin/ControlBar/VideoControl.ts","../src/plugin/ControlBar/ControlBar.ts","../src/projection/Projection.ts","../src/uniform/Uniform.ts","../src/uniform/UniformTextureCube.ts","../src/core/CubeTexturePainter.ts","../src/uniform/UniformCanvasCube.ts","../src/core/TriangleMesh.ts","../src/core/ShaderProgram.ts","../src/core/VertexData.ts","../src/geometry/Geometry.ts","../src/geometry/CubeGeometry.ts","../src/projection/CubemapProjection.ts","../src/uniform/UniformTexture2D.ts","../src/projection/CubestripProjection.ts","../src/geometry/CylinderGeometry.ts","../src/projection/CylindricalProjection.ts","../src/projection/EquiangularProjection.ts","../src/geometry/SphereGeometry.ts","../src/projection/EquirectProjection.ts","../src/uniform/UniformFloat.ts","../src/geometry/PlaneGeometry.ts","../src/projection/LittlePlanetProjection.ts","../src/uniform/UniformVector4Array.ts","../src/projection/StereoEquiProjection.ts","../src/cfc/withMethods.ts","../src/cfc/utils.ts","../src/cfc/const.ts","../src/index.ts"],"sourcesContent":["/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * Error thrown by {@link View360}\n * @ko {@link View360}이 발생시킨 에러\n * @since 4.0.0\n */\nclass View360Error extends Error {\n  /**\n   * Error code\n   * @ko 에러 코드\n   * @see ERROR_CODES\n   */\n  public code: number;\n\n  /**\n   * Create new instance of View360Error\n   * @ko View360Error의 인스턴스를 생성합니다.\n   * @param message - Error message {@ko 에러 메시지}\n   * @param code - Error code {@ko 에러 코드}\n   */\n  public constructor(message: string, code: number) {\n    super(message);\n\n    Object.setPrototypeOf(this, View360Error.prototype);\n\n    this.name = \"View360Error\";\n    this.code = code;\n  }\n}\n\nexport default View360Error;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * Error codes of {@link View360Error}\n * @ko {@link View360Error}가 가질 수 있는 에러 코드 값들\n * @since 4.0.0\n */\nexport const ERROR_CODES = {\n  /**\n   * The given value's type is not expected\n   * @ko 주어진 값의 타입이 잘못되었을 경우\n   * @since 4.0.0\n   */\n  WRONG_TYPE: 0,\n  /**\n   * The given value is not a supported option\n   * @ko 잘못된 옵션을 받았을 경우\n   * @since 4.0.0\n   */\n  WRONG_OPTION: 1,\n  /**\n   * The element with given CSS selector does not exist\n   * @ko 주어진 CSS 셀렉터로 엘리먼트를 찾지 못했을 경우\n   * @since 4.0.0\n   */\n  ELEMENT_NOT_FOUND: 2,\n  /**\n   * Couldn't find canvas element inside the given container element.\n   * @ko 컨테이너 엘리먼트 내부에서 캔버스 엘리먼트를 찾지 못했을 경우\n   * @since 4.0.0\n   */\n  CANVAS_NOT_FOUND: 3,\n  /**\n   * The browser does not support WebGL\n   * @ko 브라우저가 WebGL을 지원하지 않는 경우\n   * @since 4.0.0\n   */\n  WEBGL_NOT_SUPPORTED: 4,\n  /**\n   * Failed creating canvas 2D context\n   * @ko 캔버스 2D 컨텍스트를 생성하지 못한 경우\n   * @since 4.0.0\n   */\n  FAILED_CREATE_CONTEXT_2D: 5,\n  /**\n   * `init()` is called before setting {@link View360Options#projection}\n   * @ko {@link View360Options#projection}을 설정하기 전에 `init()`이 호출된 경우\n   * @since 4.0.0\n   */\n  PROVIDE_PROJECTION_FIRST: 6,\n  /**\n   * Failed linking WebGL program. Only can be thrown when {@link View360Options#debug} is `true`.\n   * @ko WebGL 프로그램 링크에 실패한 경우. {@link View360Options#debug}를 `true`로 설정한 경우에만 발생할 수 있습니다.\n   * @since 4.0.0\n   */\n  FAILED_LINKING_PROGRAM: 7,\n  /**\n   * Arguments are not sufficient for the given property.\n   * @ko 프로퍼티에 값이 충분히 주어지지 않았을 때\n   * @since 4.0.0\n   */\n  INSUFFICIENT_ARGS: 8\n} as const;\n\nexport const MESSAGES = {\n  WRONG_TYPE: (val: any, types: string[]) => `${typeof val} is not a ${types.map(type => `\"${type}\"`).join(\" or \")}.`,\n  WRONG_OPTION: (val: any, optionName: string) => `Bad option: given \"${val}\" for option \"${optionName}\".`,\n  ELEMENT_NOT_FOUND: (query: string) => `Element with selector \"${query}\" not found.`,\n  CANVAS_NOT_FOUND: \"The canvas element was not found inside the given root element.\",\n  WEBGL_NOT_SUPPORTED: \"WebGL is not supported on this browser.\",\n  FAILED_CREATE_CONTEXT_2D: \"Failed to create canvas 2D context\",\n  PROVIDE_PROJECTION_FIRST: \"\\\"projection\\\" should be provided before initialization.\",\n  FAILED_LINKING_PROGRAM: (msg: string | null, shaderLog: string | null) => `Failed linking WebGL program - \"${msg}\\nShader compile Log: ${shaderLog}`,\n  INSUFFICIENT_ARGS: (val: any, name: string) => `Insufficient arguments: given \"${val}\" for \"${name}\".`\n};\n\nexport default {\n  CODES: ERROR_CODES,\n  MESSAGES\n};\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nexport const EVENTS = {\n  MOUSE_DOWN: \"mousedown\",\n  MOUSE_MOVE: \"mousemove\",\n  MOUSE_UP: \"mouseup\",\n  TOUCH_START: \"touchstart\",\n  TOUCH_MOVE: \"touchmove\",\n  TOUCH_END: \"touchend\",\n  WHEEL: \"wheel\",\n  RESIZE: \"resize\",\n  CONTEXT_MENU: \"contextmenu\",\n  MOUSE_ENTER: \"mouseenter\",\n  MOUSE_LEAVE: \"mouseleave\",\n  POINTER_DOWN: \"pointerdown\",\n  POINTER_MOVE: \"pointermove\",\n  POINTER_UP: \"pointerup\",\n  POINTER_CANCEL: \"pointercancel\",\n  POINTER_ENTER: \"pointerenter\",\n  POINTER_LEAVE: \"pointerleave\",\n  KEY_DOWN: \"keydown\",\n  KEY_UP: \"keyup\",\n  LOAD: \"load\",\n  ERROR: \"error\",\n  CLICK: \"click\",\n  DOUBLE_CLICK: \"dblclick\",\n  CONTEXT_CREATE_ERROR: \"webglcontextcreationerror\",\n  CONTEXT_LOST: \"webglcontextlost\",\n  CONTEXT_RESTORED: \"webglcontextrestored\",\n  DEVICE_ORIENTATION: \"deviceorientation\",\n  DEVICE_MOTION: \"devicemotion\",\n  ORIENTATION_CHANGE: \"orientationchange\",\n  VIDEO_PLAY: \"play\",\n  VIDEO_PAUSE: \"pause\",\n  VIDEO_LOADED_DATA: \"loadeddata\",\n  VIDEO_VOLUME_CHANGE: \"volumechange\",\n  VIDEO_TIME_UPDATE: \"timeupdate\",\n  VIDEO_DURATION_CHANGE: \"durationchange\",\n  VIDEO_CAN_PLAYTHROUGH: \"canplaythrough\",\n  TRANSITION_END: \"transitionend\",\n  XR_END: \"end\"\n} as const;\n\nexport const EL_DIV = \"div\";\nexport const EL_BUTTON = \"button\";\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\nexport enum MOUSE_BUTTON {\n  LEFT,\n  MIDDLE,\n  RIGHT\n}\n\nexport const CURSOR = {\n  GRAB: \"grab\",\n  GRABBING: \"grabbing\",\n  NONE: \"\"\n} as const;\n\nexport const KEY_DIRECTION = [\"LEFT\", \"UP\", \"RIGHT\", \"DOWN\"] as const;\nexport enum DIRECTION_KEY_CODE {\n  LEFT = 37,\n  UP = 38,\n  RIGHT = 39,\n  DOWN = 40\n}\nexport const SPACE_KEY_CODE = 32;\n\nexport const DIRECTION_KEY_NAME = {\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\"\n} as const;\nexport const SPACE_KEY_NAME = \" \";\n\nexport const FULLSCREEN_REQUEST = [\n  \"requestFullscreen\",\n  \"webkitRequestFullscreen\",\n  \"webkitRequestFullScreen\",\n  \"webkitCancelFullScreen\",\n  \"mozRequestFullScreen\",\n  \"msRequestFullscreen\"\n];\n\nexport const FULLSCREEN_ELEMENT = [\n  \"fullscreenElement\",\n  \"webkitFullscreenElement\",\n  \"webkitCurrentFullScreenElement\",\n  \"mozFullScreenElement\",\n  \"msFullscreenElement\"\n];\n\nexport const FULLSCREEN_EXIT = [\n  \"exitFullscreen\",\n  \"webkitExitFullscreen\",\n  \"webkitCancelFullScreen\",\n  \"mozCancelFullScreen\",\n  \"msExitFullscreen\"\n];\n\nexport const FULLSCREEN_CHANGE = [\n  \"fullscreenchange\",\n  \"webkitfullscreenchange\",\n  \"mozfullscreenchange\",\n  \"MSFullscreenChange\"\n];\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nexport { ERROR_CODES } from \"./error\";\n\n/**\n * Default class names\n * @ko 기본 클래스 이름들\n * @since 4.0.0\n */\nexport const DEFAULT_CLASS = {\n  CONTAINER: \"view360-container\",\n  CANVAS: \"view360-canvas\",\n  CTX_LOST: \"view360-ctx-lost\",\n  IN_VR: \"view360-vr-presenting\",\n  HOTSPOT_CONTAINER: \"view360-hotspots\",\n  HOTSPOT: \"view360-hotspot\",\n  HOTSPOT_VISIBLE: \"view360-hotspot-visible\",\n  HOTSPOT_FLIP_X: \"view360-hotspot-flip-x\",\n  HOTSPOT_FLIP_Y: \"view360-hotspot-flip-y\",\n} as const;\n\n/**\n * Event names\n * @ko 이벤트 이름들\n * @since 4.0.0\n * @example\n * ```ts\n * import View360, { EVENTS } from \"@egjs/view360\";\n *\n * const viewer = new View360(\"#el_id\");\n *\n * viewer.on(EVENTS.READY, evt => {\n *   console.log(\"View360 is ready!\");\n * });\n * ```\n */\nexport const EVENTS = {\n  READY: \"ready\",\n  LOAD_START: \"loadStart\",\n  LOAD: \"load\",\n  PROJECTION_CHANGE: \"projectionChange\",\n  RESIZE: \"resize\",\n  BEFORE_RENDER: \"beforeRender\",\n  RENDER: \"render\",\n  INPUT_START: \"inputStart\",\n  INPUT_END: \"inputEnd\",\n  VIEW_CHANGE: \"viewChange\",\n  STATIC_CLICK: \"staticClick\",\n  VR_START: \"vrStart\",\n  VR_END: \"vrEnd\"\n} as const;\n\n/**\n * Collection of predefined easing functions\n * @ko 미리 정의된 easing 함수들\n */\nexport const EASING = {\n  LINEAR: (x: number) => x,\n  SINE_WAVE: (x: number) => Math.sin(x * Math.PI * 2),\n  EASE_OUT_CUBIC: (x: number) => 1 - Math.pow(1 - x, 3),\n  EASE_OUT_BOUNCE: (x: number): number => {\n    const n1 = 7.5625;\n    const d1 = 2.75;\n\n    if (x < 1 / d1) {\n      return n1 * x * x;\n    } else if (x < 2 / d1) {\n      return n1 * (x -= 1.5 / d1) * x + 0.75;\n    } else if (x < 2.5 / d1) {\n      return n1 * (x -= 2.25 / d1) * x + 0.9375;\n    } else {\n      return n1 * (x -= 2.625 / d1) * x + 0.984375;\n    }\n  }\n} as const;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { EASING } from \"./external\";\nimport { Range } from \"../type/utils\";\n\nexport const CAMERA_EVENTS = {\n  CHANGE: \"change\",\n  ANIMATION_END: \"animationEnd\"\n} as const;\n\nexport const OBJECT_3D_EVENTS = {\n  UPDATE: \"update\"\n} as const;\n\nexport const CONTROL_EVENTS = {\n  INPUT_START: \"inputStart\",\n  CHANGE: \"change\",\n  INPUT_END: \"inputEnd\",\n  ENABLE: \"enable\",\n  DISABLE: \"disable\",\n  STATIC_CLICK: \"staticClick\"\n} as const;\n\nexport const DEG_TO_RAD = Math.PI / 180;\nexport const RAD_TO_DEG = 180 / Math.PI;\nexport const DEFAULT_EASING = EASING.EASE_OUT_CUBIC;\nexport const DEFAULT_ANIMATION_DURATION = 300;\nexport const INFINITE_RANGE: Readonly<Range> = {\n  min: -Infinity, max: Infinity\n} as const;\nexport const DEFAULT_PITCH_RANGE: Readonly<Range> = {\n  min: -90, max: 90\n} as const;\nexport const DEFAULT_ZOOM_RANGE: Readonly<Range> = {\n  min: 0.6, max: 10\n} as const;\n\nexport enum ROTATE {\n  ZERO,\n  CW_90,\n  CCW_90,\n  CW_180\n}\n\n// Custom event name for video time change\nexport const VIDEO_TIME_CHANGE_EVENT = \"view360videotimechange\";\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const SESSION_VR = \"immersive-vr\";\nexport const XR_REFERENCE_SPACE = \"local\";\n\nexport const EPSILON = Number.EPSILON ?? 2.220446049250313e-16;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { quat, vec3 } from \"gl-matrix\";\nimport View360Error from \"./core/View360Error\";\nimport ERROR from \"./const/error\";\nimport * as BROWSER from \"./const/browser\";\nimport { DEG_TO_RAD, RAD_TO_DEG } from \"./const/internal\";\nimport { NoBoolean } from \"./type/utils\";\n\nexport const isString = (val: any): val is string => typeof val === \"string\";\nexport const isElement = (val: any): val is Element => !!val && val.nodeType === Node.ELEMENT_NODE;\n\nexport const createElement = (className: string, tag = BROWSER.EL_DIV) => {\n  const el = document.createElement(tag);\n\n  el.classList.add(className);\n\n  return el;\n};\n\nexport const getNullableElement = (el: HTMLElement | string | null, parent?: HTMLElement): HTMLElement | null => {\n  let targetEl: HTMLElement | null = null;\n\n  if (isString(el)) {\n    const parentEl = parent ? parent : document;\n    const queryResult = parentEl.querySelector(el);\n\n    if (!queryResult) {\n      return null;\n    }\n\n    targetEl = queryResult as HTMLElement;\n  } else if (isElement(el)) {\n    targetEl = el;\n  }\n\n  return targetEl;\n};\n\nexport const getElement = (el: HTMLElement | string, parent?: HTMLElement): HTMLElement => {\n  const targetEl = getNullableElement(el, parent);\n\n  if (!targetEl) {\n    if (isString(el)) {\n      throw new View360Error(ERROR.MESSAGES.ELEMENT_NOT_FOUND(el), ERROR.CODES.ELEMENT_NOT_FOUND);\n    } else {\n      throw new View360Error(ERROR.MESSAGES.WRONG_TYPE(el, [\"HTMLElement\", \"string\"]), ERROR.CODES.WRONG_TYPE);\n    }\n  }\n\n  return targetEl;\n};\n\nexport const findCanvas = (root: HTMLElement, selector: string): HTMLCanvasElement => {\n  const canvas = root.querySelector(selector) as HTMLCanvasElement;\n\n  if (!canvas) {\n    throw new View360Error(ERROR.MESSAGES.CANVAS_NOT_FOUND, ERROR.CODES.CANVAS_NOT_FOUND);\n  }\n\n  return canvas;\n};\n\nexport const range = (end: number): number[] => {\n  if (!end || end <= 0) {\n    return [];\n  }\n\n  return Array.apply(0, Array(end)).map((undef, idx) => idx);\n};\n\nexport const clamp = (x: number, min: number, max: number) => Math.max(Math.min(x, max), min);\n\n// Linear interpolation between a and b\nexport const lerp = (a: number, b: number, t: number) => {\n  return a * (1 - t) + b * t;\n};\n\nexport const circulate = (val: number, min: number, max: number) => {\n  const size = Math.abs(max - min);\n\n  if (val < min) {\n    const offset = (min - val) % size;\n    val = max - offset;\n  } else if (val > max) {\n    const offset = (val - max) % size;\n    val = min + offset;\n  }\n\n  return val;\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const merge = (target: object, ...srcs: object[]): object => {\n  srcs.forEach(source => {\n    Object.keys(source).forEach(key => {\n      const value = source[key];\n      if (Array.isArray(target[key]) && Array.isArray(value)) {\n        target[key] = [...target[key], ...value];\n      } else {\n        target[key] = value;\n      }\n    });\n  });\n\n  return target;\n};\n\nexport const findIndex = <T>(array: T[], checker: (val: T) => boolean): number => {\n  for (let idx = 0; idx < array.length; idx++) {\n    if (checker(array[idx])) {\n      return idx;\n    }\n  }\n\n  return -1;\n};\n\nexport const getObjectOption = <T extends boolean | Partial<object>>(val?: T): NoBoolean<T> => typeof val === \"object\" ? val : {} as any;\nexport const toVerticalFov = (fovRadian: number, aspect: number) => {\n  return Math.atan(Math.tan(fovRadian * 0.5) / aspect) * 2;\n};\n\nexport const reorderCube = <T>(arr: T[], order: string, defaultOrder = \"RLUDFB\"): T[] => {\n  return defaultOrder.split(\"\")\n    .map(face => order.indexOf(face))\n    .map(index => arr[index]);\n};\n\nexport const isFullscreen = () => {\n  if (!document) return false;\n\n  for (const key of BROWSER.FULLSCREEN_ELEMENT) {\n    if (document[key]) return true;\n  }\n\n  return false;\n};\n\nexport const sensorCanBeEnabledIOS = () => {\n  return window.isSecureContext && !!DeviceMotionEvent && \"requestPermission\" in DeviceMotionEvent;\n};\n\nexport const hfovToZoom = (baseFov: number, fov: number) => {\n  const renderingWidth = Math.tan(DEG_TO_RAD * baseFov * 0.5);\n  const zoomedWidth = Math.tan(DEG_TO_RAD * fov * 0.5);\n\n  return renderingWidth / zoomedWidth;\n};\n\nexport const eulerToQuat = (out: quat, yaw: number, pitch: number, roll: number): quat => {\n  quat.identity(out);\n\n  const pitchThreshold = 0.01;\n  const pitchClamped = clamp(pitch, -90 + pitchThreshold, 90 - pitchThreshold);\n\n  quat.rotateY(out, out, yaw * DEG_TO_RAD);\n  quat.rotateX(out, out, pitchClamped * DEG_TO_RAD);\n  quat.rotateZ(out, out, roll * DEG_TO_RAD);\n\n  return out;\n};\n\n/**\n * Extract euler angles from the quaternion, except roll(z-axis rotation)\n * @hidden\n */\nexport const quatToEuler = (quaternion: quat) => {\n  const x = quaternion[0];\n  const y = quaternion[1];\n  const z = quaternion[2];\n  const w = quaternion[3];\n  const x2 = x * x;\n  const y2 = y * y;\n  const z2 = z * z;\n  const w2 = w * w;\n\n  const unit = x2 + y2 + z2 + w2;\n  const test = x * w - y * z;\n\n  let pitch: number, yaw: number;\n\n  if (test > 0.499995 * unit) {\n    // singularity at the north pole\n    pitch = Math.PI / 2;\n    yaw = 2 * Math.atan2(y, x);\n  } else if (test < -0.499995 * unit) {\n    // singularity at the south pole\n    pitch = -Math.PI / 2;\n    yaw = -2 * Math.atan2(y, x);\n  } else {\n    const view = vec3.fromValues(0, 0, 1);\n    const up = vec3.fromValues(0, 1, 0);\n\n    vec3.transformQuat(view, view, quaternion);\n    vec3.transformQuat(up, up, quaternion);\n\n    const viewXZ = Math.sqrt(view[0] * view[0] + view[2] * view[2]);\n\n    pitch = Math.atan2(-view[1], viewXZ);\n    yaw = Math.atan2(view[0], view[2]);\n  }\n\n  return {\n    pitch: clamp(pitch * RAD_TO_DEG, -90, 90),\n    yaw: circulate(yaw * RAD_TO_DEG, 0, 360)\n  };\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport { clamp, lerp, circulate } from \"../utils\";\nimport { Range } from \"../type/utils\";\nimport { DEFAULT_ANIMATION_DURATION, DEFAULT_EASING } from \"../const/internal\";\n\n/**\n * Interpolator between two values with duration\n * @ko 특정 시간동안 두 값을 보간해주는 보간기\n * @since 4.0.0\n */\nclass Motion {\n  // Options\n  private _duration: number;\n  private _loop: boolean;\n  private _range: Range;\n  private _easing: (x: number) => number;\n\n  // Internal states\n  private _progress: number;\n  private _val: number;\n  private _start: number;\n  private _end: number;\n  private _activated: boolean;\n\n  /**\n   * Current interpolated value\n   * @ko 현재 보간된 값\n   * @since 4.0.0\n   */\n  public get val() { return this._val; }\n  /**\n   * Start(from) value of interpolation\n   * @ko 보간 시작 값\n   * @since 4.0.0\n   */\n  public get start() { return this._start; }\n  /**\n   * End(to) value of interpolation\n   * @ko 보간 끝 값\n   * @since 4.0.0\n   */\n  public get end() { return this._end; }\n  /**\n   * Interpolation progress value (0 ~ 1)\n   * @ko 현재 보간 진행정도 (0 ~ 1)\n   * @since 4.0.0\n   */\n  public get progress() { return this._progress; }\n  /**\n   * Whether the interpolation is in active state.\n   * @ko 보간 진행중인지 여부. `true`일 경우 보간이 진행중입니다.\n   * @since 4.0.0\n   */\n  public get activated() { return this._activated; }\n\n  /**\n   * Duration of the interpolation\n   * @ko 보간할 시간\n   * @since 4.0.0\n   */\n  public get duration() { return this._duration; }\n  public set duration(val: number) { this._duration = val; }\n\n  /**\n   * Whether to loop interpolation on finish\n   * @ko 보간이 끝난 이후에 다시 시작할지 여부\n   * @since 4.0.0\n   */\n  public get loop() { return this._loop; }\n  public set loop(val: boolean) { this._loop = val; }\n\n  /**\n   * Range of the interpolation\n   * @ko 보간 범위\n   * @since 4.0.0\n   */\n  public get range() { return this._range; }\n\n  /**\n   * Easing function of the interpolation\n   * @ko 보간에 사용되는 easing function\n   * @since 4.0.0\n   */\n  public get easing() { return this._easing; }\n  public set easing(val: (x: number) => number) { this._easing = val; }\n\n  /**\n   * Create new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options Options {@ko 옵션들}\n   * @param options.duration Duration of the interpolation {@ko 보간할 시간}\n   * @param options.loop Whether to loop interpolation on finish {@ko 보간이 끝난 이후에 다시 시작할지 여부}\n   * @param options.range Range of the interpolation {@ko 보간 범위}\n   * @param options.loop Easing function of the interpolation {@ko 보간에 사용되는 easing function}\n   */\n  public constructor({\n    duration = DEFAULT_ANIMATION_DURATION,\n    loop = false,\n    range = { min: 0, max: 1 },\n    easing = DEFAULT_EASING\n  } = {}) {\n    this._duration = duration;\n    this._loop = loop;\n    this._range = range;\n    this._easing = easing;\n    this._activated = false;\n    this.reset(0);\n  }\n\n  /**\n   * Update motion and progress it by given deltaTime\n   * @ko 주어진 deltaTime만큼 보간을 진행합니다.\n   * @param deltaTime - number of milisec to update motion {@ko 보간을 진행할 시간, 밀리초 단위}\n   * @returns Difference(delta) of the value from the last update. {@ko 지난 업데이트 이후의 값 변화량}\n   * @since 4.0.0\n   */\n  public update(deltaTime: number): number {\n    if (!this._activated) {\n      this._val = this._end;\n      return 0;\n    }\n\n    const start = this._start;\n    const end = this._end;\n    const duration = this._duration;\n    const prev = this._val;\n    const loop = this._loop;\n\n    const nextProgress = this._progress + deltaTime / duration;\n\n    this._progress = loop\n      ? circulate(nextProgress, 0, 1)\n      : clamp(nextProgress, 0, 1);\n\n    const easedProgress = this._easing(this._progress);\n    this._val = lerp(start, end, easedProgress);\n\n    if (!loop && this._progress >= 1) {\n      this._activated = false;\n    }\n\n    return this._val - prev;\n  }\n\n  /**\n   * Set `start`, `end` to the given value and set `progress` to 0.\n   * @ko 주어진 값으로 시작 지점, 끝 지점을 초기화하고 progress를 0으로 세팅합니다.\n   * @param defaultVal - Value to reset {@ko 초기화할 값}\n   * @since 4.0.0\n   */\n  public reset(defaultVal: number): void {\n    const range = this._range;\n    const val = clamp(defaultVal, range.min, range.max);\n    this._start = val;\n    this._end = val;\n    this._val = val;\n    this._progress = 0;\n    this._activated = false;\n  }\n\n  /**\n   * Add delta to start & end and current value.\n   * @ko 현재 & 끝 및 현재 값에 주어진 값을 더합니다.\n   * @param delta - Delta value to add {@ko 추가할 값}\n   */\n  public add(delta: number) {\n    const range = this._range;\n\n    this._start = clamp(this._start + delta, range.min, range.max);\n    this._end = clamp(this._end + delta, range.min, range.max);\n    this._val = clamp(this._val + delta, range.min, range.max);\n  }\n\n  /**\n   * Set current value to start, and end to current value + delta, then reset progress to 0.\n   * @ko 현재 값을 시작 지점으로, 그에서 delta만큼 추가된 값을 끝점으로 하고 progress를 0으로 갱신합니다.\n   * @param delta - Delta value to add {@ko 추가할 값}\n   */\n  public setNewEndByDelta(delta: number): void {\n    const range = this._range;\n\n    this._start = this._val;\n    this._end = clamp(this._end + delta, range.min, range.max);\n    this._progress = 0;\n    this._activated = true;\n  }\n\n  /**\n   * Set new range of the interpolation.\n   * @ko 보간의 범위를 변경합니다.\n   * @param min - New minimum range {@ko 변경할 범위의 최소값}\n   * @param max - New maximum range {@ko 변경할 범위의 최대값}\n   */\n  public setRange(min: number, max: number) {\n    this._start = clamp(this._start, min, max);\n    this._end = clamp(this._end, min, max);\n    this._range = { min, max };\n  }\n}\n\nexport default Motion;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { quat } from \"gl-matrix\";\nimport Camera from \"./Camera\";\nimport Motion from \"./Motion\";\nimport { DEFAULT_ANIMATION_DURATION, DEFAULT_EASING } from \"../const/internal\";\nimport { lerp } from \"../utils\";\n\ntype CameraPose = {\n  rotation: quat;\n  zoom: number;\n}\n\n/**\n * Animation of the {@link Camera}\n * @internal\n * @ko {@link Camera}의 애니메이션\n * @since 4.0.0\n */\nclass CameraAnimation {\n  // Options\n  private _camera: Camera;\n  private _from: CameraPose;\n  private _to: CameraPose;\n\n  // Internal values\n  private _motion: Motion;\n  private _finishPromise: Promise<void>;\n  private _finish: () => void;\n\n  /**\n   * Duration of the animation\n   * @ko 애니메이션 재생시간\n   * @since 4.0.0\n   */\n  public get duration() { return this._motion.duration; }\n  public set duration(val: number) { this._motion.duration = val; }\n  /**\n   * Easing function of the animation\n   * @ko 애니메이션의 easing function\n   * @since 4.0.0\n   */\n  public get easing() { return this._motion.easing; }\n  public set easing(val: (x: number) => number) { this._motion.easing = val; }\n\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param camera - Camera to animate {@ko 애니메이션을 적용할 카메라}\n   * @param from - Start pose {@ko 애니메이션이 시작 시점의 카메라의 회전 및 줌}\n   * @param to - End pose {@ko 애니메이션이 끝났을 때 카메라의 회전 및 줌}\n   * @param options - Options {@ko 옵션들}\n   * @param options.duration - Animation duration {@ko 애니메이션 재생 시간}\n   * @param options.easing - Animation easing function {@ko 애니메이션 easing function}\n   */\n  public constructor(camera: Camera, from: CameraPose, to: CameraPose, {\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING\n  } = {}) {\n    this._camera = camera;\n    this._motion = new Motion({ duration, easing, range: { min: 0, max: 1 } });\n    this._from = from;\n    this._to = to;\n    this._finishPromise = new Promise(resolve => {\n      this._finish = resolve as () => void;\n    });\n\n    // Enable motion\n    this._motion.setNewEndByDelta(1);\n  }\n\n  /**\n   * Return a promise that resolved on animation end.\n   * @ko 애니메이션 재생이 끝났을 때 resolve되는 Promise를 반환합니다.\n   * @since 4.0.0\n   */\n  public getFinishPromise() {\n    return this._finishPromise;\n  }\n\n  /**\n   * Update animation by given deltaTime.\n   * @ko 주어진 시간만큼 애니메이션을 업데이트합니다.\n   * @param deltaTime Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\n   * @since 4.0.0\n   */\n  public update(deltaTime: number): void {\n    const camera = this._camera;\n    const from = this._from;\n    const to = this._to;\n    const motion = this._motion;\n    motion.update(deltaTime);\n\n    // Progress that easing is applied\n    const progress = motion.val;\n    const rotation = quat.create();\n    const zoom = lerp(from.zoom, to.zoom, progress);\n\n    quat.slerp(rotation, from.rotation, to.rotation, progress);\n    camera.rotate(rotation, zoom);\n\n    if (progress >= 1) {\n      this._finish();\n    }\n  }\n}\n\nexport default CameraAnimation;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport { mat4, quat, vec3 } from \"gl-matrix\";\nimport CameraAnimation from \"./CameraAnimation\";\nimport {\n  CAMERA_EVENTS,\n  DEG_TO_RAD,\n  INFINITE_RANGE,\n  DEFAULT_PITCH_RANGE,\n  RAD_TO_DEG,\n  DEFAULT_ZOOM_RANGE,\n  DEFAULT_EASING,\n  EPSILON\n} from \"../const/internal\";\nimport {\n  circulate,\n  clamp,\n  eulerToQuat,\n  quatToEuler,\n  toVerticalFov\n} from \"../utils\";\nimport { Range } from \"../type/utils\";\n\n/**\n * Events that {@link Camera} can trigger\n * @ko {@link Camera}가 트리거할 수 있는 이벤트들\n * @since 4.0.0\n */\nexport interface CameraEvents {\n  /**\n   * An event that fires when camera's animation stops\n   * @ko 카메라 애니메이션이 멈췄을 때 트리거되는 이벤트\n   * @eventName animationEnd\n   * @eventOf Camera\n   * @version 4.0.0\n   */\n  [CAMERA_EVENTS.ANIMATION_END]: {\n    animation: CameraAnimation\n  };\n}\n\n/**\n * Options for {@link Camera}\n * @ko {@link Camera}용 옵션들\n * @since 4.0.0\n */\nexport interface CameraOptions {\n  /**\n   * @copy View360#initialYaw\n   */\n  initialYaw: number;\n  /**\n   * @copy View360#initialPitch\n   */\n  initialPitch: number;\n  /**\n   * @copy View360#initialZoom\n   */\n  initialZoom: number;\n  /**\n   * @copy View360#yawRange\n   */\n  yawRange: Range | null;\n  /**\n   * @copy View360#pitchRange\n   */\n  pitchRange: Range | null;\n  /**\n   * @copy View360#zoomRange\n   */\n  zoomRange: Range | null;\n  /**\n   * @copy View360#fov\n   */\n  fov: number;\n}\n\n/**\n * Camera for View360\n * @ko View360용 카메라 구현체\n * @version 4.0.0\n */\nclass Camera extends Component<CameraEvents> {\n  /**\n   * Current yaw(y-axis rotation) value\n   * @ko 현재 yaw(y축 회전) 값\n   * @since 4.0.0\n   */\n  public yaw: number;\n  /**\n   * Current pitch(x-axis rotation) value\n   * @ko 현재 pitch(x축 회전) 값\n   * @since 4.0.0\n   */\n  public pitch: number;\n  /**\n   * Current zoom value\n   * @ko 현재 줌 값\n   * @since 4.0.0\n   */\n  public zoom: number;\n\n  /**\n   * @copy View360#initialYaw\n   */\n  public initialYaw: number;\n  /**\n   * @copy View360#initialPitch\n   */\n  public initialPitch: number;\n  /**\n   * @copy View360#initialPitch\n   */\n  public initialZoom: number;\n  /**\n   * @hidden\n   * TODO: Please add comment for this when `rollOffset` is added\n   */\n  public rollOffset: number;\n\n  /**\n   * Current camera quaternion\n   * @ko 현재 회전을 나타내는 quaternion 값\n   * @since 4.0.0\n   * @internal\n   */\n  public quaternion: quat;\n  /**\n   * Current camera position\n   * @ko 현재 카메라 위치 좌표\n   * @since 4.0.0\n   * @internal\n   */\n  public position: vec3;\n  /**\n   * Active camera animation, `null` if there isn't.\n   * @ko 현재 활성화된 카메라 애니메이션, 없을 경우 `null`값을 가집니다.\n   * @since 4.0.0\n   */\n  public animation: CameraAnimation | null;\n  /**\n   * Camera's view matrix\n   * @ko 카메라의 뷰 변환 행렬\n   * @internal\n   * @since 4.0.0\n   */\n  public viewMatrix: mat4;\n  /**\n   * Camera's projection matrix\n   * @ko 카메라의 프로젝션 변환 행렬\n   * @internal\n   * @since 4.0.0\n   */\n  public projectionMatrix: mat4;\n\n  /**\n   * Camera's horizontal FOV(Field of View) value\n   * @ko 카메라의 수평 FOV(Field of View) 값\n   * @internal\n   * @since 4.0.0\n   */\n  public fov: number;\n\n  private _initialYawRange: Range | null;\n  private _initialPitchRange: Range | null;\n  private _initialZoomRange: Range | null;\n\n  private _yawRange: Range | null;\n  private _pitchRange: Range | null;\n  private _zoomRange: Range | null;\n\n  private _up: vec3;\n  private _aspect: number;\n  private _changed: boolean;\n  private _maxRenderHeight: number;\n\n  /**\n   * Camera's width / height ratio\n   * @ko 카메라의 가로 / 세로 비율\n   * @readonly\n   */\n  public get aspect() { return this._aspect; }\n  /**\n   * Whether the camera's rotation changed from the last frame.\n   * @ko 마지막 프레임 이후로 카메라의 회전값이 변경되었는지 나타내는 플래그.\n   * @readonly\n   */\n  public get changed() { return this._changed; }\n  /**\n   * @copy View360#yawRange\n   */\n  public get yawRange() { return this._initialYawRange; }\n  public set yawRange(val: Range | null) {\n    this._initialYawRange = val;\n  }\n  /**\n   * @copy View360#pitchRange\n   */\n  public get pitchRange() { return this._initialPitchRange; }\n  public set pitchRange(val: Range | null) {\n    this._initialPitchRange = val;\n  }\n  /**\n   * @copy View360#zoomRange\n   */\n  public get zoomRange() { return this._initialZoomRange; }\n  public set zoomRange(val: Range | null) {\n    this._initialZoomRange = val;\n  }\n\n  /**\n   * Create new instance of Camera\n   * @param options - Camera options {@ko 카메라 옵션들}\n   */\n  public constructor({\n    initialYaw,\n    initialPitch,\n    initialZoom,\n    yawRange,\n    pitchRange,\n    zoomRange,\n    fov\n  }: CameraOptions) {\n    super();\n\n    this.yaw = initialYaw;\n    this.pitch = initialPitch;\n    this.zoom = initialZoom;\n    this.rollOffset = 0;\n\n    this.initialYaw = initialYaw;\n    this.initialPitch = initialPitch;\n    this.initialZoom = initialZoom;\n\n    this.position = vec3.create();\n    this.animation = null;\n\n    this._up = vec3.fromValues(0, 1, 0);\n    this._aspect = 1;\n\n    this._initialYawRange = yawRange;\n    this._initialPitchRange = pitchRange;\n    this._initialZoomRange = zoomRange;\n\n    this._yawRange = yawRange;\n    this._pitchRange = pitchRange;\n    this._zoomRange = zoomRange;\n\n    this.quaternion = quat.create();\n    this._updateQuaternion();\n\n    this.viewMatrix = mat4.create();\n    this.projectionMatrix = mat4.create();\n    this.fov = fov;\n\n    this._maxRenderHeight = -1;\n  }\n\n  /**\n   * Destroy instance and detach all event listeners\n   * @ko 인스턴스를 삭제하고 모든 이벤트 리스너를 삭제합니다.\n   * @since 4.0.0\n   */\n  public destroy() {\n    this.off();\n  }\n\n  /**\n   * Refresh internal size value.\n   * @ko 내부 크기값을 갱신합니다.\n   * @param width - New width {@ko 변경된 너비값}\n   * @param height - New height {@ko 변경된 높이값}\n   * @since 4.0.0\n   */\n  public resize(width: number, height: number) {\n    const prevAspect = this._aspect;\n\n    this._aspect = width / height;\n\n    if (this._aspect !== prevAspect) {\n      this.updateMatrix();\n    }\n  }\n\n  /**\n   * Change camera's rotation with euler values.\n   * @ko 카메라 회전을 오일러 각 방향으로 변경합니다.\n   * @param rotation - Rotation values {@ko 회전 값}\n   * @param rotation.yaw - yaw(y-axis rotation) to look at {@ko 바라볼 yaw(y축 회전) 값}\n   * @param rotation.pitch - pitch(x-axis rotation) to look at {@ko 바라볼 pitch(x축 회전) 값}\n   * @param rotation.zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\n   * @since 4.0.0\n   */\n  public lookAt({\n    yaw = this.yaw,\n    pitch = this.pitch,\n    zoom = this.zoom\n  }: Partial<{\n    yaw: number;\n    pitch: number;\n    zoom: number;\n  }>) {\n    const prevQuaternion = quat.clone(this.quaternion);\n    const prevZoom = this.zoom;\n\n    this.yaw = circulate(yaw, 0, 360);\n    this.pitch = clamp(pitch, -90, 90);\n    this.zoom = zoom;\n\n    this._updateQuaternion();\n\n    const zoomDiff = Math.abs(zoom - prevZoom);\n\n    if (\n      !quat.equals(this.quaternion, prevQuaternion)\n      || zoomDiff >= EPSILON * 10 // ignore small changes\n    ) {\n      this.updateMatrix();\n    }\n  }\n\n  /**\n   * Change camera's rotation with quaternion.\n   * @ko 카메라 회전을 Quaternion을 이용해서 변경합니다.\n   * @param rotation - Quaternion to apply {@ko 적용할 Quaternion}\n   * @param zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\n   * @since 4.0.0\n   */\n  public rotate(rotation: quat, zoom: number = this.zoom) {\n    const normalized = quat.normalize(quat.create(), rotation);\n    const isSameRotation = quat.equals(this.quaternion, normalized);\n    quat.copy(this.quaternion, normalized);\n\n    const prevZoom = this.zoom;\n    const { yaw, pitch } = quatToEuler(normalized);\n\n    this.yaw = yaw;\n    this.pitch = pitch;\n    this.zoom = zoom;\n\n    const zoomDiff = Math.abs(zoom - prevZoom);\n\n    if (!isSameRotation || zoomDiff >= EPSILON * 10) {\n      this.updateMatrix();\n    }\n  }\n\n  /**\n   * Change camera's rotation to given euler values by the given duration.\n   * @ko 카메라를 주어진 방향으로 주어진 시간동안 서서히 이동시킵니다.\n   * @param options - Animation parameters {@ko 애니메이션 패러미터}\n   * @param options.yaw - yaw(y-axis rotation) to look at {@ko 바라볼 yaw(y축 회전) 값}\n   * @param options.pitch - pitch(x-axis rotation) to look at {@ko 바라볼 pitch(x축 회전) 값}\n   * @param options.zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\n   * @param options.duration - Duration of the animation {@ko 애니메이션 시간}\n   * @param options.easing - Easing function for the animation {@ko 애니메이션에 적용할 easing function}\n   */\n  public async animateTo({\n    yaw = this.yaw,\n    pitch = this.pitch,\n    zoom = this.zoom,\n    duration = 0,\n    easing = DEFAULT_EASING\n  }: Partial<{\n    yaw: number;\n    pitch: number;\n    zoom: number;\n    duration: number;\n    easing: (x: number) => number;\n  }> = {}): Promise<void> {\n    if (\n      this.yaw === yaw\n      && this.pitch === pitch\n      && this.zoom === zoom\n    ) return;\n\n    const from = {\n      rotation: quat.clone(this.quaternion),\n      zoom: this.zoom\n    };\n    const to = {\n      rotation: eulerToQuat(quat.create(), yaw, pitch, this.rollOffset),\n      zoom\n    };\n\n    const animation = new CameraAnimation(this, from, to, {\n      duration,\n      easing\n    });\n    const finishPromise = animation.getFinishPromise();\n\n    this.animation = animation;\n    finishPromise.then(() => {\n      this.animation = null;\n      this.trigger(CAMERA_EVENTS.ANIMATION_END, { animation });\n    });\n\n    return finishPromise;\n  }\n\n  /**\n   * @hidden\n   */\n  public restrictYawRange(min: number, max: number) {\n    this._yawRange = { min, max };\n  }\n\n  /**\n   * @hidden\n   */\n  public restrictPitchRange(min: number, max: number) {\n    this._pitchRange = { min, max };\n  }\n\n  /**\n   * @hidden\n   */\n  public restrictZoomRange(min: number, max: number) {\n    this._zoomRange = { min, max };\n  }\n\n  /**\n   * @hidden\n   */\n  public restrictRenderHeight(height: number) {\n    this._maxRenderHeight = height;\n  }\n\n  /**\n   * @hidden\n   */\n  public resetRange() {\n    this._yawRange = this._initialYawRange;\n    this._pitchRange = this._initialPitchRange;\n    this._zoomRange = this._initialZoomRange;\n    this._maxRenderHeight = -1;\n  }\n\n  /**\n   * Get actual yaw range by the given zoom value.\n   * @ko 주어진 zoom 값에 대한 실제 yaw 범위값을 반환합니다.\n   * @since 4.0.0\n   */\n  public getYawRange(zoom: number) {\n    const yawLimit = this._yawRange;\n    const maxRenderHeight = this._maxRenderHeight;\n    if (!yawLimit) return INFINITE_RANGE;\n\n    const halfHFov = this.getHorizontalFov(zoom) * 0.5;\n    let minYaw = yawLimit.min;\n    let maxYaw = yawLimit.max;\n\n    if (maxRenderHeight > 0) {\n      const halfVFovRad = toVerticalFov(halfHFov * DEG_TO_RAD, this._aspect);\n      const h = maxRenderHeight * 0.5;\n      const t = Math.tan(halfVFovRad);\n      const d = Math.sqrt((1 + h * h) / (1 + t * t));\n      const theta = Math.atan(Math.tan(halfHFov * DEG_TO_RAD) * d) * RAD_TO_DEG;\n\n      minYaw = yawLimit.min + theta;\n      maxYaw = yawLimit.max - theta;\n    }\n\n    if (minYaw > maxYaw) {\n      minYaw = 0;\n      maxYaw = 0;\n    }\n\n    return {\n      min: minYaw,\n      max: maxYaw\n    };\n  }\n\n  /**\n   * Get actual pitch range by the given zoom value.\n   * @ko 주어진 zoom 값에 대한 실제 pitch 범위값을 반환합니다.\n   * @since 4.0.0\n   */\n  public getPitchRange(zoom: number) {\n    const pitchLimit = this._pitchRange;\n    const maxRenderHeight = this._maxRenderHeight;\n\n    if (!pitchLimit) return DEFAULT_PITCH_RANGE;\n\n    let minPitch = pitchLimit.min;\n    let maxPitch = pitchLimit.max;\n\n    if (maxRenderHeight > 0) {\n      const halfVFov = this.getVerticalFov(zoom) * 0.5;\n\n      minPitch = pitchLimit.min + halfVFov;\n      maxPitch = pitchLimit.max - halfVFov;\n    }\n\n    if (minPitch > maxPitch) {\n      minPitch = 0;\n      maxPitch = 0;\n    }\n\n    return {\n      min: Math.max(minPitch, -90),\n      max: Math.min(maxPitch, 90)\n    };\n  }\n\n  /**\n   * Get actual zoom range in fov degrees.\n   * @ko 실제 줌 범위를 fov각의 범위로 반환합니다.\n   * @since 4.0.0\n   */\n  public getZoomRange() {\n    const limit = this._zoomRange ?? DEFAULT_ZOOM_RANGE;\n\n    // max (zoom in) -> minimum fov\n    const minFov = this.getHorizontalFov(limit.max);\n    const maxFov = this.getHorizontalFov(limit.min);\n    const currentFov = this.getHorizontalFov(this.zoom);\n\n    return {\n      min: Math.max(minFov, 1),\n      max: Math.min(maxFov, 180),\n      current: currentFov\n    };\n  }\n\n  /**\n   * Return horizontal fov value when the given zoom is applied. (in degrees, °)\n   * @ko 주어진 zoom 값이 적용되었을 때의 수평 fov값을 반환합니다. (도 단위, °)\n   * @returns Zoomed horizontal FOV {@ko 줌이 적용된 수평 fov값}\n   * @since 4.0.0\n   */\n  public getHorizontalFov(zoom = this.zoom) {\n    return this._getZoomedHorizontalFov(zoom) * RAD_TO_DEG;\n  }\n\n  /**\n   * Return vertical fov value when the given zoom is applied. (in degrees, °)\n   * @ko 주어진 zoom 값이 적용되었을 때의 수직 fov값을 반환합니다. (도 단위, °)\n   * @returns Zoomed vertical FOV {@ko 줌이 적용된 수직 fov값}\n   * @since 4.0.0\n   */\n  public getVerticalFov(zoom = this.zoom) {\n    const aspect = this._aspect;\n    const hFov = this._getZoomedHorizontalFov(zoom); // In radians\n    const vFov = toVerticalFov(hFov, aspect);\n\n    return vFov * RAD_TO_DEG;\n  }\n\n  /**\n   * Calculate zoom value for the given fov.\n   * @ko 주어진 fov값을 zoom값으로 변환합니다.\n   * @param fov horizontal fov (in degrees, °) {@ko 수평 fov 값 (도 단위, °)}\n   * @since 4.0.0\n   */\n  public fovToZoom(fov: number) {\n    const baseFov = this.fov;\n    const renderingWidth = Math.tan(DEG_TO_RAD * baseFov * 0.5);\n    const zoomedWidth = Math.tan(DEG_TO_RAD * fov * 0.5);\n\n    return renderingWidth / zoomedWidth;\n  }\n\n  /**\n   * Update inner matrixes.\n   * @ko 내부 행렬들을 업데이트합니다.\n   * @internal\n   * @since 4.0.0\n   */\n  public updateMatrix() {\n    const up = this._up;\n    const aspect = this._aspect;\n    const viewMatrix = this.viewMatrix;\n    const projMatrix = this.projectionMatrix;\n    const position = this.position;\n    const rotation = this.quaternion;\n\n    const upDir = vec3.create();\n    const viewDir = vec3.fromValues(0, 0, -1);\n    vec3.transformQuat(viewDir, viewDir, rotation);\n    vec3.transformQuat(upDir, up, rotation);\n\n    const hFov = this._getZoomedHorizontalFov(); // In radians\n    const vFov = toVerticalFov(hFov, aspect);\n\n    mat4.lookAt(viewMatrix, position, viewDir, upDir);\n    mat4.perspective(projMatrix, vFov, aspect, 0.1, 100);\n\n    this._changed = true;\n  }\n\n  /**\n   * @hidden\n   */\n  public onFrameRender() {\n    this._changed = false;\n  }\n\n  private _updateQuaternion() {\n    eulerToQuat(this.quaternion, this.yaw, this.pitch, this.rollOffset);\n  }\n\n  /**\n   * @param zoom Current zoom value\n   * @returns horizontal fov including zoom, in radian\n   */\n  private _getZoomedHorizontalFov(zoom = this.zoom) {\n    return 2 * Math.atan(Math.tan(DEG_TO_RAD * this.fov * 0.5) / zoom);\n  }\n}\n\nexport default Camera;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\n\nclass MouseInput extends Component<InputEvents<{ x: number, y: number }, MouseEvent>> {\n  private _el: HTMLElement | null;\n  private _prevPos: [number, number];\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._prevPos = [0, 0];\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.MOUSE_DOWN, this._onMouseDown);\n\n    this._el = element;\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.MOUSE_DOWN, this._onMouseDown);\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this._el = null;\n  }\n\n  private _onMouseDown = (evt: MouseEvent) => {\n    const el = this._el;\n    if (!el || evt.button !== BROWSER.MOUSE_BUTTON.LEFT) return;\n\n    evt.preventDefault();\n\n    if (el.focus) {\n      el.focus();\n    } else {\n      window.focus();\n    }\n\n    this._prevPos[0] = evt.clientX;\n    this._prevPos[1] = evt.clientY;\n\n    window.addEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.addEventListener(BROWSER.EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this.trigger(CONTROL_EVENTS.INPUT_START, {\n      srcEvent: evt,\n      isTouch: false,\n      isKeyboard: false\n    });\n  }\n\n  private _onMouseMove = (evt: MouseEvent) => {\n    evt.preventDefault();\n\n    const x = evt.clientX;\n    const y = evt.clientY;\n    const prevPos = this._prevPos;\n    const deltaX = x - prevPos[0];\n    const deltaY = y - prevPos[1];\n\n    this.trigger(CONTROL_EVENTS.CHANGE, {\n      delta: {\n        x: deltaX,\n        y: deltaY\n      },\n      isTouch: false,\n      isKeyboard: false\n    });\n\n    prevPos[0] = x;\n    prevPos[1] = y;\n  }\n\n  private _onMouseUp = () => {\n    this._prevPos[0] = 0;\n    this._prevPos[1] = 0;\n\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this.trigger(CONTROL_EVENTS.INPUT_END, {\n      isTouch: false,\n      isKeyboard: false,\n      scrolling: false\n    });\n  }\n}\n\nexport default MouseInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\nimport { isFullscreen } from \"../../utils\";\n\nclass TouchInput extends Component<InputEvents<{ x: number, y: number }, TouchEvent>> {\n  private _el: HTMLElement | null;\n  private _prevPos: [number, number];\n  private _isFirstTouch: boolean;\n  private _scrolling: boolean;\n  private _scrollable: boolean;\n\n  public get scrollable() { return this._scrollable; }\n  public set scrollable(val: boolean) { this._scrollable = val; }\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._prevPos = [0, 0];\n    this._isFirstTouch = false;\n    this._scrolling = false;\n    this._scrollable = false;\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.TOUCH_START, this._onTouchStart, { passive: false });\n    element.addEventListener(BROWSER.EVENTS.TOUCH_MOVE, this._onTouchMove, { passive: false });\n    element.addEventListener(BROWSER.EVENTS.TOUCH_END, this._onTouchEnd);\n\n    this._el = element;\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_START, this._onTouchStart);\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_MOVE, this._onTouchMove);\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_END, this._onTouchEnd);\n\n    this._el = null;\n  }\n\n  private _onTouchStart = (evt: TouchEvent) => {\n    if (evt.touches.length > 1 || this._scrolling) return;\n\n    const touch = evt.touches[0];\n\n    this._isFirstTouch = true;\n    this._prevPos[0] = touch.clientX;\n    this._prevPos[1] = touch.clientY;\n\n    this.trigger(CONTROL_EVENTS.INPUT_START, {\n      srcEvent: evt,\n      isTouch: true,\n      isKeyboard: false\n    });\n  };\n\n  private _onTouchMove = (evt: TouchEvent) => {\n    // Only the one finger motion should be considered\n    if (evt.touches.length > 1 || this._scrolling) return;\n\n    const touch = evt.touches[0];\n    const scrollable = this._scrollable;\n    const prevPos = this._prevPos;\n\n    const x = touch.clientX;\n    const y = touch.clientY;\n    const deltaX = x - prevPos[0];\n    const deltaY = y - prevPos[1];\n\n    if (this._isFirstTouch) {\n      if (scrollable && !isFullscreen()) {\n        if (Math.abs(deltaY) > Math.abs(deltaX)) {\n          // Assume Scrolling\n          this._scrolling = true;\n          return;\n        }\n      }\n\n      this._isFirstTouch = false;\n    }\n\n    if (evt.cancelable !== false) {\n      evt.preventDefault();\n    }\n\n    this.trigger(CONTROL_EVENTS.CHANGE, {\n      delta: {\n        x: deltaX,\n        y: deltaY\n      },\n      isTouch: true,\n      isKeyboard: false\n    });\n\n    prevPos[0] = x;\n    prevPos[1] = y;\n  };\n\n  private _onTouchEnd = (evt: TouchEvent) => {\n    if (evt.touches.length !== 0) return;\n\n    const touch = evt.touches[0];\n    const prevPos = this._prevPos;\n\n    if (touch) {\n      prevPos[0] = touch.clientX;\n      prevPos[1] = touch.clientY;\n    } else {\n      prevPos[0] = 0;\n      prevPos[1] = 0;\n\n      this.trigger(CONTROL_EVENTS.INPUT_END, {\n        isTouch: true,\n        isKeyboard: false,\n        scrolling: this._scrolling\n      });\n    }\n\n    if (evt.cancelable !== false) {\n      evt.preventDefault();\n    }\n\n    this._scrolling = false;\n  };\n}\n\nexport default TouchInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\n\nclass KeyboardInput extends Component<InputEvents<{ x: number, y: number }, KeyboardEvent>> {\n  private _el: HTMLElement | null;\n  private _pressed: {\n    LEFT: boolean;\n    UP: boolean;\n    RIGHT: boolean;\n    DOWN: boolean;\n  };\n\n  public get active() {\n    const pressed = this._pressed;\n    return pressed.LEFT || pressed.UP || pressed.RIGHT || pressed.DOWN;\n  }\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._clearPressedKeys();\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.KEY_DOWN, this._onKeyDown);\n    element.addEventListener(BROWSER.EVENTS.KEY_UP, this._onKeyUp);\n\n    this._el = element;\n    this._clearPressedKeys();\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.KEY_DOWN, this._onKeyDown);\n    element.removeEventListener(BROWSER.EVENTS.KEY_UP, this._onKeyUp);\n\n    this._el = null;\n    this._clearPressedKeys();\n  }\n\n  public update() {\n    const delta = this._getDeltaByPressedKeys();\n\n    if (delta.x !== 0 || delta.y !== 0) {\n      this.trigger(CONTROL_EVENTS.CHANGE, {\n        delta,\n        isTouch: false,\n        isKeyboard: true\n      });\n    }\n  }\n\n  private _clearPressedKeys() {\n    this._pressed = BROWSER.KEY_DIRECTION.reduce((obj, keyName) => {\n      return {\n        ...obj,\n        [keyName]: false\n      };\n    }, {} as KeyboardInput[\"_pressed\"]);\n  }\n\n  private _updateKeyPress(event: KeyboardEvent, isEnable: boolean): void {\n    const pressed = this._pressed;\n    const keyToUpdate = event.keyCode != null\n      ? BROWSER.DIRECTION_KEY_CODE[event.keyCode]\n      : BROWSER.DIRECTION_KEY_NAME[event.key];\n\n    if (!keyToUpdate) return;\n\n    pressed[keyToUpdate] = isEnable;\n  }\n\n  private _getPressedKeyCount() {\n    return BROWSER.KEY_DIRECTION.filter(key => this._pressed[key]).length;\n  }\n\n  private _getDeltaByPressedKeys() {\n    const pressed = this._pressed;\n    let x = 0;\n    let y = 0;\n\n    if (pressed.LEFT) {\n      x += 1;\n    }\n\n    if (pressed.RIGHT) {\n      x -= 1;\n    }\n\n    if (pressed.UP) {\n      y += 1;\n    }\n\n    if (pressed.DOWN) {\n      y -= 1;\n    }\n\n    return {\n      x, y\n    };\n  }\n\n  private _onKeyDown = (evt: KeyboardEvent) => {\n    // Ignore all other keypress except main arrow keys\n    if (evt.location !== KeyboardEvent.DOM_KEY_LOCATION_STANDARD) return;\n\n    this._updateKeyPress(evt, true);\n\n    const pressedCount = this._getPressedKeyCount();\n    if (pressedCount <= 0) return;\n\n    evt.preventDefault();\n    if (pressedCount === 1 && !evt.repeat) {\n      // On first keydown\n      this.trigger(CONTROL_EVENTS.INPUT_START, {\n        srcEvent: evt,\n        isTouch: false,\n        isKeyboard: true\n      });\n    }\n  };\n\n  private _onKeyUp = (evt: KeyboardEvent) => {\n    // Ignore all other keypress except main arrow keys\n    if (evt.location !== KeyboardEvent.DOM_KEY_LOCATION_STANDARD) return;\n\n    this._updateKeyPress(evt, false);\n\n    const pressedCount = this._getPressedKeyCount();\n    if (pressedCount > 0) return;\n\n    this.trigger(CONTROL_EVENTS.INPUT_END, {\n      isTouch: false,\n      isKeyboard: true,\n      scrolling: false\n    });\n  };\n}\n\nexport default KeyboardInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport CameraControl from \"./CameraControl\";\nimport MouseInput from \"./input/MouseInput\";\nimport TouchInput from \"./input/TouchInput\";\nimport KeyboardInput from \"./input/KeyboardInput\";\nimport Camera from \"../core/Camera\";\nimport Motion from \"../core/Motion\";\nimport { CONTROL_EVENTS, INFINITE_RANGE, DEFAULT_PITCH_RANGE, DEFAULT_ANIMATION_DURATION, DEFAULT_EASING, DEG_TO_RAD, RAD_TO_DEG } from \"../const/internal\";\nimport { toVerticalFov } from \"../utils\";\nimport { ControlEvents, InputEvents } from \"../type/internal\";\n\n/**\n * Options for {@link RotateControl}\n * @ko {@link RotateControl}용 옵션들\n * @since 4.0.0\n */\nexport interface RotateControlOptions {\n  /**\n   * @copy RotateControl#pointerScale\n   */\n  pointerScale: [number, number];\n  /**\n   * @copy RotateControl#keyboardScale\n   */\n  keyboardScale: [number, number];\n  /**\n   * @copy RotateControl#duration\n   */\n  duration: number;\n  /**\n   * @copy RotateControl#easing\n   */\n  easing: (x: number) => number;\n  /**\n   * @copy RotateControl#disablePitch\n   */\n  disablePitch: boolean;\n  /**\n   * @copy RotateControl#disableYaw\n   */\n  disableYaw: boolean;\n  /**\n   * @copy RotateControl#disableKeyboard\n   */\n  disableKeyboard: boolean;\n}\n\ntype RotateDeltaType = { x: number; y: number; };\nexport type RotateControlEvents = ControlEvents<RotateDeltaType>;\n\n/**\n * Camera's rotation control\n * @ko 카메라의 회전을 담당하는 컨트롤\n * @since 4.0.0\n */\nclass RotateControl extends Component<RotateControlEvents> implements CameraControl {\n  // Options\n  private _pointerScale: RotateControlOptions[\"pointerScale\"];\n  private _keyboardScale: RotateControlOptions[\"keyboardScale\"];\n  private _duration: RotateControlOptions[\"duration\"];\n  private _easing: RotateControlOptions[\"easing\"];\n  private _disablePitch: RotateControlOptions[\"disablePitch\"];\n  private _disableYaw: RotateControlOptions[\"disableYaw\"];\n  private _disableKeyboard: RotateControlOptions[\"disableKeyboard\"];\n\n  // Internal values\n  private _controlEl: HTMLElement;\n  private _enableBlocked: boolean;\n  private _mouseInput: MouseInput;\n  private _touchInput: TouchInput;\n  private _keyboardInput: KeyboardInput;\n  private _xMotion: Motion;\n  private _yMotion: Motion;\n  private _screenScale: [number, number];\n  private _zoomScale: number;\n  private _enabled: boolean;\n  private _changedWhileDragging: boolean;\n\n  /**\n   * @copy CameraControl#enabled\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * @hidden\n   */\n  public get enableBlocked() { return this._enableBlocked; }\n  /**\n   * @copy CameraControl#animating\n   */\n  public get animating() {\n    return this._keyboardInput.active\n      || this._xMotion.activated\n      || this._yMotion.activated;\n  }\n  /**\n   * Current yaw value\n   * @ko 현재 yaw 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get yaw() { return this._xMotion; }\n  /**\n   * Current pitch value\n   * @ko 현재 pitch 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get pitch() { return this._yMotion; }\n  /**\n   * @copy View360#scrollable\n   */\n  public get scrollable() { return this._touchInput.scrollable; }\n  public set scrollable(val: boolean) {\n    this._touchInput.scrollable = val;\n  }\n\n  /**\n   * Scale factor for mouse/touch rotation\n   * @ko 마우스/터치를 통한 회전 배율\n   * @default [1, 1]\n   * @since 4.0.0\n   */\n  public get pointerScale() { return this._pointerScale; }\n  public set pointerScale(val: RotateControlOptions[\"pointerScale\"]) {\n    this._pointerScale = val;\n  }\n\n  /**\n   * Scale factor for keyboard rotation\n   * @ko 키보드를 통한 회전 배율\n   * @default [1, 1]\n   * @since 4.0.0\n   */\n  public get keyboardScale() { return this._keyboardScale; }\n  public set keyboardScale(val: RotateControlOptions[\"keyboardScale\"]) {\n    this._keyboardScale = val;\n  }\n\n  /**\n   * Duration of the input animation (ms)\n   * @ko 회전 애니메이션의 시간 (ms)\n   * @default 300\n   */\n  public get duration() { return this._duration; }\n  public set duration(val: RotateControlOptions[\"duration\"]) {\n    this._duration = val;\n    this._xMotion.duration = val;\n    this._yMotion.duration = val;\n  }\n\n  /**\n   * Easing function of the animation\n   * @ko 회전 애니메이션에 적용할 easing 함수\n   * @default EASING.EASE_OUT_CUBIC\n   * @see EASING\n   */\n  public get easing() { return this._easing; }\n  public set easing(val: RotateControlOptions[\"easing\"]) {\n    this._easing = val;\n    this._xMotion.easing = val;\n    this._yMotion.easing = val;\n  }\n\n  /**\n   * Disable X-axis(pitch) rotation.\n   * @ko x축 회전(pitch)을 비활성화합니다.\n   * @default false\n   */\n  public get disablePitch() { return this._disablePitch; }\n  public set disablePitch(val: RotateControlOptions[\"disablePitch\"]) { this._disablePitch = val; }\n\n  /**\n   * Disable Y-axis(yaw) rotation.\n   * @ko y축 회전(yaw)을 비활성화합니다.\n   * @default false\n   */\n  public get disableYaw() { return this._disableYaw; }\n  public set disableYaw(val: RotateControlOptions[\"disableYaw\"]) { this._disableYaw = val; }\n\n  /**\n   * Disable rotation by keyboard.\n   * @ko 키보드를 이용한 회전을 비활성화합니다.\n   * @default false\n   */\n  public get disableKeyboard() { return this._disableKeyboard; }\n  public set disableKeyboard(val: RotateControlOptions[\"disableKeyboard\"]) { this._disableKeyboard = val; }\n\n  /**\n   * Create new RotateControl instance\n   * @ko RotateControl의 인스턴스를 생성합니다.\n   * @param controlEl - Element to attach handlers {@ko 입력을 받을 엘리먼트}\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\n   * @param options - Options for control {@ko 컨트롤 옵션들}\n   */\n  public constructor(controlEl: HTMLElement, enableBlocked: boolean, {\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING,\n    pointerScale = [1, 1],\n    keyboardScale = [1, 1],\n    disablePitch = false,\n    disableYaw = false,\n    disableKeyboard = false\n  }: Partial<RotateControlOptions> = {}) {\n    super();\n\n    this._controlEl = controlEl;\n    this._pointerScale = pointerScale;\n    this._keyboardScale = keyboardScale;\n    this._duration = duration;\n    this._easing = easing;\n    this._disablePitch = disablePitch;\n    this._disableYaw = disableYaw;\n    this._disableKeyboard = disableKeyboard;\n\n    this._enableBlocked = enableBlocked;\n    this._mouseInput = new MouseInput();\n    this._touchInput = new TouchInput();\n    this._keyboardInput = new KeyboardInput();\n    this._xMotion = new Motion({ duration, range: INFINITE_RANGE, easing });\n    this._yMotion = new Motion({ duration, range: DEFAULT_PITCH_RANGE, easing });\n    this._screenScale = [1, 1];\n    this._zoomScale = 1;\n    this._enabled = false;\n    this._changedWhileDragging = false;\n    this._bindInputs();\n  }\n\n  public destroy(): void {\n    this.disable();\n    this._mouseInput.off();\n    this._touchInput.off();\n    this._keyboardInput.off();\n    this.off();\n    this._changedWhileDragging = false;\n  }\n\n  /**\n   * @hidden\n   */\n  public update(delta: number): void {\n    if (!this._enabled) return;\n\n    const xMotion = this._xMotion;\n    const yMotion = this._yMotion;\n    const keyboardInput = this._keyboardInput;\n\n    if (!this._disableKeyboard) {\n      keyboardInput.update();\n    }\n\n    if (!this._disablePitch) {\n      yMotion.update(delta);\n    }\n\n    if (!this._disableYaw) {\n      xMotion.update(delta);\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  public updateRange(camera: Camera, zoom: number) {\n    const yawRange = camera.getYawRange(zoom);\n    const pitchRange = camera.getPitchRange(zoom);\n\n    this._xMotion.setRange(yawRange.min, yawRange.max);\n    this._yMotion.setRange(pitchRange.min, pitchRange.max);\n  }\n\n  /**\n   * @hidden\n   */\n  public setZoomScale(val: number) {\n    this._zoomScale = val;\n  }\n\n  /**\n   * Resize control to match target size.\n   * @ko 컨트롤의 내부 크기를 갱신합니다.\n   * @param hfov - Camera horizontal fov in degrees {@ko 카메라의 수평방향 fov값 (도 단위)}\n   * @param aspect - Camera aspect {@ko 카메라 가로/세로 비율}\n   * @param width - New width {@ko 갱신된 너비}\n   * @param height - New height {@ko 갱신된 높이}\n   */\n  public resize(hfov: number, aspect: number, width: number, height: number) {\n    const vfov = toVerticalFov(hfov * DEG_TO_RAD, aspect) * RAD_TO_DEG;\n\n    this._screenScale[0] = hfov / width;\n    this._screenScale[1] = vfov / height;\n  }\n\n  public enable(): void {\n    if (this._enabled) return;\n\n    const element = this._controlEl;\n\n    this._mouseInput.enable(element);\n    this._touchInput.enable(element);\n    this._keyboardInput.enable(element);\n\n    this._enabled = true;\n    this._enableBlocked = false;\n\n    this.trigger(CONTROL_EVENTS.ENABLE, { control: this, updateCursor: true });\n  }\n\n  public disable(): void {\n    if (!this._enabled) return;\n\n    this._mouseInput.disable();\n    this._touchInput.disable();\n    this._keyboardInput.disable();\n\n    this._enabled = false;\n\n    this.trigger(CONTROL_EVENTS.DISABLE, { updateCursor: true });\n  }\n\n  public sync(camera: Camera): void {\n    this.updateRange(camera, camera.zoom);\n\n    this._xMotion.reset(camera.yaw);\n    this._yMotion.reset(camera.pitch);\n  }\n\n  private _bindInputs() {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n    const keyboardInput = this._keyboardInput;\n\n    mouseInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    mouseInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    mouseInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    touchInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    touchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    touchInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    keyboardInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    keyboardInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    keyboardInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n  }\n\n  private _onInputStart = (evt: InputEvents<RotateDeltaType>[typeof CONTROL_EVENTS.INPUT_START]) => {\n    this._changedWhileDragging = false;\n    this.trigger(CONTROL_EVENTS.INPUT_START, {\n      ...evt,\n      inputType: \"rotate\"\n    });\n  };\n\n  private _onChange = (evt: InputEvents<RotateDeltaType>[typeof CONTROL_EVENTS.CHANGE]) => {\n    const delta = evt.delta;\n    const invZoomScale = 1 / this._zoomScale; // Reduce speed on zoom\n    const screenScale = this._screenScale;\n    const keyboardScale = this._keyboardScale;\n    const pointerScale = this._pointerScale;\n\n    let scale: [number, number];\n\n    if (evt.isKeyboard) {\n      scale = [\n        keyboardScale[0] * invZoomScale,\n        keyboardScale[1] * invZoomScale\n      ];\n    } else {\n      scale = [\n        pointerScale[0] * screenScale[0] * invZoomScale,\n        pointerScale[1] * screenScale[1] * invZoomScale\n      ];\n    }\n\n    const scaledX = delta.x * scale[0];\n    const scaledY = delta.y * scale[1];\n\n    this._xMotion.setNewEndByDelta(scaledX);\n    this._yMotion.setNewEndByDelta(scaledY);\n\n    this._changedWhileDragging = true;\n  }\n\n  private _onInputEnd = (evt: InputEvents<RotateDeltaType>[typeof CONTROL_EVENTS.INPUT_END]) => {\n    this.trigger(CONTROL_EVENTS.INPUT_END, {\n      ...evt,\n      inputType: \"rotate\"\n    });\n\n    if (!this._changedWhileDragging && !evt.isKeyboard && !evt.scrolling) {\n      this.trigger(CONTROL_EVENTS.STATIC_CLICK, {\n        isTouch: evt.isTouch\n      });\n    }\n\n    this._changedWhileDragging = false;\n  };\n}\n\nexport default RotateControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS, DEFAULT_ANIMATION_DURATION } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\n\nclass WheelInput extends Component<InputEvents<number, WheelEvent>> {\n  private _el: HTMLElement | null;\n  private _scrollable: boolean;\n  private _baseScale: number;\n  private _inputTimer: number;\n\n  public get scrollable() { return this._scrollable; }\n  public set scrollable(val: boolean) { this._scrollable = val; }\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._baseScale = 0.04;\n    this._scrollable = false;\n    this._inputTimer = -1;\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.WHEEL, this._onWheel, { passive: false, capture: false });\n\n    this._el = element;\n    this._clearTimer();\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.WHEEL, this._onWheel, false);\n\n    this._el = null;\n    this._clearTimer();\n  }\n\n  private _onWheel = (evt: WheelEvent) => {\n    const scrollable = this._scrollable;\n\n    if (evt.deltaY === 0 || scrollable) return;\n\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    if (this._inputTimer < 0) {\n      this.trigger(CONTROL_EVENTS.INPUT_START, {\n        srcEvent: evt,\n        isTouch: false,\n        isKeyboard: false\n      });\n    } else {\n      this._clearTimer();\n    }\n\n    const delta = this._baseScale * evt.deltaY;\n\n    this.trigger(CONTROL_EVENTS.CHANGE, {\n      delta,\n      isTouch: false,\n      isKeyboard: false\n    });\n\n    this._inputTimer = window.setTimeout(() => {\n      this.trigger(CONTROL_EVENTS.INPUT_END, {\n        isTouch: false,\n        isKeyboard: false,\n        scrolling: false\n      });\n      this._inputTimer = -1;\n    }, DEFAULT_ANIMATION_DURATION);\n  };\n\n  private _clearTimer() {\n    window.clearTimeout(this._inputTimer);\n    this._inputTimer = -1;\n  }\n}\n\nexport default WheelInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\n\nclass PinchInput extends Component<InputEvents<number, TouchEvent>> {\n  private _el: HTMLElement | null;\n  private _baseScale: number;\n  private _prevDistance: number;\n  private _isFirstTouch: boolean;\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._baseScale = -0.2;\n    this._prevDistance = -1;\n    this._isFirstTouch = true;\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.TOUCH_MOVE, this._onTouchMove, { passive: false, capture: false });\n    element.addEventListener(BROWSER.EVENTS.TOUCH_END, this._onTouchEnd);\n\n    this._el = element;\n    this._prevDistance = -1;\n    this._isFirstTouch = true;\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_MOVE, this._onTouchMove, false);\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_END, this._onTouchEnd);\n\n    this._el = null;\n  }\n\n  private _onTouchMove = (evt: TouchEvent) => {\n    const touches = evt.touches;\n    if (touches.length !== 2) return;\n\n    if (!evt.cancelable) return;\n\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const prevDistance = this._prevDistance;\n\n    const diff = [\n      touches[0].pageX - touches[1].pageX,\n      touches[0].pageY - touches[1].pageY\n    ];\n\n    const distance = Math.sqrt(diff[0] * diff[0] + diff[1] * diff[1]) * this._baseScale;\n    const delta = this._isFirstTouch\n      ? 0\n      : distance - prevDistance;\n\n    if (this._isFirstTouch) {\n      this.trigger(CONTROL_EVENTS.INPUT_START, {\n        srcEvent: evt,\n        isTouch: true,\n        isKeyboard: false\n      });\n    }\n\n    this._prevDistance = distance;\n    this._isFirstTouch = false;\n\n    this.trigger(CONTROL_EVENTS.CHANGE, {\n      delta,\n      isTouch: true,\n      isKeyboard: false\n    });\n  };\n\n  private _onTouchEnd = (evt: TouchEvent) => {\n    if (evt.touches.length !== 0) return;\n\n    if (!this._isFirstTouch) {\n      this.trigger(CONTROL_EVENTS.INPUT_END, {\n        isTouch: true,\n        isKeyboard: false,\n        scrolling: false\n      });\n    }\n\n    this._prevDistance = -1;\n    this._isFirstTouch = true;\n  };\n}\n\nexport default PinchInput;\n","/*\n* Copyright (c) 2023-present NAVER Corp.\n* egjs projects are licensed under the MIT license\n*/\nimport Component from \"@egjs/component\";\nimport CameraControl from \"./CameraControl\";\nimport WheelInput from \"./input/WheelInput\";\nimport PinchInput from \"./input/PinchInput\";\nimport Camera from \"../core/Camera\";\nimport Motion from \"../core/Motion\";\nimport {\n  CONTROL_EVENTS,\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_EASING,\n  INFINITE_RANGE\n} from \"../const/internal\";\nimport { ControlEvents, InputEvents } from \"../type/internal\";\n\n/**\n * Options for {@link ZoomControl}\n * @ko {@link ZoomControl}용 옵션들\n * @since 4.0.0\n */\nexport interface ZoomControlOptions {\n  /**\n   * @copy ZoomControl#scale\n   */\n  scale: number;\n  /**\n   * @copy ZoomControl#duration\n   */\n  duration: number;\n  /**\n   * @copy ZoomControl#easing\n   */\n  easing: (x: number) => number;\n}\n\ntype ZoomControlEvents = ControlEvents<number>;\n\n/**\n * Camera's zoom control\n * @ko 카메라의 줌 값을 담당하는 컨트롤\n * @since 4.0.0\n */\nclass ZoomControl extends Component<ZoomControlEvents> implements CameraControl {\n  // Options\n  private _scale: ZoomControlOptions[\"scale\"];\n\n  // Internal values\n  private _controlEl: HTMLElement;\n  private _enableBlocked: boolean;\n  private _wheelInput: WheelInput;\n  private _pinchInput: PinchInput;\n  private _motion: Motion;\n  private _enabled: boolean;\n\n  /**\n   * @copy CameraControl#enabled\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * @hidden\n   */\n  public get enableBlocked() { return this._enableBlocked; }\n  /**\n   * @copy CameraControl#animating\n   */\n  public get animating() { return this._motion.activated; }\n  /**\n   * Current zoom value\n   * @ko 현재 줌 값\n   * @since 4.0.0\n   * @readonly\n   */\n  public get zoom() { return this._motion.val; }\n  /**\n   * @copy View360#wheelScrollable\n   */\n  public get scrollable() { return this._wheelInput.scrollable; }\n  public set scrollable(val: boolean) {\n    this._wheelInput.scrollable = val;\n  }\n  /**\n   * @hidden\n   */\n  public get range() { return this._motion.range; }\n\n  /**\n   * Scale factor of the zoom\n   * @ko 입력에 의한 줌 배율\n   * @default 1\n   * @since 4.0.0\n   */\n  public get scale() { return this._scale; }\n  public set scale(val: ZoomControlOptions[\"scale\"]) { this._scale = val; }\n\n  /**\n   * Duration of the input animation (ms)\n   * @ko 회전 애니메이션의 시간 (ms)\n   * @default 300\n   * @since 4.0.0\n   */\n  public get duration() { return this._motion.duration; }\n\n  /**\n   * Easing function of the animation\n   * @ko 회전 애니메이션에 적용할 easing 함수\n   * @default EASING.EASE_OUT_CUBIC\n   * @see EASING\n   * @since 4.0.0\n   */\n  public get easing() { return this._motion.easing; }\n\n  /**\n   * Create new ZoomControl instance\n   * @ko ZoomControl의 인스턴스를 생성합니다.\n   * @param controlEl - Element to attach handlers {@ko 입력을 받을 엘리먼트}\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\n   * @param options - Options for control {@ko 컨트롤 옵션들}\n   */\n  public constructor(controlEl: HTMLElement, enableBlocked: boolean, {\n    scale = 1,\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING\n  }: Partial<ZoomControlOptions> = {}) {\n    super();\n\n    this._scale = scale;\n\n    this._controlEl = controlEl;\n    this._enableBlocked = enableBlocked;\n    this._wheelInput = new WheelInput();\n    this._pinchInput = new PinchInput();\n    this._motion = new Motion({\n      duration,\n      easing,\n      range: INFINITE_RANGE\n    });\n    this._enabled = false;\n\n    this._bindInputs();\n  }\n\n  public destroy(): void {\n    this.disable();\n    this._wheelInput.off();\n    this._pinchInput.off();\n    this.off();\n  }\n\n  /**\n   * @hidden\n   */\n  public update(delta: number): void {\n    if (!this._enabled) return;\n\n    const motion = this._motion;\n    motion.update(delta);\n  }\n\n  public enable(): void {\n    if (this._enabled) return;\n\n    const element = this._controlEl;\n    this._wheelInput.enable(element);\n    this._pinchInput.enable(element);\n\n    this._enabled = true;\n    this._enableBlocked = false;\n\n    this.trigger(CONTROL_EVENTS.ENABLE, { control: this, updateCursor: false });\n  }\n\n  public disable(): void {\n    if (!this._enabled) return;\n\n    this._wheelInput.disable();\n    this._pinchInput.disable();\n\n    this._enabled = false;\n\n    this.trigger(CONTROL_EVENTS.DISABLE, { updateCursor: false });\n  }\n\n  public sync(camera: Camera): void {\n    const motion = this._motion;\n    const range = camera.getZoomRange();\n\n    motion.setRange(range.min, range.max);\n    motion.reset(range.current);\n  }\n\n  private _bindInputs() {\n    const wheelInput = this._wheelInput;\n    const pinchInput = this._pinchInput;\n\n    wheelInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    wheelInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    wheelInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    pinchInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    pinchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    pinchInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n  }\n\n  private _onInputStart = (evt: InputEvents<number>[typeof CONTROL_EVENTS.INPUT_START]) => {\n    this.trigger(CONTROL_EVENTS.INPUT_START, {\n      ...evt,\n      inputType: \"zoom\"\n    });\n  };\n\n  private _onChange = ({ delta }: InputEvents<number>[typeof CONTROL_EVENTS.CHANGE]) => {\n    const scale = this._scale;\n    const scaledDelta = delta * scale;\n\n    this._motion.setNewEndByDelta(scaledDelta);\n  };\n\n  private _onInputEnd = (evt: InputEvents<number>[typeof CONTROL_EVENTS.INPUT_END]) => {\n    this.trigger(CONTROL_EVENTS.INPUT_END, {\n      ...evt,\n      inputType: \"zoom\"\n    });\n  };\n}\n\nexport default ZoomControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport { quat, vec3 } from \"gl-matrix\";\nimport * as BROWSER from \"../../const/browser\";\nimport { DEG_TO_RAD, RAD_TO_DEG } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\nimport { quatToEuler } from \"../../utils\";\n\nexport const ROTATE_CONSTANT = {\n  PITCH_DELTA: 1,\n  YAW_DELTA_BY_ROLL: 2,\n  YAW_DELTA_BY_YAW: 3\n} as const;\n\nROTATE_CONSTANT[ROTATE_CONSTANT.PITCH_DELTA] = {\n  targetAxis: [0, 1, 0],\n  meshPoint: [0, 0, 1]\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_ROLL] = {\n  targetAxis: [0, 1, 0],\n  meshPoint: [1, 0, 0]\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_YAW] = {\n  targetAxis: [1, 0, 0],\n  meshPoint: [0, 0, 1]\n};\n\nclass GyroInput extends Component<InputEvents<{ x: number, y: number, z: number }, MouseEvent>> {\n  public quaternion: quat;\n\n  private _ignoreRoll: boolean;\n\n  private _yawOrigin: number;\n  private _yawOffset: number;\n  private _orientation: {\n    alpha: number;\n    beta: number;\n    gamma: number;\n  }\n  private _orientationUpdated: boolean;\n  private _needsCalibrate: boolean;\n  private _screenOrientation: number;\n  private _enabled: boolean;\n\n  public get enabled() { return this._enabled; }\n  public get orientationUpdated() { return this._orientationUpdated; }\n  public get ignoreRoll() { return this._ignoreRoll; }\n  public set ignoreRoll(val: boolean) { this._ignoreRoll = val; }\n\n  public constructor() {\n    super();\n\n    this.quaternion = quat.create();\n\n    this._orientation = {\n      alpha: 0,\n      beta: 90,\n      gamma: 0\n    };\n    this._yawOrigin = 0;\n    this._yawOffset = 0;\n    this._orientationUpdated = false;\n    this._screenOrientation = 0;\n    this._needsCalibrate = true;\n    this._enabled = false;\n  }\n\n  public enable() {\n    if (this._enabled) return;\n\n    window.addEventListener(BROWSER.EVENTS.DEVICE_ORIENTATION, this._onDeviceOrientation);\n    window.addEventListener(BROWSER.EVENTS.ORIENTATION_CHANGE, this._updateScreenOrientation);\n\n    this._updateScreenOrientation();\n    this._orientationUpdated = false;\n    this._needsCalibrate = true;\n    this._enabled = true;\n  }\n\n  public disable() {\n    if (!this._enabled) return;\n\n    window.removeEventListener(BROWSER.EVENTS.DEVICE_ORIENTATION, this._onDeviceOrientation);\n    window.removeEventListener(BROWSER.EVENTS.ORIENTATION_CHANGE, this._updateScreenOrientation);\n\n    this._enabled = false;\n  }\n\n  public update() {\n    this._updateRotation();\n    this._orientationUpdated = false;\n  }\n\n  public collectDelta() {\n    if (!this._orientationUpdated) {\n      return {\n        pitch: 0,\n        yaw: 0\n      };\n    }\n\n    const prevRotation = quat.clone(this.quaternion);\n\n    this._updateRotation();\n    this._orientationUpdated = false;\n\n    return this._toEulerDelta(prevRotation, this.quaternion);\n  }\n\n  public setInitialRotation(yaw: number) {\n    this._yawOrigin = yaw;\n  }\n\n  private _onDeviceOrientation = (evt: DeviceOrientationEvent) => {\n    const prevOrientation = this._orientation;\n    const { alpha, beta, gamma } = evt;\n\n    if (\n      alpha == null\n      || beta == null\n      || gamma == null\n    ) return;\n\n    prevOrientation.alpha = alpha;\n    prevOrientation.beta = beta;\n    prevOrientation.gamma = gamma;\n\n    this._orientationUpdated = true;\n\n    if (this._needsCalibrate) {\n      this._needsCalibrate = false;\n      this._calibrateSensor();\n    }\n  };\n\n  private _calibrateSensor() {\n    const yawOrigin = this._yawOrigin;\n    const rotation = this.quaternion;\n\n    this._yawOffset = 0;\n    this._updateRotation();\n\n    const { yaw: sensorYaw } = quatToEuler(rotation);\n    this._yawOffset = sensorYaw - yawOrigin;\n    this._updateRotation();\n\n    this._needsCalibrate = false;\n  }\n\n  private _updateRotation() {\n    const rotation = this.quaternion;\n    const { alpha, beta, gamma } = this._orientation;\n\n    quat.identity(rotation);\n    quat.rotateY(rotation, rotation, (alpha - this._yawOffset) * DEG_TO_RAD);\n    quat.rotateX(rotation, rotation, beta * DEG_TO_RAD);\n    quat.rotateZ(rotation, rotation, -gamma * DEG_TO_RAD);\n\n    const screen = quat.create();\n    const screenAngle = -this._screenOrientation * 0.5 * DEG_TO_RAD;\n    const world = quat.fromValues(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n\n    quat.set(screen, 0, Math.sin(screenAngle), 0, Math.cos(screenAngle));\n    quat.multiply(rotation, rotation, screen);\n    quat.multiply(rotation, rotation, world);\n\n    quat.normalize(rotation, rotation);\n  }\n\n  private _updateScreenOrientation = () => {\n    if (window.screen && window.screen.orientation && window.screen.orientation.angle !== undefined) {\n      this._screenOrientation = screen.orientation.angle;\n    } else if (window.orientation !== undefined) {\n      this._screenOrientation = window.orientation >= 0 ?\n        window.orientation : 360 + window.orientation;\n    } else {\n      this._screenOrientation = 0;\n    }\n  }\n\n  private _toEulerDelta(prevQuat: quat, currentQuat: quat) {\n    return {\n      yaw: this._getDeltaYaw(prevQuat, currentQuat),\n      pitch: this._getDeltaPitch(prevQuat, currentQuat),\n    };\n  }\n\n  private _getDeltaYaw(prvQ: quat, curQ: quat): number {\n    const yawDeltaByYaw = this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_YAW);\n    const yawDeltaByRoll = this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_ROLL)\n      * Math.sin(this._extractPitchFromQuat(curQ));\n\n    return yawDeltaByRoll + yawDeltaByYaw;\n  }\n\n  private _getDeltaPitch(prvQ: quat, curQ: quat): number {\n    return this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.PITCH_DELTA);\n  }\n\n  private _getRotationDelta(prevQ: quat, curQ: quat, rotateKind: typeof ROTATE_CONSTANT[keyof typeof ROTATE_CONSTANT]) {\n    const targetAxis = vec3.fromValues(\n      ROTATE_CONSTANT[rotateKind].targetAxis[0],\n      ROTATE_CONSTANT[rotateKind].targetAxis[1],\n      ROTATE_CONSTANT[rotateKind].targetAxis[2]\n    );\n    const meshPoint = ROTATE_CONSTANT[rotateKind].meshPoint;\n\n    const prevQuaternion = quat.clone(prevQ);\n    const curQuaternion = quat.clone(curQ);\n\n    quat.normalize(prevQuaternion, prevQuaternion);\n    quat.normalize(curQuaternion, curQuaternion);\n\n    let prevPoint = vec3.fromValues(0, 0, 1);\n    let curPoint = vec3.fromValues(0, 0, 1);\n\n    vec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n    vec3.transformQuat(curPoint, curPoint, curQuaternion);\n    vec3.transformQuat(targetAxis, targetAxis, curQuaternion);\n\n    const rotateDistance = vec3.dot(targetAxis, vec3.cross(vec3.create(), prevPoint, curPoint));\n    const rotateDirection = rotateDistance > 0 ? 1 : -1;\n\n    // when counter clock wise, use vec3.fromValues(0,1,0)\n    // when clock wise, use vec3.fromValues(0,-1,0)\n    // const meshPoint1 = vec3.fromValues(0, 0, 0);\n    const meshPoint2 = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\n    let meshPoint3;\n\n    if (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n      meshPoint3 = vec3.fromValues(0, rotateDirection, 0);\n    } else {\n      meshPoint3 = vec3.fromValues(rotateDirection, 0, 0);\n    }\n\n    vec3.transformQuat(meshPoint2, meshPoint2, curQuaternion);\n    vec3.transformQuat(meshPoint3, meshPoint3, curQuaternion);\n\n    const vecU = meshPoint2;\n    const vecV = meshPoint3;\n    const vecN = vec3.create();\n\n    vec3.cross(vecN, vecU, vecV);\n    vec3.normalize(vecN, vecN);\n\n    const coefficientA = vecN[0];\n    const coefficientB = vecN[1];\n    const coefficientC = vecN[2];\n\n    // a point on the plane\n    curPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n    vec3.transformQuat(curPoint, curPoint, curQuaternion);\n\n    // a point should project on the plane\n    prevPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n    vec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n\n    // distance between prevPoint and the plane\n    let distance = Math.abs(\n      prevPoint[0] * coefficientA +\n      prevPoint[1] * coefficientB +\n      prevPoint[2] * coefficientC\n    );\n\n    const projectedPrevPoint = vec3.create();\n\n    vec3.subtract(projectedPrevPoint, prevPoint, vec3.scale(vec3.create(), vecN, distance));\n\n    let trigonometricRatio =\n      (projectedPrevPoint[0] * curPoint[0] +\n      projectedPrevPoint[1] * curPoint[1] +\n      projectedPrevPoint[2] * curPoint[2]) /\n      (vec3.length(projectedPrevPoint) * vec3.length(curPoint));\n\n    // defensive block\n    if (trigonometricRatio > 1) {\n      trigonometricRatio = 1;\n    }\n\n    const theta = Math.acos(trigonometricRatio);\n\n    const crossVec = vec3.cross(vec3.create(), curPoint, projectedPrevPoint);\n\n    distance = coefficientA * crossVec[0]\n      + coefficientB * crossVec[1]\n      + coefficientC * crossVec[2];\n\n    let thetaDirection: number;\n\n    if (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n      thetaDirection = distance > 0 ? 1 : -1;\n    } else {\n      thetaDirection = distance < 0 ? 1 : -1;\n    }\n\n    const deltaRadian = theta * thetaDirection * rotateDirection;\n\n    return deltaRadian * RAD_TO_DEG;\n  }\n\n  private _extractPitchFromQuat(quaternion: quat) {\n    const baseV = vec3.fromValues(0, 0, 1);\n    vec3.transformQuat(baseV, baseV, quaternion);\n\n    return -1 * Math.atan2(\n      baseV[1],\n      Math.sqrt(Math.pow(baseV[0], 2) + Math.pow(baseV[2], 2)));\n  }\n}\n\nexport default GyroInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport CameraControl from \"./CameraControl\";\nimport GyroInput from \"./input/GyroInput\";\nimport Motion from \"../core/Motion\";\nimport Camera from \"../core/Camera\";\nimport * as BROWSER from \"../const/browser\";\nimport { CONTROL_EVENTS } from \"../const/internal\";\nimport { ControlEvents } from \"../type/internal\";\nimport { sensorCanBeEnabledIOS } from \"../utils\";\n\n/**\n * Options for {@link GyroControl}\n * @ko {@link GyroControl}용 옵션들\n * @since 4.0.0\n */\nexport interface GyroControlOptions {\n  /**\n   * @copy GyroControl#ignoreRoll\n   */\n  ignoreRoll: boolean;\n}\n\nexport type GyroControlEvents = ControlEvents<void>;\n\n/**\n * Camera's rotation control by gyroscope\n * @ko 자이로스코프를 이용한 회전 컨트롤\n * @since 4.0.0\n */\nclass GyroControl extends Component<GyroControlEvents> implements CameraControl {\n  // Options\n  private _ignoreRoll: GyroControlOptions[\"ignoreRoll\"];\n\n  // Internal values\n  private _enableBlocked: boolean;\n  private _input: GyroInput;\n\n  /**\n   * @copy CameraControl#enabled\n   */\n  public get enabled() { return this._input.enabled; }\n  /**\n   * @hidden\n   */\n  public get enableBlocked() { return this._enableBlocked; }\n  /**\n   * @copy CameraControl#animating\n   */\n  public get animating() {\n    return this._input.enabled && this._input.orientationUpdated;\n  }\n\n  /**\n   * When `true`, ignore gyroscope's roll(z-axis rotation) value.\n   * :::caution\n   * Setting `false` will ignore camera's range limit.\n   * Options like {@link View360Options#yawRange}, {@link View360Options#pitchRange} are ignored, and {@link CylinderProjection} also can't force it's camera range limit.\n   * :::\n   * @ko `true`일 경우 자이로스코프 입력의 roll(z축 회전)값을 무시합니다.\n   * :::caution\n   * 이 값을 `false`로 설정할 경우 카메라 범위 제약을 무시합니다.\n   * {@link View360Options#yawRange}, {@link View360Options#pitchRange}와 같은 값은 무시되며, {@link CylinderProjection} 사용시에도 범위를 벗어날 수 있습니다.\n   * :::\n   * @default true\n   * @since 4.0.0\n   */\n  public get ignoreRoll() { return this._ignoreRoll; }\n  public set ignoreRoll(val: GyroControlOptions[\"ignoreRoll\"]) { this._ignoreRoll = val; }\n\n  /**\n   * Return availability of the gyroscope.\n   * :::caution\n   * This will always return false until user permission under environments like iOS which requires user permission when using gyroscope.\n   * :::\n   * @ko 자이로스코프 사용 가능 여부를 반환합니다.\n   * :::caution\n   * iOS와 같이 GyroScope 사용시 사용자 Permission을 요구하는 환경에서는 사용자 Permission을 받기 전까지 항상 `false`입니다.\n   * :::\n   * @example\n   * ```ts\n   * const gyroAvailable = await GyroControl.isAvailable();\n   * ```\n   */\n  public static async isAvailable(): Promise<boolean> {\n    if (!DeviceMotionEvent) {\n      return false;\n    }\n\n    let onDeviceMotionChange: (evt: DeviceMotionEvent) => void;\n\n    const listenDeviceMotion = () => new Promise(res => {\n      onDeviceMotionChange = (evt: DeviceMotionEvent) => {\n        res(evt.rotationRate && evt.rotationRate.alpha != null);\n      };\n\n      window.addEventListener(BROWSER.EVENTS.DEVICE_MOTION, onDeviceMotionChange);\n    });\n\n    const timeout = () => new Promise(res => {\n      setTimeout(() => res(false), 1000);\n    });\n\n    return Promise.race([listenDeviceMotion(), timeout()])\n      .then((available: boolean) => {\n        window.removeEventListener(BROWSER.EVENTS.DEVICE_MOTION, onDeviceMotionChange);\n\n        return available;\n      });\n  }\n\n  /**\n   * Request user permission for gyroscope sensor.\n   * This can be used in environments like iOS which requires user permission when using gyroscope sensors.\n   * @ko 사용자의 sensor permission 취득을 요청합니다.\n   * iOS와 같이 gyroscope 사용시 사용자 Permission을 요구하는 환경에서 사용 가능합니다.\n   * @returns Whether the permission is granted {@ko 사용자 permission 취득 여부}\n   */\n  public static async requestSensorPermission(): Promise<boolean> {\n    // Request sensor permission, on iOS13+\n    if (sensorCanBeEnabledIOS()) {\n      return (DeviceMotionEvent as typeof DeviceMotionEvent & {\n        requestPermission: () => Promise<string>;\n      }).requestPermission().then(permissionState => {\n        return permissionState === \"granted\";\n      }).catch(() => false);\n    }\n\n    return true;\n  }\n\n  /**\n   * Create new GyroControl instance\n   * @ko GyroControl의 인스턴스를 생성합니다.\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\n   * @param options - Options for control {@ko 컨트롤 옵션들}\n   */\n  public constructor(enableBlocked: boolean, {\n    ignoreRoll = true\n  }: Partial<GyroControlOptions> = {}) {\n    super();\n\n    this._enableBlocked = enableBlocked;\n    this._ignoreRoll = ignoreRoll;\n    this._input = new GyroInput();\n  }\n\n  /**\n   * @copy CameraControl#destroy\n   */\n  public destroy(): void {\n    this.disable();\n    this._input.off();\n    this.off();\n  }\n\n  /**\n   * @hidden\n   */\n  public update(camera: Camera, yaw: Motion, pitch: Motion, zoom: number) {\n    if (!this._ignoreRoll) {\n      this._updateQuaternion(camera, zoom);\n    } else {\n      this._updateYawPitch(camera, yaw, pitch, zoom);\n    }\n  }\n\n  /**\n   * @copy CameraControl#enable\n   */\n  public enable(): void {\n    if (this._input.enabled) return;\n\n    this._input.enable();\n    this._enableBlocked = false;\n    this.trigger(CONTROL_EVENTS.ENABLE, { control: this, updateCursor: false });\n  }\n\n  /**\n   * @copy CameraControl#disable\n   */\n  public disable(): void {\n    if (!this._input.enabled) return;\n\n    this._input.disable();\n    this.trigger(CONTROL_EVENTS.DISABLE, { updateCursor: false });\n  }\n\n  /**\n   * @copy CameraControl#sync\n   */\n  public sync(): void {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  private _updateYawPitch(camera: Camera, yaw: Motion, pitch: Motion, zoom: number) {\n    const input = this._input;\n    if (!input.enabled) return;\n\n    const {\n      yaw: yawDelta,\n      pitch: pitchDelta\n    } = input.collectDelta();\n\n    yaw.add(yawDelta);\n    pitch.add(pitchDelta);\n\n    camera.lookAt({\n      yaw: yaw.val,\n      pitch: pitch.val,\n      zoom\n    });\n  }\n\n  private _updateQuaternion(camera: Camera, zoom: number) {\n    const input = this._input;\n    if (!input.enabled) return;\n\n    input.update();\n    camera.rotate(input.quaternion, zoom);\n  }\n}\n\nexport default GyroControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport CameraControl from \"./CameraControl\";\nimport RotateControl, { RotateControlEvents, RotateControlOptions } from \"./RotateControl\";\nimport ZoomControl, { ZoomControlOptions } from \"./ZoomControl\";\nimport GyroControl, { GyroControlOptions } from \"./GyroControl\";\nimport Camera from \"../core/Camera\";\nimport CameraAnimation from \"../core/CameraAnimation\";\nimport * as BROWSER from \"../const/browser\";\nimport { CAMERA_EVENTS, CONTROL_EVENTS } from \"../const/internal\";\nimport { ValueOf } from \"../type/utils\";\nimport { getObjectOption, hfovToZoom } from \"../utils\";\n\n/**\n * Options for {@link PanoControl}\n * @ko {@link PanoControl}용 옵션들\n * @since 4.0.0\n */\nexport interface PanoControlOptions {\n  /**\n   * @copy View360#useGrabCursor\n   */\n  useGrabCursor: boolean;\n  /**\n   * @copy View360#scrollable\n   */\n  scrollable: boolean;\n  /**\n   * @copy View360#wheelScrollable\n   */\n  wheelScrollable: boolean;\n  /**\n   * @copy View360#disableContextMenu\n   */\n  disableContextMenu: boolean;\n  /**\n   * Options for {@link RotateControl}.\n   * `false` to disable rotation.\n   * @ko {@link RotateControl}용 옵션들.\n   * `false`일 경우 회전이 비활성화됩니다.\n   * @since 4.0.0\n   */\n  rotate: boolean | Partial<RotateControlOptions>;\n  /**\n   * Options for {@link ZoomControl}.\n   * `false` to disable zoom.\n   * @ko {@link ZoomControl}용 옵션들.\n   * `false`일 경우 줌이 비활성화됩니다.\n   * @since 4.0.0\n   */\n  zoom: boolean | Partial<ZoomControlOptions>;\n  /**\n   * Options for {@link GyroControl}.\n   * `false` to disable gyroscope control.\n   * @ko {@link GyroControl}용 옵션들.\n   * `false`일 경우 자이로스코프를 통한 컨트롤이 비활성화됩니다.\n   * @since 4.0.0\n   */\n  gyro: boolean | Partial<GyroControlOptions>;\n}\n\n/**\n * Panorama control for View360\n * @ko View360용 파노라마 컨트롤\n * @since 4.0.0\n */\nclass PanoControl {\n  // Options\n  private _useGrabCursor: PanoControlOptions[\"useGrabCursor\"];\n  private _disableContextMenu: PanoControlOptions[\"disableContextMenu\"];\n\n  // Internal Values\n  private _camera: Camera;\n  private _controlEl: HTMLElement;\n  private _rotateControl: RotateControl;\n  private _zoomControl: ZoomControl;\n  private _gyroControl: GyroControl;\n  private _ignoreZoomScale: boolean;\n  private _enabled: boolean;\n\n  /**\n   * @copy View360#useGrabCursor\n   */\n  public get useGrabCursor() { return this._useGrabCursor; }\n  public set useGrabCursor(val: PanoControlOptions[\"useGrabCursor\"]) {\n    if (val === this._useGrabCursor) return;\n\n    this._useGrabCursor = val;\n\n    if (val && this._enabled) {\n      this._setCursor(BROWSER.CURSOR.GRAB);\n    } else if (!val) {\n      this._setCursor(BROWSER.CURSOR.NONE);\n    }\n  }\n\n  /**\n   * @copy View360#disableContextMenu\n   */\n  public get disableContextMenu() { return this._disableContextMenu; }\n  public set disableContextMenu(val: PanoControlOptions[\"disableContextMenu\"]) {\n    if (val === this._disableContextMenu) return;\n\n    this._disableContextMenu = val;\n\n    if (val && this._enabled) {\n      this._blockContextMenu();\n    } else if (!val) {\n      this._restoreContextMenu();\n    }\n  }\n\n  /**\n   * @copy View360#disableContextMenu\n   */\n  public get scrollable() { return this._rotateControl.scrollable; }\n  public set scrollable(val: PanoControlOptions[\"scrollable\"]) { this._rotateControl.scrollable = val; }\n  /**\n   * @copy View360#disableContextMenu\n   */\n  public get wheelScrollable() { return this._zoomControl.scrollable; }\n  public set wheelScrollable(val: PanoControlOptions[\"wheelScrollable\"]) { this._zoomControl.scrollable = val; }\n  /**\n   * When `true`, disables rotation slow-down by zoom-value.\n   * @ko `true`일 경우 줌 된 정도에 따라 회전속도를 늦추는 동작을 비활성화합니다.\n   * @since 4.0.0\n   */\n  public get ignoreZoomScale() { return this._ignoreZoomScale; }\n  public set ignoreZoomScale(val: boolean) { this._ignoreZoomScale = val; }\n\n  /**\n   * Whether the control is enabled or not\n   * @ko 컨트롤 활성화 여부를 가리키는 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * @copy View360#rotate\n   */\n  public get rotate() { return this._rotateControl; }\n  /**\n   * @copy View360#zoom\n   */\n  public get zoom() { return this._zoomControl; }\n  /**\n   * @copy View360#gyro\n   */\n  public get gyro() { return this._gyroControl; }\n\n  /**\n   * Whether one of the controls is animating at the moment\n   * @ko 현재 컨트롤 중 하나라도 동작중인지 여부를 나타내는 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get animating() {\n    return this._rotateControl.animating\n      || this._zoomControl.animating\n      || this._gyroControl.animating;\n  }\n\n  /**\n   * Create new instance.\n   * @ko 새 인스턴스를 생성합니다.\n   * @param element - Canvas element {@ko 캔버스 엘리먼트}\n   * @param camera - Camera instance {@ko Camera 인스턴스}\n   * @param options - Options for PanoControl {@ko PanoControl 옵션들}\n   */\n  public constructor(element: HTMLElement, camera: Camera, {\n    useGrabCursor,\n    scrollable,\n    wheelScrollable,\n    disableContextMenu,\n    rotate,\n    zoom,\n    gyro\n  }: PanoControlOptions) {\n    // Bind Options\n    this._useGrabCursor = useGrabCursor;\n    this._disableContextMenu = disableContextMenu;\n\n    // Set internal values\n    this._camera = camera;\n    this._controlEl = element;\n    this._ignoreZoomScale = false;\n    this._enabled = false;\n\n    this._rotateControl = new RotateControl(element, !rotate, getObjectOption(rotate));\n    this._zoomControl = new ZoomControl(element, !zoom, getObjectOption(zoom));\n    this._gyroControl = new GyroControl(!gyro, getObjectOption(gyro));\n\n    this._rotateControl.scrollable = scrollable;\n    this._zoomControl.scrollable = wheelScrollable;\n\n    this._bindEvents();\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached.\n   * This also will reset CSS cursor to initial.\n   * @ko 인스턴스를 삭제하고 부착된 모든 이벤트 리스너를 제거합니다.\n   * 또한, 캔버스에 적용된 CSS cursor도 제거합니다.\n   * @since 4.0.0\n   */\n  public destroy(): void {\n    this.disable();\n    this._rotateControl.destroy();\n    this._zoomControl.destroy();\n    this._setCursor(BROWSER.CURSOR.NONE);\n  }\n\n  /**\n   * Resize control to match target size.\n   * @ko 컨트롤이 내부에 캐시하고 있는 크기값을 갱신합니다.\n   * @param width New width {@ko 변경된 너비}\n   * @param height New height {@ko 변경된 높이}\n   * @since 4.0.0\n   */\n  public resize(width: number, height: number): void {\n    const camera = this._camera;\n\n    this._rotateControl.resize(camera.fov, camera.aspect, width, height);\n  }\n\n  /**\n   * Enable this control and add event listeners.\n   * @ko 컨트롤을 활성화하고 이벤트 리스너들을 추가합니다.\n   * @since 4.0.0\n   */\n  public async enable(): Promise<void> {\n    if (this._enabled) return;\n\n    if (!this._rotateControl.enableBlocked) {\n      this._rotateControl.enable();\n    }\n\n    if (!this._zoomControl.enableBlocked) {\n      this._zoomControl.enable();\n    }\n\n    if (!this._gyroControl.enableBlocked) {\n      if (await GyroControl.isAvailable()) {\n        this._gyroControl.enable();\n      }\n    }\n\n    this.sync();\n\n    if (this._disableContextMenu) {\n      this._blockContextMenu();\n    }\n\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control and remove all event listeners\n   * @ko 컨트롤을 비활성화하고 모든 이벤트 리스너들을 제거합니다.\n   * @since 4.0.0\n   */\n  public disable(): void {\n    if (!this._enabled) return;\n\n    this._rotateControl.disable();\n    this._zoomControl.disable();\n    this._gyroControl.disable();\n\n    this._restoreContextMenu();\n\n    this._enabled = false;\n  }\n\n  /**\n   * Update control by given deltaTime\n   * @ko 컨트롤을 주어진 시간만큼 업데이트합니다.\n   * @param delta Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\n   * @since 4.0.0\n   * @internal\n   */\n  public update(delta: number): void {\n    const camera = this._camera;\n    const rotateControl = this._rotateControl;\n    const zoomControl = this._zoomControl;\n    const gyroControl = this._gyroControl;\n\n    zoomControl.update(delta);\n    const zoom = hfovToZoom(camera.fov, zoomControl.zoom);\n\n    // Slow down rotation on zoom-in\n    const zoomScale = this._ignoreZoomScale ? 1 : Math.max(zoom, 1);\n    rotateControl.setZoomScale(zoomScale);\n    rotateControl.updateRange(camera, zoom);\n    rotateControl.update(delta);\n\n    const yaw = rotateControl.yaw;\n    const pitch = rotateControl.pitch;\n\n    if (gyroControl.enabled) {\n      gyroControl.update(camera, yaw, pitch, zoom);\n    } else {\n      camera.lookAt({\n        yaw: yaw.val,\n        pitch: pitch.val,\n        zoom\n      });\n    }\n  }\n\n  /**\n   * Synchronize this control's state to current camera state\n   * @ko 컨트롤을 카메라의 현재 상태와 동기화합니다.\n   * @since 4.0.0\n   */\n  public sync(): void {\n    const camera = this._camera;\n\n    this._zoomControl.sync(camera);\n    this._rotateControl.sync(camera);\n  }\n\n  private _blockContextMenu() {\n    const el = this._controlEl;\n\n    el.addEventListener(BROWSER.EVENTS.CONTEXT_MENU, this._preventContextMenu);\n  }\n\n  private _restoreContextMenu() {\n    const el = this._controlEl;\n\n    el.removeEventListener(BROWSER.EVENTS.CONTEXT_MENU, this._preventContextMenu);\n  }\n\n  private _preventContextMenu = (evt: MouseEvent) => {\n    evt.preventDefault();\n  };\n\n  private _setCursor(newCursor: ValueOf<typeof BROWSER.CURSOR>) {\n    if (!this._useGrabCursor && newCursor !== BROWSER.CURSOR.NONE) return;\n\n    const targetEl = this._controlEl;\n    targetEl.style.cursor = newCursor;\n  }\n\n  private _bindEvents() {\n    const rotateControl = this._rotateControl;\n    const zoomControl = this._zoomControl;\n\n    rotateControl.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    rotateControl.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    rotateControl.on(CONTROL_EVENTS.ENABLE, this._onEnable);\n    rotateControl.on(CONTROL_EVENTS.DISABLE, this._onDisable);\n    zoomControl.on(CONTROL_EVENTS.ENABLE, this._onEnable);\n    zoomControl.on(CONTROL_EVENTS.DISABLE, this._onDisable);\n    this._camera.on(CAMERA_EVENTS.ANIMATION_END, this._onCameraAnimationEnd);\n  }\n\n  private _onInputStart = (evt: RotateControlEvents[typeof CONTROL_EVENTS.INPUT_START]) => {\n    if (this._useGrabCursor && !evt.isKeyboard) {\n      this._setCursor(BROWSER.CURSOR.GRABBING);\n    }\n  };\n\n  private _onInputEnd = (evt: RotateControlEvents[typeof CONTROL_EVENTS.INPUT_END]) => {\n    if (this._useGrabCursor && !evt.isKeyboard) {\n      this._setCursor(BROWSER.CURSOR.GRAB);\n    }\n  };\n\n  private _onEnable = ({\n    control,\n    updateCursor\n  }: {\n    control: CameraControl;\n    updateCursor: boolean;\n  }) => {\n    if (updateCursor && this._useGrabCursor) {\n      this._setCursor(BROWSER.CURSOR.GRAB);\n    }\n\n    control.sync(this._camera);\n  };\n\n  private _onDisable = ({\n    updateCursor\n  }: {\n    updateCursor: boolean\n  }) => {\n    if (updateCursor) {\n      this._setCursor(BROWSER.CURSOR.NONE);\n    }\n  };\n\n  private _onCameraAnimationEnd = ({ animation }: { animation: CameraAnimation }) => {\n    animation.getFinishPromise().then(() => {\n      this.sync();\n    });\n  };\n}\n\nexport default PanoControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport TextureVideo from \"./TextureVideo\";\nimport TextureCube from \"./TextureCube\";\n\n/**\n * @hidden\n */\nabstract class Texture {\n  public width: number;\n  public height: number;\n  public flipY: boolean;\n  public wrapS: number;\n  public wrapT: number;\n\n  public constructor({\n    width,\n    height,\n    flipY\n  }: {\n    width: number;\n    height: number;\n    flipY: boolean;\n  }) {\n    this.width = width;\n    this.height = height;\n    this.flipY = flipY;\n    this.wrapS = WebGLRenderingContext.CLAMP_TO_EDGE;\n    this.wrapT = WebGLRenderingContext.CLAMP_TO_EDGE;\n  }\n\n  public destroy() {\n    // DO_NOTHING\n  }\n\n  public isVideo(): this is TextureVideo {\n    return false;\n  }\n\n  public isCube(): this is TextureCube {\n    return false;\n  }\n}\n\nexport default Texture;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture from \"./Texture\";\n\n/**\n * @hidden\n */\nclass Texture2D extends Texture {\n  public source: Exclude<TexImageSource, ImageData>;\n\n  public constructor({\n    source,\n    width,\n    height,\n    flipY\n  }: {\n    source: Exclude<TexImageSource, ImageData>;\n    width: number;\n    height: number;\n    flipY: boolean;\n  }) {\n    super({\n      width,\n      height,\n      flipY\n    });\n\n    this.source = source;\n  }\n}\n\nexport default Texture2D;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture2D from \"./Texture2D\";\n\n/**\n * @hidden\n */\nclass TextureVideo extends Texture2D {\n  public source: HTMLVideoElement;\n\n  public destroy() {\n    const video = this.source;\n\n    video.pause();\n    video.removeAttribute(\"src\");\n    video.load();\n  }\n\n  public isVideo(): this is TextureVideo { return true; }\n\n  public isPaused() {\n    const video = this.source;\n\n    return video.paused || video.ended || video.readyState <= 2;\n  }\n\n  public hasAudio() {\n    const video = this.source as any;\n\n    if (video.audioTracks) {\n      return video.audioTracks.length > 0;\n    }\n\n    if (video.webkitAudioDecodedByteCount != null) {\n      return video.webkitAudioDecodedByteCount > 0;\n    }\n\n    if (video.mozHasAudio != null) {\n      return video.mozHasAudio;\n    }\n\n    // We don't know whether the video has audio or not, return true\n    return true;\n  }\n}\n\nexport default TextureVideo;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture from \"./Texture\";\n\n/**\n * @hidden\n */\nclass TextureCube extends Texture {\n  public sources: TexImageSource[];\n\n  public constructor({\n    sources,\n    width,\n    height,\n    flipY\n  }: {\n    sources: TexImageSource[];\n    width: number;\n    height: number;\n    flipY: boolean;\n  }) {\n    super({\n      width,\n      height,\n      flipY\n    });\n\n    this.sources = sources;\n  }\n\n  public isCube(): this is TextureCube { return true; }\n}\n\nexport default TextureCube;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ImReady from \"@egjs/imready\";\nimport Texture from \"../texture/Texture\";\nimport Texture2D from \"../texture/Texture2D\";\nimport TextureVideo from \"../texture/TextureVideo\";\nimport TextureCube from \"../texture/TextureCube\";\nimport { getObjectOption, isString } from \"../utils\";\nimport { VideoConfig } from \"../type/external\";\nimport { ProjectionOptions } from \"../projection/Projection\";\n\n/**\n * @hidden\n */\nclass TextureLoader {\n  private _loadChecker: ImReady;\n\n  constructor() {\n    this._loadChecker = new ImReady();\n  }\n\n  public async load(src: ProjectionOptions[\"src\"], video: ProjectionOptions[\"video\"]): Promise<Texture> {\n    if (video) {\n      return this.loadVideo(src, getObjectOption(video));\n    } else {\n      if (Array.isArray(src) && src.length > 1) {\n        return this.loadCubeImage(src);\n      } else {\n        const imgSrc = Array.isArray(src) ? src[0] : src;\n        return this.loadImage(imgSrc);\n      }\n    }\n  }\n\n  public async loadImage(src: string | HTMLElement): Promise<Texture2D> {\n    const images = this._toImageArray(src);\n\n    return this._load(images, resolve => {\n      const image = images[0];\n\n      resolve(new Texture2D({\n        source: image,\n        width: image.naturalWidth,\n        height: image.naturalHeight,\n        flipY: true\n      }));\n    });\n  }\n\n  public async loadCubeImage(src: Array<string | HTMLElement>): Promise<TextureCube> {\n    const images = this._toImageArray(src);\n\n    return this._load(images, resolve => {\n      resolve(new TextureCube({\n        sources: images,\n        width: images[0].naturalWidth,\n        height: images[0].naturalHeight,\n        flipY: false\n      }));\n    });\n  }\n\n  public async loadVideo(src: ProjectionOptions[\"src\"], videoConfig: Partial<VideoConfig>): Promise<TextureVideo> {\n    const config: VideoConfig = {\n      autoplay: true,\n      muted: true,\n      loop: false,\n      volume: 1,\n      ...videoConfig,\n    };\n    const video = this._toVideoElement(src, config);\n\n    return this._load([video], resolve => {\n      const { autoplay, muted } = config;\n\n      video.currentTime = 0;\n      if (autoplay && muted) {\n        video.play().catch(() => void 0);\n      }\n\n      resolve(new TextureVideo({\n        source: video,\n        width: video.videoWidth,\n        height: video.videoHeight,\n        flipY: true\n      }));\n    });\n  }\n\n  private _load<T>(content: HTMLElement[], onLoad: (resolve: (value: T) => void) => void): Promise<T> {\n    const loader = this._loadChecker;\n\n    return new Promise((resolve, reject) => {\n      loader.once(\"ready\", evt => {\n        if (evt.errorCount > 0) return;\n\n        onLoad(resolve);\n      });\n\n      loader.once(\"error\", reject);\n      loader.check(content);\n    });\n  }\n\n  private _toImageArray(src: ProjectionOptions[\"src\"]): HTMLImageElement[] {\n    const srcs = Array.isArray(src) ? src : [src];\n\n    return srcs.map(source => {\n      if (isString(source)) {\n        const imgEl = new Image();\n\n        imgEl.crossOrigin = \"anonymous\";\n        imgEl.src = source;\n\n        return imgEl;\n      } else {\n        return source as HTMLImageElement;\n      }\n    });\n  }\n\n  private _toVideoElement(src: ProjectionOptions[\"src\"], {\n    muted,\n    loop,\n    volume\n  }: VideoConfig): HTMLVideoElement {\n    if (src instanceof HTMLVideoElement) {\n      return src;\n    }\n\n    const video = document.createElement(\"video\");\n\n    video.crossOrigin = \"anonymous\";\n    video.playsInline = true;\n    video.setAttribute(\"webkit-playsinline\", \"\");\n    video.muted = muted;\n    video.volume = volume;\n    video.loop = loop;\n\n    if (Array.isArray(src)) {\n      src.forEach(source => this._appendSourceElement(video, source));\n    } else {\n      this._appendSourceElement(video, src);\n    }\n\n    const sourceCount = video.querySelectorAll(\"source\").length;\n    if (sourceCount > 0 && video.readyState < 1) {\n      video.load();\n    }\n\n    return video;\n  }\n\n  private _appendSourceElement(video: HTMLMediaElement, src: string | HTMLElement) {\n    if (src instanceof HTMLSourceElement) {\n      return src;\n    }\n\n    const sourceEl = document.createElement(\"source\");\n    sourceEl.src = src as string;\n    video.appendChild(sourceEl);\n  }\n}\n\nexport default TextureLoader;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * @internal\n */\nclass FrameAnimator {\n  public maxDeltaTime: number;\n\n  private _context: Window | XRSession;\n  private _rafId: number;\n  private _rafTimer: number;\n  private _lastUpdateTime: number;\n\n  /** */\n  public constructor(maxDeltaTime: number, context: Window | XRSession = window) {\n    this.maxDeltaTime = maxDeltaTime;\n\n    this._context = context;\n    this._rafId = -1;\n    this._rafTimer = -1;\n    this._lastUpdateTime = -1;\n  }\n\n  public start(callback: (delta: number, ...args: any[]) => any) {\n    const context = this._context;\n\n    // No context / callback set\n    if (!context || !callback) return;\n\n    // Animation already started\n    if (this._rafId >= 0 || this._rafTimer >= 0) return;\n\n    const loop = (_time: number, frame?: XRFrame) => {\n      const time = Date.now();\n      const delta = Math.min(time - this._lastUpdateTime, this.maxDeltaTime * 1000);\n\n      callback(delta, frame);\n\n      this._lastUpdateTime = time;\n      this._rafId = context.requestAnimationFrame(loop);\n    };\n\n    this._lastUpdateTime = Date.now();\n    this._rafId = context.requestAnimationFrame(loop);\n  }\n\n  public stop() {\n    if (this._rafId >= 0) {\n      this._context.cancelAnimationFrame(this._rafId);\n    }\n\n    if (this._rafTimer >= 0) {\n      clearTimeout(this._rafTimer);\n    }\n\n    this._rafId = -1;\n    this._rafTimer = -1;\n  }\n\n  public changeContext(context: Window | XRSession) {\n    this.stop();\n    this._context = context;\n  }\n}\n\nexport default FrameAnimator;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport * as BROWSER from \"../const/browser\";\n\n/**\n * Automatic resizer that uses both ResizeObserver and window resize event\n */\nclass AutoResizer {\n  private _enabled: boolean;\n  private _resizeObserver: ResizeObserver | null;\n  private _useResizeObserver: boolean;\n  private _onResize: () => any;\n\n  public get useResizeObserver() { return this._useResizeObserver; }\n\n  /**\n   * Returns whether AutoResizer is enabled\n   */\n  public get enabled() { return this._enabled; }\n\n  /** */\n  public constructor(useResizeObserver: boolean, onResize: () => any) {\n    this._useResizeObserver = useResizeObserver;\n\n    this._enabled = false;\n    this._resizeObserver = null;\n    this._onResize = onResize;\n  }\n\n  /**\n   * Enable resizer\n   */\n  public enable(element: HTMLElement): this {\n    if (this._enabled) {\n      this.disable();\n    }\n\n    if (this._useResizeObserver && !!window.ResizeObserver) {\n      const bbox = element.getBoundingClientRect();\n      const resizeImmediate = bbox.width !== 0 || bbox.height !== 0;\n\n      const resizeObserver = new ResizeObserver(resizeImmediate ? this._skipFirstResize : this._onResize);\n\n      resizeObserver.observe(element);\n\n      this._resizeObserver = resizeObserver;\n    } else {\n      window.addEventListener(BROWSER.EVENTS.RESIZE, this._onResize);\n    }\n\n    this._enabled = true;\n\n    return this;\n  }\n\n  /**\n   * Disable resizer\n   */\n  public disable(): this {\n    if (!this._enabled) return this;\n\n    const resizeObserver = this._resizeObserver;\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      this._resizeObserver = null;\n    } else {\n      window.removeEventListener(BROWSER.EVENTS.RESIZE, this._onResize);\n    }\n\n    this._enabled = false;\n\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  private _skipFirstResize = (() => {\n    let isFirstResize = true;\n\n    return (() => {\n      if (isFirstResize) {\n        isFirstResize = false;\n\n        return;\n      }\n      this._onResize();\n    });\n  })();\n}\n\nexport default AutoResizer;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Camera from \"./Camera\";\nimport PanoControl from \"../control/PanoControl\";\nimport View360 from \"../View360\";\nimport * as BROWSER from \"../const/browser\";\nimport { CONTROL_EVENTS } from \"../const/internal\";\nimport { circulate, getObjectOption } from \"../utils\";\n\n/**\n * Options for {@link Autoplay}\n * @ko {@link Autoplay}용 옵션들\n * @since 4.0.0\n */\nexport interface AutoplayOptions {\n  /**\n   * @copy Autoplay#delay\n   */\n  delay: number;\n  /**\n   * @copy Autoplay#delayOnMouseLeave\n   */\n  delayOnMouseLeave: number;\n  /**\n   * @copy Autoplay#speed\n   */\n  speed: number;\n  /**\n   * @copy Autoplay#pauseOnHover\n   */\n  pauseOnHover: boolean;\n  /**\n   * @copy Autoplay#canInterrupt\n   */\n  canInterrupt: boolean;\n  /**\n   * @copy Autoplay#disableOnInterrupt\n   */\n  disableOnInterrupt: boolean;\n}\n\n/**\n * A manager class for autoplay feature.\n * @ko Autoplay 기능의 매니저 클래스.\n * @since 4.0.0\n */\nclass Autoplay {\n  // Options\n  private _delay: number;\n  private _delayOnMouseLeave: number;\n  private _speed: number;\n  private _pauseOnHover: boolean;\n  private _canInterrupt: boolean;\n  private _disableOnInterrupt: boolean;\n\n  // Internal values\n  private _enableBlocked: boolean;\n  private _camera: Camera;\n  private _control: PanoControl;\n  private _element: HTMLElement;\n  private _enabled: boolean;\n  private _interrupted: boolean;\n  private _interruptionTimer: number;\n  private _hovering: boolean;\n\n  /**\n   * Whether autoplay is enabled or not\n   * @ko 자동재생 활성화 여부를 나타내는 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * @hidden\n   */\n  public get enableBlocked() { return this._enableBlocked; }\n  /**\n   * Whether autoplay is updating the camera at the moment\n   * @ko 현재 자동재생이 동작중인지 여부를 나타내는 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get playing() {\n    return this._enabled && !this._interrupted;\n  }\n\n  /**\n   * Reactivation delay after mouse input in milisecond.\n   * @ko 재활성화되기까지의 시간 (밀리초 단위)\n   * @default 2000\n   * @since 4.0.0\n   */\n  public get delay() { return this._delay; }\n  public set delay(val: number) { this._delay = val; }\n\n  /**\n   * Reactivation delay after mouse leave when using {@link AutoplayOptions#pauseOnHover}\n   * @ko {@link AutoplayOptions#pauseOnHover} 사용시 마우스가 캔버스 영역을 떠난 뒤 자동재생이 다시 활성화되기까지의 시간\n   * @default 0\n   * @since 4.0.0\n   */\n  public get delayOnMouseLeave() { return this._delayOnMouseLeave; }\n  public set delayOnMouseLeave(val: number) { this._delayOnMouseLeave = val; }\n\n  /**\n   * Y-axis(yaw) rotation speed\n   * @ko Y-축 회전(yaw)의 속도\n   * @default 1\n   * @since 4.0.0\n   */\n  public get speed() { return this._speed; }\n  public set speed(val: number) { this._speed = val; }\n\n  /**\n   * Whether to pause rotation on mouse hover\n   * @ko 마우스가 캔버스 영역에 들어왔을 때 자동재생을 정지할지 여부\n   * @default false\n   * @since 4.0.0\n   */\n  public get pauseOnHover() { return this._pauseOnHover; }\n  public set pauseOnHover(val: boolean) { this._pauseOnHover = val; }\n\n  /**\n   * Whether user can interrupt the rotation with click/wheel input\n   * @ko 클릭이나 휠같은 사용자 인터랙션시 자동재생을 멈출지 여부\n   * @default true\n   * @since 4.0.0\n   */\n  public get canInterrupt() { return this._canInterrupt; }\n  public set canInterrupt(val: boolean) { this._canInterrupt = val; }\n\n  /**\n   * Whether to disable autoplay on user interrupt\n   * @ko 사용자 동작에 의해 자동재생이 정지할 때, {@link Autoplay#disable}을 호출하여 자동재생을 영구히 정지할지 여부\n   * @default false\n   * @since 4.0.0\n   */\n  public get disableOnInterrupt() { return this._disableOnInterrupt; }\n  public set disableOnInterrupt(val: boolean) { this._disableOnInterrupt = val; }\n\n  /**\n   * Create new AutoPlayer instance\n   * @param camera - Instance of the {@link Camera} {@ko Camera의 인스턴스}\n   * @param element - Canvas element {@ko 캔버스 엘리먼트}\n   * @param options - Autoplay options {@ko 자동재생 옵션들}\n   * @since 4.0.0\n   */\n  public constructor(viewer: View360, element: HTMLElement, options: boolean | Partial<AutoplayOptions>) {\n    this._camera = viewer.camera;\n    this._control = viewer.control;\n    this._element = element;\n\n    this._enabled = false;\n    this._interrupted = false;\n    this._interruptionTimer = -1;\n    this._hovering = false;\n\n    const {\n      delay = 2000,\n      delayOnMouseLeave = 0,\n      speed = 1,\n      pauseOnHover = false,\n      canInterrupt = true,\n      disableOnInterrupt = false\n    } = getObjectOption(options);\n\n    this._enableBlocked = !options;\n    this._delay = delay;\n    this._delayOnMouseLeave = delayOnMouseLeave;\n    this._speed = speed;\n    this._pauseOnHover = pauseOnHover;\n    this._canInterrupt = canInterrupt;\n    this._disableOnInterrupt = disableOnInterrupt;\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached\n   * @ko 인스턴스를 제거하고 연결된 모든 이벤트 핸들러를 삭제합니다.\n   * @since 4.0.0\n   */\n  public destroy(): void {\n    this.disable();\n  }\n\n  /**\n   * Rotate camera by given deltaTime\n   * @ko 주어진 deltaTime만큼 카메라를 회전시킵니다.\n   * @param deltaTime - Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\n   * @since 4.0.0\n   */\n  public update(deltaTime: number): void {\n    if (!this._enabled) return;\n    if (this._interrupted) {\n      if (this._disableOnInterrupt) {\n        this.disable();\n      }\n\n      return;\n    }\n\n    const camera = this._camera;\n    const delta = -this._speed * deltaTime / 100;\n\n    camera.yaw = circulate(camera.yaw + delta, 0, 360);\n  }\n\n  /**\n   * Enable autoplay and add event listeners.\n   * @ko 자동재생을 활성화하고 이벤트리스너들을 추가합니다.\n   * @since 4.0.0\n   */\n  public enable(): void {\n    const control = this._control;\n    const element = this._element;\n\n    if (this._enabled || control.gyro.enabled) return;\n\n    control.rotate.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.rotate.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    control.zoom.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.zoom.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    control.gyro.on(CONTROL_EVENTS.ENABLE, this._onGyroEnable);\n\n    element.addEventListener(BROWSER.EVENTS.MOUSE_ENTER, this._onMouseEnter, false);\n    element.addEventListener(BROWSER.EVENTS.MOUSE_LEAVE, this._onMouseLeave, false);\n\n    this._enabled = true;\n    this._enableBlocked = false;\n  }\n\n  /**\n   * Enable autoplay after current `delay` value.\n   * @ko 현재의 `delay`값만큼 시간이 지난 다음에 자동재생을 활성화합니다.\n   * @since 4.0.0\n   */\n  public enableAfterDelay() {\n    this.enable();\n    this._interrupted = true;\n    this._setUninterruptedAfterDelay(this._delay);\n  }\n\n  /**\n   * Disable autoplay and remove all event handlers.\n   * @ko 자동재생을 비활성화하고 모든 이벤트 핸들러를 제거합니다.\n   * @since 4.0.0\n   */\n  public disable(): void {\n    if (!this._enabled) return;\n\n    const control = this._control;\n    const element = this._element;\n\n    control.rotate.off(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.rotate.off(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    control.zoom.off(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.zoom.off(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    control.gyro.off(CONTROL_EVENTS.ENABLE, this._onGyroEnable);\n\n    element.removeEventListener(BROWSER.EVENTS.MOUSE_ENTER, this._onMouseEnter, false);\n    element.removeEventListener(BROWSER.EVENTS.MOUSE_LEAVE, this._onMouseLeave, false);\n\n    this._enabled = false;\n    this._interrupted = false;\n    this._hovering = false;\n\n    this._clearTimeout();\n  }\n\n  private _onInputStart = () => {\n    if (!this._canInterrupt) return;\n\n    this._interrupted = true;\n    this._clearTimeout();\n  };\n\n  private _onInputEnd = () => {\n    this._setUninterruptedAfterDelay(this._delay);\n  };\n\n  private _onGyroEnable = () => {\n    this.disable();\n  };\n\n  private _onMouseEnter = () => {\n    if (!this._pauseOnHover) return;\n    this._interrupted = true;\n    this._hovering = true;\n  };\n\n  private _onMouseLeave = () => {\n    if (!this._pauseOnHover) return;\n    this._hovering = false;\n    this._setUninterruptedAfterDelay(this._delayOnMouseLeave);\n  };\n\n  private _setUninterruptedAfterDelay(delay: number): void {\n    if (this._hovering) return;\n\n    this._clearTimeout();\n\n    if (delay > 0) {\n      this._interruptionTimer = window.setTimeout(() => {\n        this._interrupted = false;\n        this._interruptionTimer = -1;\n      }, delay);\n    } else {\n      this._interrupted = false;\n      this._interruptionTimer = -1;\n    }\n  }\n\n  private _clearTimeout(): void {\n    if (this._interruptionTimer >= 0) {\n      window.clearTimeout(this._interruptionTimer);\n      this._interruptionTimer = -1;\n    }\n  }\n}\n\nexport default Autoplay;\n","import { mat4 } from \"gl-matrix\";\nimport Component from \"@egjs/component\";\nimport WebGLContext from \"./WebGLContext\";\nimport GyroControl from \"../control/GyroControl\";\nimport * as BROWSER from \"../const/browser\";\nimport { SESSION_VR, XR_REFERENCE_SPACE } from \"../const/internal\";\nimport { EVENTS } from \"../const/external\";\n\ninterface XRSessionOptions extends XRSessionInit {\n  [key: string]: any;\n}\n\n/**\n * WebXR manager class\n * @ko WebXR 매니저 클래스\n * @since 4.0.0\n */\nclass XRManager extends Component<{\n  /**\n   * An event that fires on entering VR session\n   * @ko VR 세션 진입시에 트리거되는 이벤트\n   * @eventName vrStart\n   * @eventOf XRManager\n   * @version 4.0.0\n   */\n  [EVENTS.VR_START]: {\n    session: XRSession;\n  };\n  /**\n   * An event that fires on exiting VR session\n   * @ko VR 세션에서 나갈 때 트리거되는 이벤트\n   * @eventName vrEnd\n   * @eventOf XRManager\n   * @version 4.0.0\n   */\n  [EVENTS.VR_END]: void;\n}> {\n  private _ctx: WebGLContext;\n  private _xrSession: XRSession | null;\n  private _xrRefSpace: XRReferenceSpace | null;\n  private _options: XRSessionOptions;\n\n  /**\n   * Create new instance.\n   * 새 인스턴스를 생성합니다.\n   * @param ctx - Instance of WebGL context helper {@ko WebGL 콘텍스트 헬퍼의 인스턴스}\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor(ctx: WebGLContext, options: XRSessionOptions = {}) {\n    super();\n\n    this._xrSession = null;\n    this._xrRefSpace = null;\n    this._ctx = ctx;\n    this._options = options;\n  }\n\n  /**\n   * Destroy instance and end XR session if there was any.\n   * @ko 인스턴스를 제거하고, XR 세션이 존재할 경우 종료합니다.\n   * @since 4.0.0\n   */\n  public destroy = () => {\n    this.exit();\n    this.off();\n  };\n\n  /**\n   * Returns WebXR availability.\n   * @ko WebXR 사용 가능 여부를 반환합니다.\n   * @since 4.0.0\n   */\n  public async isAvailable(): Promise<boolean> {\n    // eslint-disable-next-line compat/compat\n    const xr = window.navigator.xr;\n    if (!xr) return false;\n\n    return xr.isSessionSupported(SESSION_VR)\n      .then(available => {\n        return available;\n      }).catch(() => {\n        return false;\n      });\n  }\n\n  /**\n   * Enter VR session\n   * @ko VR 세션에 진입합니다.\n   * @since 4.0.0\n   */\n  public async enter() {\n    const ctx = this._ctx;\n\n    // eslint-disable-next-line compat/compat\n    const xr = window.navigator.xr;\n    if (!xr) return;\n\n    await GyroControl.requestSensorPermission();\n\n    const options = {\n      ...{\n        requiredFeatures: [XR_REFERENCE_SPACE]\n      },\n      ...this._options\n    };\n\n    await ctx.makeXRCompatible();\n\n    const session = await xr.requestSession(SESSION_VR, options);\n    ctx.bindXRLayer(session);\n\n    const refSpace = await session.requestReferenceSpace(XR_REFERENCE_SPACE);\n\n    this._setSession(session, refSpace);\n\n    this.trigger(EVENTS.VR_START, {\n      session\n    });\n  }\n\n  /**\n   * Exit VR session\n   * @ko VR 세션에서 나갑니다.\n   * @since 4.0.0\n   */\n  public exit() {\n    const xrSession = this._xrSession;\n\n    if (xrSession) {\n      xrSession.end()\n        .catch(() => void 0);\n    }\n\n    this._xrSession = null;\n    this._xrRefSpace = null;\n  }\n\n  /**\n   * @hidden\n   */\n  public canRender(frame: XRFrame) {\n    const refSpace = this._xrRefSpace;\n\n    if (!refSpace) return false;\n\n    const pose = frame.getViewerPose(refSpace);\n\n    return !!pose;\n  }\n\n  /**\n   * @hidden\n   */\n  public getEyeParams(frame: XRFrame): Array<{\n    viewport: XRViewport;\n    vMatrix: mat4;\n    pMatrix: mat4;\n  }> | null {\n    const session = frame.session;\n    const pose = frame.getViewerPose(this._xrRefSpace!);\n\n    if (!pose) return null;\n\n    const glLayer = session.renderState.baseLayer;\n\n    if (!glLayer) return null;\n\n    return pose.views.map(view => {\n      const viewport = glLayer.getViewport(view)!;\n      const vMatrix = view.transform.inverse.matrix;\n\n      return {\n        viewport,\n        vMatrix,\n        pMatrix: view.projectionMatrix\n      };\n    });\n  }\n\n  private _setSession(session: XRSession, refSpace: XRReferenceSpace) {\n    this._xrSession = session;\n    this._xrRefSpace = refSpace;\n\n    session.addEventListener(BROWSER.EVENTS.XR_END, this._onSessionEnd);\n  }\n\n  private _onSessionEnd = () => {\n    this.exit();\n    this.trigger(EVENTS.VR_END);\n  }\n}\n\nexport default XRManager;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { vec3 } from \"gl-matrix\";\n\n/**\n * Hotspot data\n * @ko 핫스팟 데이터\n * @since 4.0.0\n */\nclass Hotspot {\n  /**\n   * HTMLElement of the hotspot\n   * @ko 핫스팟의 HTMLElement\n   * @since 4.0.0\n   */\n  public readonly element: HTMLElement;\n  /**\n   * Position to render hotspot\n   * @ko 핫스팟을 렌더링할 위치\n   * @since 4.0.0\n   */\n  public readonly position: vec3;\n\n  public constructor(element: HTMLElement, position: vec3) {\n    this.element = element;\n    this.position = position;\n  }\n}\n\nexport default Hotspot;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { vec2, vec3 } from \"gl-matrix\";\nimport Hotspot from \"./Hotspot\";\nimport Camera from \"../core/Camera\";\nimport WebGLRenderer from \"../core/WebGLRenderer\";\nimport View360Error from \"../core/View360Error\";\nimport { getNullableElement } from \"../utils\";\nimport ERROR from \"../const/error\";\nimport { DEFAULT_CLASS } from \"../const/external\";\nimport { DEG_TO_RAD } from \"../const/internal\";\n\n/**\n * Options for {@link HotspotRenderer}\n * @ko {@link HotspotRenderer}용 옵션들\n * @since 4.0.0\n */\nexport interface HotspotOptions {\n  /**\n   * Apply scale for hotspots, makes their size sync with background panorama image.\n   * @ko 핫스팟에 스케일을 적용해서 배경 파노라마 이미지의 크기 변화와 동일하게 크기를 조절합니다.\n   * @since 4.0.0\n   */\n  zoom: boolean;\n}\n\n/**\n * Hotspot renderer\n * @ko Hotspot 렌더러\n * @since 4.0.0\n */\nclass HotspotRenderer {\n  // Options\n  private _zoom: HotspotOptions[\"zoom\"];\n\n  // Internal properties\n  private _containerEl: HTMLElement | null;\n  private _renderer: WebGLRenderer;\n  private _hotspots: Hotspot[];\n\n  /**\n   * Create new instance\n   * @ko 새 인스턴스를 생성합니다.\n   * @param rootEl - Container element for hotspots {@ko 핫스팟들의 컨테이너 엘리먼트}\n   * @param renderer - instance of WebGLRenderer {@ko WebGLRenderer의 인스턴스}\n   * @param options - Hotspot options {@ko Hotspot 옵션들 }\n   */\n  public constructor(rootEl: HTMLElement, renderer: WebGLRenderer, {\n    zoom = false\n  }: Partial<HotspotOptions>) {\n    this._containerEl = getNullableElement(`.${DEFAULT_CLASS.HOTSPOT_CONTAINER}`, rootEl);\n    this._renderer = renderer;\n    this._hotspots = [];\n\n    this._zoom = zoom;\n  }\n\n  /**\n   * Refresh hotspots by collecting hotspot elements from current hotspot root element\n   * @ko 현재 핫스팟 루트 엘리먼트 내에서 핫스팟 엘리먼트들을 수집하여 갱신합니다.\n   * @throws {ERROR_CODES.INSUFFICIENT_ARGS} if data-position doesn't include all x, y, z values {@ko data-position이 x, y, z좌표를 전부 포함하고 있지 않을 때}\n   */\n  public refresh() {\n    const container = this._containerEl;\n    if (!container) return;\n\n    const hotspotEls = [].slice.apply(container.querySelectorAll(`.${DEFAULT_CLASS.HOTSPOT}`)) as HTMLElement[];\n    this._hotspots = hotspotEls.map(el => this._parseHotspot(el));\n  }\n\n  /**\n   * Render hotspots\n   * @ko 핫스팟들을 렌더링합니다.\n   * @param camera - Instance of Camera {@ko Camera의 인스턴스}\n   */\n  public render(camera: Camera) {\n    const hotspots = this._hotspots;\n    const halfWidth = this._renderer.width * 0.5;\n    const halfHeight = this._renderer.height * 0.5;\n    const zoom = camera.zoom;\n    const centerTransform = \"translate(-50%, -50%)\";\n    const zoomTransform = this._zoom ? `scale(${zoom})` : \"\";\n\n    hotspots.forEach(hotspot => {\n      const position = hotspot.position;\n      const relPos = vec3.create();\n\n      vec3.copy(relPos, position);\n      vec3.transformMat4(relPos, relPos, camera.viewMatrix);\n      vec3.transformMat4(relPos, relPos, camera.projectionMatrix);\n\n      if (relPos[2] > 1 || relPos[2] < 0) {\n        hotspot.element.classList.remove(DEFAULT_CLASS.HOTSPOT_VISIBLE);\n        return;\n      }\n\n      const screenPos = vec2.fromValues(\n        relPos[0] * halfWidth + halfWidth,\n        -relPos[1] * halfHeight + halfHeight\n      );\n\n      hotspot.element.classList.add(DEFAULT_CLASS.HOTSPOT_VISIBLE);\n      hotspot.element.style.transform = [\n        centerTransform,\n        `translate(${screenPos[0]}px, ${screenPos[1]}px)`,\n        zoomTransform\n      ].join(\" \");\n    });\n  }\n\n  private _parseHotspot(element: HTMLElement): Hotspot {\n    const yawStr = element.dataset.yaw;\n    const pitchStr = element.dataset.pitch;\n    const positionStr = element.dataset.position;\n\n    if (yawStr || pitchStr) {\n      const yaw = yawStr ? parseFloat(yawStr) : 0;\n      const pitch = pitchStr ? parseFloat(pitchStr) : 0;\n\n      const position = this._yawPitchToVec3(yaw, pitch);\n\n      return new Hotspot(element, position);\n    } else if (positionStr) {\n      const pos: number[] = positionStr.split(\" \").map(val => parseFloat(val));\n      if (pos.length < 3) {\n        throw new View360Error(ERROR.MESSAGES.INSUFFICIENT_ARGS(positionStr, \"hotspot attribute \\\"data-position\\\"\"), ERROR.CODES.INSUFFICIENT_ARGS);\n      }\n\n      return new Hotspot(element, vec3.fromValues(pos[0], pos[1], pos[2]));\n    } else {\n      // Place hotspot at yaw: 0, pitch: 0\n      const defaultPos = vec3.fromValues(0, 0, -1);\n\n      return new Hotspot(element, defaultPos);\n    }\n  }\n\n  private _yawPitchToVec3(yaw: number, pitch: number) {\n    const yawRad = yaw * DEG_TO_RAD;\n    const pitchRad = pitch * DEG_TO_RAD;\n    const position = vec3.create();\n\n    position[1] = Math.sin(pitchRad);\n    position[2] = Math.cos(pitchRad);\n\n    position[0] = position[2] * Math.sin(-yawRad);\n    position[2] = -position[2] * Math.cos(-yawRad);\n\n    return position;\n  }\n}\n\nexport default HotspotRenderer;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"../geometry/Geometry\";\nimport { VAO } from \"../type/internal\";\n\n/**\n * @hidden\n */\nclass VertexArrayObject {\n  public readonly obj: VAO | null;\n  public readonly geometry: Geometry;\n  public readonly buffers: {\n    indicies: WebGLBuffer;\n    position: WebGLBuffer;\n    uv: WebGLBuffer;\n  }\n\n  public get count() { return this.geometry.indicies.count; }\n\n  constructor(obj: VAO | null, geometry: Geometry, buffers: VertexArrayObject[\"buffers\"]) {\n    this.obj = obj;\n    this.geometry = geometry;\n    this.buffers = buffers;\n  }\n}\n\nexport default VertexArrayObject;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { mat4 } from \"gl-matrix\";\nimport Uniform from \"../uniform/Uniform\";\nimport Camera from \"./Camera\";\nimport Object3D from \"./Object3D\";\nimport ShaderProgram from \"./ShaderProgram\";\nimport View360Error from \"./View360Error\";\nimport VertexArrayObject from \"./VertexArrayObject\";\nimport VertexData from \"./VertexData\";\nimport Texture from \"../texture/Texture\";\nimport Geometry from \"../geometry/Geometry\";\nimport * as BROWSER from \"../const/browser\";\nimport ERROR from \"../const/error\";\nimport { DEFAULT_CLASS } from \"../const/external\";\nimport { UniformLocations } from \"../type/internal\";\n\n/**\n * @hidden\n */\nclass WebGLContext {\n  private _canvas: HTMLCanvasElement;\n  private _gl: WebGLRenderingContext | WebGL2RenderingContext;\n  private _contextLost: boolean;\n  private _maxTextureSize: number;\n  private _isWebGL2: boolean;\n  private _debug: boolean;\n  private _extensions: {\n    vao: OES_vertex_array_object | null;\n    loseContext: WEBGL_lose_context | null;\n  };\n\n  public get canvas() { return this._canvas; }\n  public get maxTextureSize() { return this._maxTextureSize; }\n  public get isWebGL2() { return this._isWebGL2; }\n  public get supportVAO() { return this._isWebGL2 || !!this._extensions.vao; }\n  public get lost() { return this._contextLost; }\n  public get debug() { return this._debug; }\n\n  public constructor(canvas: HTMLCanvasElement, debug: boolean) {\n    this._canvas = canvas;\n    this._contextLost = false;\n    this._debug = debug;\n    this._extensions = {\n      vao: null,\n      loseContext: null\n    };\n  }\n\n  public init() {\n    const canvas = this._canvas;\n\n    const { gl, isWebGL2 } = this._getContext(canvas);\n\n    this._gl = gl;\n    this._maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this._isWebGL2 = isWebGL2;\n\n    if (!this._isWebGL2) {\n      this._extensions.vao = gl.getExtension(\"OES_vertex_array_object\");\n    }\n\n    this._extensions.loseContext = gl.getExtension(\"WEBGL_lose_context\");\n\n    canvas.addEventListener(BROWSER.EVENTS.CONTEXT_LOST, this._onContextLost);\n    canvas.addEventListener(BROWSER.EVENTS.CONTEXT_RESTORED, this._onContextRestore);\n\n    // gl.enable(gl.DEPTH_TEST);\n  }\n\n  public destroy() {\n    const gl = this._gl;\n    const canvas = this._canvas;\n\n    if (gl) {\n      // gl is not defined when destroy is called before init\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n\n    canvas.removeEventListener(BROWSER.EVENTS.CONTEXT_LOST, this._onContextLost);\n    canvas.removeEventListener(BROWSER.EVENTS.CONTEXT_RESTORED, this._onContextRestore);\n  }\n\n  public forceLoseContext() {\n    const extension = this._extensions.loseContext;\n\n    if (!extension) return;\n\n    extension.loseContext();\n  }\n\n  public forceRestoreContext() {\n    const extension = this._extensions.loseContext;\n\n    if (!extension) return;\n\n    extension.restoreContext();\n  }\n\n  public clear() {\n    const gl = this._gl;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n  }\n\n  public resize() {\n    const gl = this._gl;\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n\n  public viewport(x: number, y: number, width: number, height: number) {\n    const gl = this._gl;\n\n    gl.viewport(x, y, width, height);\n  }\n\n  public createVAO(geometry: Geometry, shaderProgram: ShaderProgram) {\n    const nativeVAO = this._createNativeVAO();\n\n    const vao = new VertexArrayObject(nativeVAO, geometry, {\n      indicies: this._createBuffer(),\n      position: this._createBuffer(),\n      uv: this._createBuffer()\n    });\n\n    if (nativeVAO) {\n      this._bindNativeVAO(nativeVAO);\n      this._supplyGeometryData(vao, shaderProgram);\n      this._bindNativeVAO(null);\n      this._unbindBuffers();\n    }\n\n    return vao;\n  }\n\n  public draw(vao: VertexArrayObject, shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    if (vao.obj) {\n      this._bindNativeVAO(vao.obj);\n    } else {\n      this._supplyGeometryData(vao, shaderProgram);\n    }\n\n    gl.drawElements(gl.TRIANGLES, vao.count, gl.UNSIGNED_SHORT, 0);\n\n    if (vao.obj) {\n      this._bindNativeVAO(null);\n    } else {\n      this._unbindBuffers();\n    }\n  }\n\n  public releaseVAO(vao: VertexArrayObject) {\n    if (vao.obj) {\n      this._deleteNativeVAO(vao.obj);\n    }\n\n    this._deleteBuffer(vao.buffers.indicies);\n    this._deleteBuffer(vao.buffers.position);\n    this._deleteBuffer(vao.buffers.uv);\n  }\n\n  public getUniformLocations<T extends Record<string, Uniform>>(program: WebGLProgram, uniforms: T): UniformLocations<T> {\n    const gl = this._gl;\n\n    const uniformLocations = Object.keys(uniforms).reduce((locations, key) => {\n      locations[key as keyof T] = gl.getUniformLocation(program, key)!;\n\n      return locations;\n    }, {} as UniformLocations<T>);\n\n    return {\n      ...this._getCommonUniformLocations(program),\n      ...uniformLocations\n    };\n  }\n\n  public updateCommonUniforms(entity: Object3D, camera: Camera, shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    const uniformLocations = shaderProgram.uniformLocations;\n\n    // We're using \"matrix\"(=local matrix) here for efficiency\n    // As projection doesn't require world matrix, as it doesn't have any parent or child\n    const matrix = entity.matrix;\n    const mvMatrix = mat4.create();\n    mat4.multiply(mvMatrix, camera.viewMatrix, matrix);\n\n    gl.uniformMatrix4fv(uniformLocations.uMVMatrix, false, mvMatrix);\n    gl.uniformMatrix4fv(uniformLocations.uPMatrix, false, camera.projectionMatrix);\n  }\n\n  public updateVRUniforms(shaderProgram: ShaderProgram, mvMatrix: mat4, pMatrix: mat4, eyeIndex: number) {\n    const gl = this._gl;\n\n    const uniformLocations = shaderProgram.uniformLocations;\n\n    gl.uniformMatrix4fv(uniformLocations.uMVMatrix, false, mvMatrix);\n    gl.uniformMatrix4fv(uniformLocations.uPMatrix, false, pMatrix);\n\n    if (uniformLocations.uEye) {\n      gl.uniform1f(uniformLocations.uEye, eyeIndex);\n    }\n  }\n\n  public updateUniforms(shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    const uniforms = shaderProgram.uniforms;\n    const uniformLocations = shaderProgram.uniformLocations;\n\n    for (const key in uniforms) {\n      const uniform = uniforms[key];\n      const location = uniformLocations[key];\n\n      if (!uniform) continue;\n\n      if (uniform.needsUpdate) {\n        uniform.update(gl, location, this._isWebGL2);\n      }\n    }\n  }\n\n  public releaseShaderResources(shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    const uniforms = shaderProgram.uniforms;\n\n    for (const key in uniforms) {\n      const uniform = uniforms[key];\n\n      if (!uniform) continue;\n\n      if (uniform.needsUpdate) {\n        uniform.destroy(gl);\n      }\n    }\n\n    gl.deleteProgram(shaderProgram.program);\n  }\n\n  public useProgram(shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    gl.useProgram(shaderProgram.program);\n  }\n\n  public createProgram(vertexShader: string, fragmentShader: string) {\n    const gl = this._gl;\n    const program = gl.createProgram()!;\n\n    const vs = this._compileShader(gl.VERTEX_SHADER, vertexShader);\n    const fs = this._compileShader(gl.FRAGMENT_SHADER, fragmentShader);\n\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.bindAttribLocation(program, 0, \"position\");\n    gl.bindAttribLocation(program, 1, \"uv\");\n    gl.linkProgram(program);\n\n    if (this._debug && !gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      let shaderLog: string | null = null;\n\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        shaderLog = gl.getShaderInfoLog(vs);\n      } else if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        shaderLog = gl.getShaderInfoLog(fs);\n      }\n\n      throw new View360Error(ERROR.MESSAGES.FAILED_LINKING_PROGRAM(gl.getProgramInfoLog(program), shaderLog), ERROR.CODES.FAILED_LINKING_PROGRAM);\n    }\n\n    gl.deleteShader(vs);\n    gl.deleteShader(fs);\n\n    return program;\n  }\n\n  public createWebGLTexture(texData: Texture): WebGLTexture {\n    const gl = this._gl;\n    const texture = gl.createTexture()!;\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, texData.wrapS);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, texData.wrapT);\n\n    if (!texData.isVideo() && this._isWebGL2) {\n      const gl2 = gl as WebGL2RenderingContext;\n\n      gl2.texStorage2D(gl2.TEXTURE_2D, 1, gl2.RGBA8, texData.width, texData.height);\n    }\n\n    return texture;\n  }\n\n  public createWebGLCubeTexture(texData: Texture, size: number): WebGLTexture {\n    const gl = this._gl;\n    const texture = gl.createTexture()!;\n\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, texData.wrapS);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, texData.wrapT);\n\n    if (this._isWebGL2) {\n      const gl2 = gl as WebGL2RenderingContext;\n\n      gl2.texStorage2D(gl2.TEXTURE_CUBE_MAP, 1, gl2.RGBA8, size, size);\n    }\n\n    return texture;\n  }\n\n  public async makeXRCompatible() {\n    const gl = this._gl;\n    const attributes = gl.getContextAttributes();\n\n    if (attributes && attributes.xrCompatible !== true) {\n      await gl.makeXRCompatible();\n    }\n  }\n\n  public bindXRLayer(session: XRSession) {\n    const gl = this._gl;\n    const xrLayer = new XRWebGLLayer(session, gl);\n    session.updateRenderState({ baseLayer: xrLayer });\n  }\n\n  public bindXRFrame(frame: XRFrame) {\n    const gl = this._gl;\n    const session = frame.session;\n    const baseLayer = session.renderState.baseLayer!;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, baseLayer.framebuffer);\n  }\n\n  public useDefaultFrameBuffer() {\n    const gl = this._gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  private _createBuffer(): WebGLBuffer {\n    return this._gl.createBuffer()!;\n  }\n\n  private _deleteBuffer(buffer: WebGLBuffer) {\n    return this._gl.deleteBuffer(buffer);\n  }\n\n  private _createNativeVAO() {\n    const gl = this._gl;\n\n    if (this._isWebGL2) {\n      return (gl as WebGL2RenderingContext).createVertexArray()!;\n    } else {\n      const ext = this._extensions.vao;\n\n      return ext?.createVertexArrayOES() || null;\n    }\n  }\n\n  private _bindNativeVAO(vao: WebGLVertexArrayObject | null) {\n    const gl = this._gl;\n\n    if (this._isWebGL2) {\n      (gl as WebGL2RenderingContext).bindVertexArray(vao);\n    } else {\n      const ext = this._extensions.vao;\n\n      ext?.bindVertexArrayOES(vao);\n    }\n  }\n\n  private _deleteNativeVAO(vao: WebGLVertexArrayObject | null) {\n    const gl = this._gl;\n\n    if (this._isWebGL2) {\n      (gl as WebGL2RenderingContext).deleteVertexArray(vao);\n    } else {\n      const ext = this._extensions.vao;\n\n      ext?.deleteVertexArrayOES(vao);\n    }\n  }\n\n  private _supplyGeometryData(vao: VertexArrayObject, shaderProgram: ShaderProgram) {\n    const geometry = vao.geometry;\n\n    this._supplyIndiciesData(geometry.indicies, vao.buffers.indicies);\n    this._supplyAttributeData(geometry.vertices, shaderProgram.program, \"position\", vao.buffers.position);\n    this._supplyAttributeData(geometry.uvs, shaderProgram.program, \"uv\", vao.buffers.uv);\n  }\n\n  private _unbindBuffers() {\n    const gl = this._gl;\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  private _supplyIndiciesData(indicies: VertexData<Uint16Array>, buffer: WebGLBuffer) {\n    const gl = this._gl;\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indicies.data, gl.STATIC_DRAW);\n  }\n\n  private _supplyAttributeData(attribute: VertexData<Float32Array>, program: WebGLProgram, name: string, buffer: WebGLBuffer) {\n    const gl = this._gl;\n    const attribLocation = gl.getAttribLocation(program, name);\n\n    // Attribute not used\n    if (attribLocation < 0) return;\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, attribute.data, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(attribLocation, attribute.itemSize, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(attribLocation);\n  }\n\n  private _compileShader(type: number, src: string) {\n    const gl = this._gl;\n    const shader = gl.createShader(type)!;\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    return shader;\n  }\n\n  private _getCommonUniformLocations(program: WebGLProgram) {\n    const gl = this._gl;\n\n    return {\n      uMVMatrix: gl.getUniformLocation(program, \"uMVMatrix\")!,\n      uPMatrix: gl.getUniformLocation(program, \"uPMatrix\")!\n    };\n  }\n\n  private _getContext(canvas: HTMLCanvasElement): {\n    gl: WebGLRenderingContext | WebGL2RenderingContext;\n    isWebGL2: boolean;\n  } {\n    const webglIdentifiers = [\"webgl2\", \"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\n    let context: WebGLRenderingContext | null = null;\n    let isWebGL2 = false;\n    const contextAttributes = {\n      preserveDrawingBuffer: false,\n      antialias: false\n    };\n\n    const onWebglContextCreationError = e => e.statusMessage;\n\n    canvas.addEventListener(BROWSER.EVENTS.CONTEXT_CREATE_ERROR, onWebglContextCreationError);\n\n    for (const identifier of webglIdentifiers) {\n      try {\n        context = canvas.getContext(identifier, contextAttributes) as WebGLRenderingContext;\n        isWebGL2 = identifier === \"webgl2\";\n      } catch (t) {} // eslint-disable-line no-empty\n      if (context) {\n        break;\n      }\n    }\n\n    canvas.removeEventListener(BROWSER.EVENTS.CONTEXT_CREATE_ERROR, onWebglContextCreationError);\n\n    if (!context) {\n      throw new View360Error(ERROR.MESSAGES.WEBGL_NOT_SUPPORTED, ERROR.CODES.WEBGL_NOT_SUPPORTED);\n    }\n\n    return {\n      gl: context,\n      isWebGL2\n    };\n  }\n\n  private _onContextLost = () => {\n    const canvas = this._canvas;\n    canvas.classList.add(DEFAULT_CLASS.CTX_LOST);\n    this._contextLost = true;\n  };\n\n  private _onContextRestore = () => {\n    const canvas = this._canvas;\n    canvas.classList.remove(DEFAULT_CLASS.CTX_LOST);\n    this._contextLost = false;\n  };\n}\n\nexport default WebGLContext;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { mat4 } from \"gl-matrix\";\nimport Camera from \"./Camera\";\nimport WebGLContext from \"./WebGLContext\";\nimport XRManager from \"./XRManager\";\nimport TriangleMesh from \"./TriangleMesh\";\n\n/**\n * Projection renderer, based on WebGL\n * @ko WebGL 기반의 프로젝션 렌더러\n * @since 4.0.0\n */\nclass WebGLRenderer {\n  private _canvas: HTMLCanvasElement;\n  private _elementSize: { x: number, y: number };\n  private _pixelRatio: number;\n\n  public readonly ctx: WebGLContext;\n\n  /**\n   * Canvas element\n   * @ko 캔버스 엘리먼트\n   * @since 4.0.0\n   */\n  public get canvas() { return this._canvas; }\n  /**\n   * Canvas's width (`devicePixelRatio` is not applied)\n   * @ko 캔버스의 보이는 너비 (`devicePixelRatio`가 적용되지 않은)\n   * @since 4.0.0\n   */\n  public get width() { return this._elementSize.x; }\n  /**\n   * Canvas's height (`devicePixelRatio` is not applied)\n   * @ko 캔버스의 높이 (`devicePixelRatio`가 적용되지 않은)\n   * @since 4.0.0\n   */\n  public get height() { return this._elementSize.y; }\n  /**\n   * Current `devicePixelRatio` value.\n   * @ko 현재 `devicePixelRatio` 값.\n   * @since 4.0.0\n   * @example\n   * ```js\n   * cosnt renderingWidth = view360.renderer.width * view360.renderer.pixelRatio;\n   * ```\n   */\n  public get pixelRatio() { return this._pixelRatio; }\n  /**\n   * Width / height ratio (= width / height)\n   * @ko 너비 / 높이의 비율 (= width / height)\n   * @since 4.0.0\n   * @example\n   * ```js\n   * const aspect = view360.renderer.width / view360.renderer.pixelRatio;\n   * assert(aspect === view360.renderer.aspect);\n   * ```\n   */\n  public get aspect() { return this._elementSize.x / this._elementSize.y; }\n\n  /**\n   * Create new instance\n   * @ko 새 인스턴스를 생성합니다.\n   * @param canvas - Canvas element {@ko 캔버스 엘리먼트}\n   * @param debug - Whether to enable WebGL debugging {@ko WebGL debug 활성화 여부 }\n   */\n  public constructor(canvas: HTMLCanvasElement, debug: boolean) {\n    this._canvas = canvas;\n    this._elementSize = { x: 0, y: 0 };\n    this._pixelRatio = 1;\n    this.ctx = new WebGLContext(canvas, debug);\n  }\n\n  /**\n   * Destroy instance and release all resources.\n   * @ko 인스턴스를 제거하고 사용된 리소스를 전부 해제합니다.\n   * @since 4.0.0\n   */\n  public destroy() {\n    const canvas = this._canvas;\n\n    this.ctx.destroy();\n    canvas.width = 1;\n    canvas.height = 1;\n  }\n\n  /**\n   * Resize canvas and renew inner size cache.\n   * @ko 캔버스의 크기를 재계산해서 내부의 사이즈 캐시값을 갱신합니다.\n   * @since 4.0.0\n   */\n  public resize() {\n    const canvas = this._canvas;\n    const canvasSize = this._elementSize;\n    const devicePixelRatio = window.devicePixelRatio;\n\n    canvasSize.x = canvas.clientWidth;\n    canvasSize.y = canvas.clientHeight;\n\n    canvas.width = canvasSize.x * devicePixelRatio;\n    canvas.height = canvasSize.y * devicePixelRatio;\n\n    this._pixelRatio = devicePixelRatio;\n    this.ctx.resize();\n  }\n\n  /**\n   * Render projection\n   * @ko 프로젝션을 렌더링합니다.\n   * @param projection - Projection to render {@ko 렌더링할 프로젝션}\n   * @param cameraa - Camera instance {@ko 카메라의 인스턴스}\n   * @since 4.0.0\n   */\n  public render(mesh: TriangleMesh, camera: Camera) {\n    const ctx = this.ctx;\n    if (ctx.lost) return;\n\n    ctx.clear();\n    ctx.useProgram(mesh.program);\n    ctx.updateCommonUniforms(mesh, camera, mesh.program);\n    mesh.update({ camera });\n    ctx.updateUniforms(mesh.program);\n    ctx.draw(mesh.vao, mesh.program);\n  }\n\n  /**\n   * Render VR frame, only used for rendering frames inside VR sessions.\n   * @ko VR 프레임을 렌더링합니다. VR 세션 진입 도중에만 사용됩니다.\n   * @internal\n   * @param mesh - Triangle mesh to render {@ko 렌더링할 메쉬}\n   * @param vr - Instance of XRManager {@ko XRManager의 인스턴스}\n   * @param frame - VR frame {@ko VR 프레임}\n   * @since 4.0.0\n   */\n  public renderVR(mesh: TriangleMesh, vr: XRManager, frame: XRFrame) {\n    const ctx = this.ctx;\n    const eyeParams = vr.getEyeParams(frame);\n\n    if (!eyeParams || !mesh) return;\n\n    ctx.bindXRFrame(frame);\n    ctx.useProgram(mesh.program);\n    ctx.updateUniforms(mesh.program);\n\n    eyeParams.forEach((eye, eyeIndex) => {\n      const viewport = eye.viewport;\n      // We're using \"mesh.matrix\"(=local matrix) here for efficiency\n      // As projection doesn't require world matrix, as it doesn't have any parent or child\n      const mvMatrix = mat4.multiply(mat4.create(), eye.vMatrix, mesh.matrix);\n\n      ctx.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n      ctx.updateVRUniforms(mesh.program, mvMatrix, eye.pMatrix, eyeIndex);\n      ctx.draw(mesh.vao, mesh.program);\n    });\n  }\n}\n\nexport default WebGLRenderer;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport Camera, { CameraOptions } from \"./core/Camera\";\nimport PanoControl, { PanoControlOptions } from \"./control/PanoControl\";\nimport TextureLoader from \"./core/TextureLoader\";\nimport FrameAnimator from \"./core/FrameAnimator\";\nimport AutoResizer from \"./core/AutoResizer\";\nimport Autoplay, { AutoplayOptions } from \"./core/Autoplay\";\nimport TriangleMesh from \"./core/TriangleMesh\";\nimport XRManager from \"./core/XRManager\";\nimport View360Error from \"./core/View360Error\";\nimport Projection from \"./projection/Projection\";\nimport HotspotRenderer, { HotspotOptions } from \"./hotspot/HotspotRenderer\";\nimport WebGLRenderer from \"./core/WebGLRenderer\";\nimport Texture from \"./texture/Texture\";\nimport View360Plugin from \"./plugin/View360Plugin\";\nimport ERROR from \"./const/error\";\nimport { CONTROL_EVENTS } from \"./const/internal\";\nimport { DEFAULT_CLASS, EVENTS } from \"./const/external\";\nimport { findCanvas, getElement } from \"./utils\";\nimport * as EVENT_TYPES from \"./type/events\";\nimport { EventParams } from \"./type/utils\";\n\n/**\n * Events that {@link View360} can trigger\n * @ko {@link View360}가 트리거할 수 있는 이벤트들\n * @see [Detailed Example](/docs/events/ready)\n * @since 4.0.0\n */\nexport interface View360Events {\n  [EVENTS.READY]: EVENT_TYPES.ReadyEvent;\n  [EVENTS.LOAD_START]: EVENT_TYPES.LoadStartEvent;\n  [EVENTS.LOAD]: EVENT_TYPES.LoadEvent;\n  [EVENTS.PROJECTION_CHANGE]: EVENT_TYPES.ProjectionChangeEvent;\n  [EVENTS.RESIZE]: EVENT_TYPES.ResizeEvent;\n  [EVENTS.BEFORE_RENDER]: EVENT_TYPES.BeforeRenderEvent;\n  [EVENTS.RENDER]: EVENT_TYPES.RenderEvent;\n  [EVENTS.INPUT_START]: EVENT_TYPES.InputStartEvent;\n  [EVENTS.INPUT_END]: EVENT_TYPES.InputEndEvent;\n  [EVENTS.VIEW_CHANGE]: EVENT_TYPES.ViewChangeEvent;\n  [EVENTS.STATIC_CLICK]: EVENT_TYPES.StaticClickEvent;\n  [EVENTS.VR_START]: EVENT_TYPES.VRStartEvent;\n  [EVENTS.VR_END]: EVENT_TYPES.VREndEvent;\n}\n\n/**\n * Options for {@link View360}\n * @ko {@link View360}용 옵션들\n * @see [Detailed Example](/docs/options)\n * @since 4.0.0\n */\nexport interface View360Options extends CameraOptions, PanoControlOptions {\n  projection: Projection | null;\n  hotspot: Partial<HotspotOptions>;\n  autoplay: boolean | Partial<AutoplayOptions>;\n  autoInit: boolean;\n  autoResize: boolean;\n  canvasSelector: string;\n  useResizeObserver: boolean;\n  tabIndex: number | null;\n  on: Partial<{ [key in keyof View360Events]: (evt: View360Events[key]) => any }>;\n  plugins: View360Plugin[];\n  maxDeltaTime: number;\n  debug: boolean;\n}\n\n/**\n * Panorama 360 image viewer\n * @ko 파노라마 360 이미지 뷰어\n * @since 4.0.0\n * @see View360Options\n * @see View360Events\n */\nclass View360 extends Component<View360Events> {\n  /**\n   * Current version string of the View360\n   * @ko View360의 현재 버젼 문자열\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * // If the installed version of the View360 is v4.0.0, View360.VERSION is equal to \"4.0.0\"\n   * console.log(View360.VERSION) // 4.0.0\n   * ```\n   */\n  public static readonly VERSION = \"#__VERSION__#\";\n\n  private _rootEl: HTMLElement;\n  private _renderer: WebGLRenderer;\n  private _camera: Camera;\n  private _control: PanoControl;\n  private _animator: FrameAnimator;\n  private _autoplay: Autoplay;\n  private _hotspot: HotspotRenderer;\n  private _projection: Projection | null;\n  private _mesh: TriangleMesh | null;\n  private _autoResizer: AutoResizer;\n  private _vr: XRManager;\n  private _plugins: View360Plugin[];\n  private _initialized: boolean;\n\n  private _autoInit: View360Options[\"autoInit\"];\n  private _autoResize: View360Options[\"autoResize\"];\n  private _canvasSelector: View360Options[\"canvasSelector\"];\n  private _useResizeObserver: View360Options[\"useResizeObserver\"];\n  private _tabIndex: View360Options[\"tabIndex\"];\n  private _debug: View360Options[\"debug\"];\n\n  /**\n   * Root element (`.view360-container`)\n   * @ko 루트 엘리먼트 (`.view360-container`)\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```html\n   * <div id=\"viewer\" class=\"view360-container\">\n   *   <canvas class=\"view360-canvas\"></canvas>\n   * </div>\n   * ```\n   * ```ts\n   * import View360 from \"@egjs/view360\";\n   *\n   * const viewer = new View360(\"#viewer\");\n   * console.log(viewer.rootEl); // Element with id \"viewer\"\n   * ```\n   */\n  public get rootEl() { return this._rootEl; }\n  /**\n   * Projection renderer.\n   * @ko 프로젝션 렌더러.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get renderer() { return this._renderer; }\n  /**\n   * Projection camera.\n   * @ko 프로젝션 카메라.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get camera() { return this._camera; }\n  /**\n   * Rotate/Zoom Controller.\n   * @ko 회전/줌 컨트롤러.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get control() { return this._control; }\n  /**\n   * WebXR-based VR manager.\n   * @ko WebXR 기반의 VR 기능 매니저 인스턴스.\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * // Example: Enter VR\n   * // This must be called on user interaction, else will be rejected.\n   * viewer.vr.enter();\n   * ```\n   */\n  public get vr() { return this._vr; }\n  /**\n   * Hotspot renderer.\n   * You can also change options of {@link View360Options#hotspot} with this.\n   * @ko 핫스팟 렌더러 인스턴스.\n   * {@link View360Options#hotspot} 옵션 변경도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get hotspot() { return this._hotspot; }\n  /**\n   * An array of plugins added.\n   * @ko 추가된 플러그인의 배열\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   plugins: [new ControlBar()]\n   * });\n   *\n   * console.log(viewer.plugins); // [ControlBar]\n   *\n   * viewer.addPlugins(new LoadingSpinner()) // [ControlBar, LoadingSpinner];\n   * ```\n   */\n  public get plugins() { return this._plugins; }\n  /**\n   * An instance of {@link Projection} that currently enabled. `null` if not initialized yet.\n   * You should call {@link View360#load} to change panorama src or projection type.\n   * @ko 현재 사용중인 {@link Projection}의 인스턴스. 프로젝션을 활성화하지 않았을 경우 `null`입니다.\n   * 파노라마 이미지 소스나 프로젝션 타입을 변경하려면 {@link View360#load}를 호출하면 됩니다.\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360\n   * ```\n   */\n  public get projection() { return this._projection; }\n  public set projection(val: View360Options[\"projection\"]) {\n    if (this._initialized && val) {\n      this.load(val);\n    } else {\n      this._projection = val;\n    }\n  }\n  /**\n   * An instance of triangle mesh to render.\n   * @ko 렌더링할 triangle mesh의 인스턴스\n   * @internal\n   * @since 4.0.0\n   * @readonly\n   */\n  public get mesh() { return this._mesh; }\n  /**\n   * A boolean value whether {@link View360#init init()} is called before.\n   * @ko {@link View360#init init()}이 호출되었는지 여부를 가리키는 값\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el\", { autoInit: false });\n   *\n   * console.log(viewer.initialized); // false\n   *\n   * await viewer.init();\n   *\n   * console.log(viewer.initialized); // true\n   * ```\n   */\n  public get initialized() { return this._initialized; }\n  /**\n   * Instance of the Autoplay manager.\n   * You can also change {@link View360Options#autoplay} options with this.\n   * @ko Autoplay 기능의 매니저 인스턴스.\n   * 이 인스턴스를 통해 {@link View360Options#autoplay} 옵션을 변경하는 것도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * // Disable autoplay\n   * viewer.autoplay.disable();\n   * ```\n   */\n  public get autoplay() { return this._autoplay; }\n  /**\n   * When this value is `true` and {@link View360Options#projection} is set, {@link View360#init init()} will be called automatically when instance is created.\n   * @ko 이 값이 `true`이고, {@link View360Options#projection}이 설정되었으면, 인스턴스 생성 시점에 자동으로 {@link View360#init init()}을 호출합니다.\n   * @default true\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * import View360, { EquirectProjection, EVENTS } from \"@egjs/view360\";\n   *\n   * // viewer.init() is called on instance creation\n   * // But as `init` is asynchronous, you should wait for \"ready\" event if you want to do something after initialization.\n   * const viewer = new View360(\"#el_id\", {\n   *   autoInit: true,\n   *   projection: new EquirectProjection({ src: \"SRC_TO_URL\" })\n   * });\n   *\n   * console.log(viewer.initialized); // false, as `init` is asynchronous\n   *\n   * viewer.once(EVENTS.READY, () => {\n   *   console.log(viewer.initialized); // true\n   * });\n   * ```\n   */\n  public get autoInit() { return this._autoInit; }\n  /**\n   * When `true`, {@link View360#resize} is called when the canvas size is changed.\n   * @ko `true`일 경우, 캔버스의 크기가 변경되었을 때 자동으로 {@link View360#resize}를 호출합니다.\n   * @default true\n   * @since 4.0.0\n   * @see View360#useResizeObserver\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   autoResize: true\n   * });\n   *\n   * // This can trigger `viewer.resize()` if the canvas size was not 400px\n   * const canvas = viewer.renderer.canvas;\n   * canvas.style.width = \"400px\";\n   * ```\n   */\n  public get autoResize() { return this._autoResize; }\n  /**\n   * CSS selector for canvas element to render panorama image/video.\n   * The canvas element should be placed inside the root element. (Dont' have to be direct child)\n   * @ko 파노라마 이미지/비디오를 렌더링할 canvas 엘리먼트의 CSS 선택자\n   * 캔버스 엘리먼트는 루트 엘리먼트 내부에 있어야합니다. 루트 엘리먼트의 직계 자식 엘리먼트(Direct child element)일 필요는 없습니다.\n   * @default \"canvas\"\n   * @since 4.0.0\n   * @example\n   * ```html\n   * <div class=\"view360-container\">\n   *   <canvas id=\"not_this_one\"></canvas>\n   *   <!-- This will be selected -->\n   *   <canvas id=\"canvas_to_select\"></canvas>\n   * </div>\n   * ```\n   *\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   canvasSelector: \"#canvas_to_select\"\n   * });\n   * ```\n   */\n  public get canvasSelector() { return this._canvasSelector; }\n  /**\n   * When `true`, it will use {@link ResizeObserver} API to detect canvas size change when {@link View360Options#autoResize} is enabled.\n   * @ko `true`일 때 {@link View360Options#autoResize}가 활성화되었으면, 사용 가능한 환경에서 {@link ResizeObserver} API를 사용해서 캔버스 크기 변화를 추적합니다.\n   * @default true\n   * @since 4.0.0\n   */\n  public get useResizeObserver() { return this._useResizeObserver; }\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex tabindex} attribute for the canvas element.\n   * This is necessary for the keyboard controls.\n   * By default, `0` will be assigned. `null` to disable.\n   * @ko 캔버스 엘리먼트에 적용할 {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex tabindex} 어트리뷰트의 값.\n   * 이 값을 설정해야만 키보드 컨트롤을 사용 가능합니다.\n   * 기본값으로 `0`이 설정됩니다. `null`로 지정하면 `tabindex`를 설정하지 않습니다.\n   * @see RotateControlOptions#disableKeyboard\n   * @default 0\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   tabindex: 5\n   * });\n   * ```\n   *\n   * ```html\n   * <!-- After init -->\n   * <div class=\"view360-container\">\n   *   <canvas class=\"view360-canvas\" tabindex=\"5\"></canvas>\n   * </div>\n   * ```\n   */\n  public get tabIndex() { return this._tabIndex; }\n  public set tabIndex(val: View360Options[\"tabIndex\"]) {\n    const canvas = this._renderer.canvas;\n    this._tabIndex = val;\n\n    if (val != null) {\n      canvas.tabIndex = val;\n    } else {\n      canvas.removeAttribute(\"tabindex\");\n    }\n  }\n  /**\n   * A maximum delta time between frames in seconds.\n   * It can prevent camera or control changing too fast when frame being late.\n   * @ko 프레임간 시간 차이의 최대값. (초 단위)\n   * 퍼포먼스 등의 이유로 프레임 렌더링이 늦어졌을 때, 화면이 갑작스럽게 바뀌는 것을 막아줍니다.\n   * @default 1 / 30\n   * @since 4.0.0\n   */\n  public get maxDeltaTime() { return this._animator.maxDeltaTime; }\n  public set maxDeltaTime(val: View360Options[\"maxDeltaTime\"]) { this._animator.maxDeltaTime = val; }\n  /**\n   * Enable WebGL debugging. Setting this to `true` can decrease performance.\n   * This is used internally on developing View360.\n   * @ko WebGL 디버깅을 활성화합니다. 이 값을 `true`로 할 경우 성능이 하락할 수 있습니다.\n   * 이 옵션은 View360을 개발하기 위해 내부적으로 사용됩니다.\n   * @default false\n   */\n  public get debug() { return this._debug; }\n  public set debug(val: View360Options[\"debug\"]) { this._debug = val; }\n\n  // Camera options\n  /**\n   * Initial yaw (y-axis rotation) value for camera. (in degrees, °)\n   * As View360 uses right-handed coordinate system internally, camera will rotate counter-clockwise by this value.\n   * @ko 카메라의 초기 yaw(y축 회전)값 (도 단위, °)\n   * View360은 오른손 좌표계를 사용하기 때문에, 카메라가 해당 값만큼 시계 반대방향으로 회전합니다.\n   * @default 0\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   initialYaw: 30\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.yaw); // 30\n   * });\n   * ```\n   */\n  public get initialYaw() { return this._camera.initialYaw; }\n  public set initialYaw(val: View360Options[\"initialYaw\"]) { this._camera.initialYaw = val; }\n  /**\n   * Initial pitch (x-axis rotation) value for camera. (in degrees, °)\n   * As View360 uses right-handed coordinate system internally, positive value will make camera to look upside, while negative value will look down.\n   * @ko 카메라의 초기 pitch(x축 회전)값 (도 단위, °)\n   * View360은 오른손 좌표계를 사용하기 때문에, 양(+)의 값은 카메라가 위를 보게 하고, 음(-)의 값은 카메라가 아래를 보게 합니다.\n   * @default 0\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   initialPitch: 60\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.pitch); // 60\n   * });\n   * ```\n   */\n  public get initialPitch() { return this._camera.initialPitch; }\n  public set initialPitch(val: View360Options[\"initialPitch\"]) { this._camera.initialPitch = val; }\n  /**\n   * Initial zoom value for camera.\n   * Setting this value to `2` will enlarge panorama 200% by width.\n   * @ko 카메라의 초기 줌 값.\n   * 이 값을 `2`로 설정할 경우 파노라마 이미지를 가로 기준 200%만큼 확대합니다.\n   * @default 1\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   initialZoom: 2\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.zoom); // 2\n   * });\n   * ```\n   */\n  public get initialZoom() { return this._camera.initialZoom; }\n  public set initialZoom(val: View360Options[\"initialZoom\"]) { this._camera.initialZoom = val; }\n  /**\n   * Restrict yaw(y-axis rotation) range. (in degrees, °)\n   * @ko yaw(y축 회전) 범위를 제한합니다. (도 단위, °)\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   yawRange: [-30, 30]\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.yaw); // 0\n   *   viewer.camera.lookAt({ yaw: 60  });\n   *   console.log(viewer.camera.yaw); // 30\n   * });\n   * ```\n   */\n  public get yawRange() { return this._camera.yawRange; }\n  public set yawRange(val: View360Options[\"yawRange\"]) {\n    this._camera.yawRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\n   * Restrict pitch(x-axis rotation) range. (in degrees, °)\n   * @ko pitch(x축 회전) 범위를 제한합니다. (도 단위, °)\n   * @default null\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   pitchRange: [-45, 45]\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.pitch); // 0\n   *   viewer.camera.lookAt({ pitch: 60  });\n   *   console.log(viewer.camera.pitch); // 45\n   * });\n   * ```\n   */\n  public get pitchRange() { return this._camera.pitchRange; }\n  public set pitchRange(val: View360Options[\"pitchRange\"]) {\n    this._camera.pitchRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\n   * Restrict camera zoom range.\n   * If `null`, a default zoom range from `0.6` to `10` will be used.\n   * @ko 카메라 줌 범위를 제한합니다.\n   * `null`일 경우 기본값으로 `0.6`에서 `10`의 범위를 사용합니다.\n   * @default null\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   zoomRange: [0.5, 4]\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.zoom); // 1\n   *   viewer.camera.lookAt({ zoom: 6  });\n   *   console.log(viewer.camera.zoom); // 4\n   * });\n   * ```\n   */\n  public get zoomRange() { return this._camera.zoomRange; }\n  public set zoomRange(val: View360Options[\"zoomRange\"]) {\n    this._camera.zoomRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\n   * Camera's horizontal FOV(Field of View). (in degrees, °)\n   * @ko 카메라의 수평 FOV(Field of View) 값. (도 단위, °)\n   * @default 90\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * // Init with fov: 120\n   * const viewer = new View360(\"#el_id\", { fov: 120 });\n   *\n   * // Back to 90\n   * viewer.fov = 90;\n   * ```\n   */\n  public get fov() { return this._camera.fov; }\n  public set fov(val: View360Options[\"fov\"]) {\n    const camera = this._camera;\n    const control = this._control;\n\n    camera.fov = val;\n    camera.updateMatrix();\n    control.sync();\n  }\n\n  // Control options\n  /**\n   * A control for camera rotation.\n   * You can also change options of {@link View360Options#rotate} with this.\n   * @ko 카메라 회전을 담당하는 컨트롤.\n   * {@link View360Options#rotate} 옵션 변경도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get rotate() { return this._control.rotate; }\n  /**\n   * A control for camera zoom.\n   * You can also change options of {@link View360Options#zoom} with this.\n   * @ko 카메라 줌을 담당하는 컨트롤.\n   * {@link View360Options#zoom} 옵션 변경도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get zoom() { return this._control.zoom; }\n  /**\n   * A control for camera rotation with gyroscope input.\n   * You can also change options of {@link View360Options#gyro} with this.\n   * @ko 자이로스코프를 통한 카메라 회전을 담당하는 컨트롤.\n   * {@link View360Options#gyro} 옵션 변경도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get gyro() { return this._control.gyro; }\n  /**\n   * Apply CSS {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor cursor} by current state of input when using mouse.\n   * If `true`, this will add CSS style to canvas element. It'll apply `cursor: \"grab\"` by default and `cursor: \"grabbing\"` when holding the mouse button.\n   * @ko 마우스 사용시 CSS {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor cursor}값을 자동으로 변경할지 여부.\n   * `true`일 경우 기본 상태에서 `cursor: \"grab\"`을, 입력 도중에 `cursor: \"grabbing\"`을 캔버스에 적용합니다.\n   * @default true\n   * @since 4.0.0\n   */\n  public get useGrabCursor() { return this._control.useGrabCursor; }\n  public set useGrabCursor(val: View360Options[\"useGrabCursor\"]) { this._control.useGrabCursor = val; }\n  /**\n   * Disable context menu which pops up on mouse right click.\n   * @ko 마우스 우클릭시 표시되는 컨텍스트 메뉴를 비활성화합니다.\n   * @default false\n   * @since 4.0.0\n   */\n  public get disableContextMenu() { return this._control.disableContextMenu; }\n  public set disableContextMenu(val: View360Options[\"disableContextMenu\"]) { this._control.disableContextMenu = val; }\n  /**\n   * If `true`, enables scroll on mobile(touch) devices on canvas.\n   * :::caution\n   * When this option is enabled, users must swipe horizontally first then vertically to change view up or down.\n   * :::\n   * @ko `true`로 설정할 경우, 모바일(터치) 환경의 캔버스 영역 내에서 스크롤을 가능하게 합니다.\n   * :::caution\n   * 이 값을 활성화할 경우, 사용자가 카메라 뷰를 위/아래로 바꾸기 위해서는 먼저 가로로 스와이프한 이후에 세로로 스와이프해야만 합니다.\n   * :::\n   * @since 4.0.0\n   * @default true\n   */\n  public get scrollable() { return this._control.scrollable; }\n  public set scrollable(val: View360Options[\"scrollable\"]) { this._control.scrollable = val; }\n  /**\n   * If `true`, enables scroll by mouse wheel on canvas.\n   * :::caution\n   * When this option is enabled, zoom by mouse wheel will be disabled.\n   * :::\n   * @ko `true`로 설정할 경우, 캔버스 영역 내에서 마우스 휠을 이용한 페이지 스크롤이 가능해집니다.\n   * :::caution\n   * 이 값을 활성화할 경우, 마우스 휠을 통한 줌이 불가능하게 됩니다.\n   * :::\n   * @since 4.0.0\n   * @default false\n   */\n  public get wheelScrollable() { return this._control.wheelScrollable; }\n  public set wheelScrollable(val: View360Options[\"wheelScrollable\"]) { this._control.wheelScrollable = val; }\n\n  /**\n   * Create new instance of View360\n   * @ko View360의 새로운 인스턴스를 생성합니다\n   * @param root - Root element(`.view360-container`) to mount View360\n   * Can be either a CSS selector or HTMLElement.\n   * {@ko View360을 마운트할 루트 엘리먼트, CSS 셀렉터나 HTMLElement를 지정 가능합니다.}\n   * @param options - Options to apply\n   * {@ko 적용할 옵션들}\n   * @example\n   * ```ts\n   * import View360, { EquirectProjection } from \"@egjs/view360\";\n   *\n   * // Create new View360 instance\n   * const viewer = new View360(\"#id-of-a-container\", {\n   *   projection: new EquirectProjection({\n   *     src: \"URL_TO_PANORAMA_IMAGE_OR_VIDEO\",\n   *   })\n   * });\n   * ```\n   */\n  public constructor(root: string | HTMLElement, {\n    projection = null,\n    initialYaw = 0,\n    initialPitch = 0,\n    initialZoom = 1,\n    yawRange = null,\n    pitchRange = null,\n    zoomRange = null,\n    fov = 90,\n    useGrabCursor = true,\n    disableContextMenu = false,\n    rotate = true,\n    zoom = true,\n    gyro = false,\n    scrollable = true,\n    wheelScrollable = false,\n    autoplay = false,\n    hotspot = {},\n    autoInit = true,\n    autoResize = true,\n    canvasSelector = \"canvas\",\n    useResizeObserver = true,\n    on = {},\n    plugins = [],\n    maxDeltaTime = 1 / 30,\n    tabIndex = 0,\n    debug = false\n  }: Partial<View360Options> = {}) {\n    super();\n\n    this._rootEl = getElement(root);\n    this._plugins = plugins;\n    this._initialized = false;\n\n    // Options\n    this._autoInit = autoInit;\n    this._autoResize = autoResize;\n    this._canvasSelector = canvasSelector;\n    this._useResizeObserver = useResizeObserver;\n    this._tabIndex = tabIndex;\n    this._debug = debug;\n\n    // Core components\n    const canvas = findCanvas(this._rootEl, canvasSelector);\n    this._renderer = new WebGLRenderer(canvas, debug);\n    this._camera = new Camera({\n      initialYaw,\n      initialPitch,\n      initialZoom,\n      fov,\n      yawRange,\n      pitchRange,\n      zoomRange\n    });\n    this._control = new PanoControl(canvas, this._camera, {\n      useGrabCursor,\n      scrollable,\n      wheelScrollable,\n      disableContextMenu,\n      rotate,\n      zoom,\n      gyro\n    });\n    this._animator = new FrameAnimator(maxDeltaTime);\n    this._autoplay = new Autoplay(this, canvas, autoplay);\n    this._projection = projection;\n    this._mesh = null;\n    this._autoResizer = new AutoResizer(useResizeObserver, () => this.resize());\n    this._vr = new XRManager(this._renderer.ctx);\n    this._hotspot = new HotspotRenderer(this._rootEl, this._renderer, hotspot);\n\n    this._addEventHandlers(on);\n\n    if (projection && autoInit) {\n      this.init();\n    }\n  }\n\n  /**\n   * Destroy instance and release all resources.\n   * @ko 인스턴스를 제거하고 모든 리소스를 해제합니다.\n   * @since 4.0.0\n   */\n  public destroy() {\n    this._camera.destroy();\n    this._animator.stop();\n    this._renderer.destroy();\n    this._control.destroy();\n    this._autoResizer.disable();\n\n    if (this._mesh) {\n      this._mesh.destroy(this._renderer.ctx);\n      this._mesh = null;\n    }\n\n    this._plugins.forEach(plugin => plugin.destroy(this));\n\n    this._initialized = false;\n  }\n\n  /**\n   * Initialize inner components and load projection src.\n   * @ko 내부 컴포넌트들을 초기화하고 프로젝션 소스를 로드합니다.\n   * @since 4.0.0\n   */\n  public async init() {\n    if (!this._projection) {\n      throw new View360Error(ERROR.MESSAGES.PROVIDE_PROJECTION_FIRST, ERROR.CODES.PROVIDE_PROJECTION_FIRST);\n    }\n\n    const renderer = this._renderer;\n    const camera = this._camera;\n    const control = this._control;\n    const animator = this._animator;\n    const hotspot = this._hotspot;\n    const projection = this._projection;\n    const canvas = renderer.canvas;\n\n    this._bindComponentEvents();\n    renderer.ctx.init();\n    this._resizeComponents();\n    camera.updateMatrix();\n\n    if (this._autoResize) {\n      this._autoResizer.enable(canvas);\n    }\n\n    if (!this._autoplay.enableBlocked) {\n      this._autoplay.enable();\n    }\n\n    this._plugins.forEach(plugin => {\n      plugin.init(this);\n    });\n\n    const texture = await this._loadTexture(projection);\n    this._applyProjection(projection, texture);\n    hotspot.refresh();\n    animator.start(this._renderFrameOnDemand);\n    await control.enable();\n\n    if (this._tabIndex != null && !canvas.hasAttribute(\"tabIndex\")) {\n      canvas.tabIndex = this._tabIndex;\n    }\n\n    this._initialized = true;\n    this.renderFrame(0);\n\n    this._emit(EVENTS.READY);\n  }\n\n  /**\n   * Load new panorama image/video and display it.\n   * This will {@link View360#init init()} View360 if it's not initialized yet.\n   * @ko 새로운 파노라마 이미지 혹은 비디오를 로드하고 표시합니다.\n   * 만약 View360이 아직 초기화되지 않았다면, {@link View360#init init()}을 호출합니다.\n   * @param projection - Projection & video options for new source. {@ko 새로운 파노라마 이미지/비디오에 적용할 옵션들}\n   * @returns `Promise<true>` if load was successful. {@ko 프로젝션 로드에 성공했을 경우 `Promise<true>`를 반환합니다. }\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * // Change to video\n   * viewer.load({\n   *   src: \"URL_TO_NEW_VIDEO\",\n   *   video: true\n   * });\n   * ```\n   */\n  public async load(projection: Projection): Promise<boolean> {\n    if (!projection) return false;\n\n    if (this._initialized) {\n      const texture = await this._loadTexture(projection);\n      this._applyProjection(projection, texture);\n      this.renderFrame(0);\n    } else {\n      // Should update internal options before init\n      this._projection = projection;\n      this.init();\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh component's size by current\n   * @ko View360이 내부적으로 캐시하고 있는 엘리먼트 크기를 현재 크기로 갱신합니다.\n   * @since 4.0.0\n   */\n  public resize() {\n    if (!this._initialized) return;\n\n    this._resizeComponents();\n\n    // To prevent flickering, render immediately after resizing components\n    this.renderFrame(0);\n\n    const { width, height } = this._renderer;\n\n    this._emit(EVENTS.RESIZE, {\n      width,\n      height\n    });\n  }\n\n  /**\n   * Add new plugins\n   * @ko 새로운 플러그인을 추가합니다.\n   * @param plugins Plugins to add {@ko 추가할 플러그인들}\n   * @see View360Options#plugins\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * // Add a single plugin\n   * viewer.addPlugins(new ControlBar());\n   *\n   * // Add multiple plugins\n   * viewer.addPlugins(new ControlBar(), new LoadingSpinner());\n   * ```\n   */\n  public addPlugins(...plugins: View360Plugin[]) {\n    if (this._initialized) {\n      plugins.forEach(plugin => { plugin.init(this); });\n    }\n\n    this._plugins.push(...plugins);\n  }\n\n  /**\n   * Remove plugins.\n   * @ko 플러그인을 제거합니다.\n   * @param plugins Plugins to remove {@ko 제거할 플러그인들}\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * // Remove a single plugin\n   * viewer.removePlugins(plugin1);\n   *\n   * // Remove multiple plugins\n   * viewer.removePlugins(plugin2, plugin3);\n   * ```\n   */\n  public removePlugins(...plugins: View360Plugin[]) {\n    plugins.forEach(plugin => {\n      const pluginIdx = this._plugins.indexOf(plugin);\n\n      if (pluginIdx < 0) return;\n\n      plugin.destroy(this);\n      this._plugins.splice(pluginIdx, 1);\n    });\n  }\n\n  /**\n   * Render a single panorama image/video frame.\n   * Rendering is performed automatically on demand, so you usually don't have to call this.\n   * Call this when a frame is not renewed after changing options.\n   * @ko 파노라마 이미지/비디오의 한 프레임을 렌더링합니다.\n   * 프레임 갱신은 보통 필요한 때에만 자동적으로 이루어지기 때문에, 보통은 이 메소드를 호출할 필요는 없습니다.\n   * 옵션 변경 이후에도 프레임 갱신이 이루어지지 않는다면, 이 메소드를 호출해주세요.\n   * @param delta Delta time in milisec. {@ko 프레임간 시간 차이, 밀리초 단위}\n   * @since 4.0.0\n   */\n  public renderFrame = (delta: number) => {\n    const camera = this._camera;\n    const renderer = this._renderer;\n    const control = this._control;\n    const hotspot = this._hotspot;\n    const autoPlayer = this._autoplay;\n    const mesh = this._mesh;\n\n    if (!mesh) return;\n\n    this._emit(EVENTS.BEFORE_RENDER);\n\n    if (autoPlayer.playing) {\n      autoPlayer.update(delta);\n      control.sync();\n    }\n\n    if (camera.animation) {\n      camera.animation.update(delta);\n    } else {\n      control.update(delta);\n    }\n\n    renderer.render(mesh, camera);\n    hotspot.render(camera);\n\n    if (camera.changed) {\n      this._emit(EVENTS.VIEW_CHANGE, {\n        yaw: camera.yaw,\n        pitch: camera.pitch,\n        zoom: camera.zoom,\n        quaternion: [\n          camera.quaternion[0],\n          camera.quaternion[1],\n          camera.quaternion[2],\n          camera.quaternion[3]\n        ]\n      });\n    }\n    camera.onFrameRender();\n\n    this._emit(EVENTS.RENDER);\n  };\n\n  private _emit<K extends keyof View360Events>(eventName: K, ...params: EventParams<View360Events, K>) {\n    const evtParams = params ? params[0] : {};\n\n    this.trigger(eventName as any, {\n      type: eventName,\n      target: this,\n      ...evtParams\n    });\n  }\n\n  private _renderFrameOnDemand = (delta: number) => {\n    const camera = this._camera;\n    const control = this._control;\n    const autoplay = this._autoplay;\n    const mesh = this._mesh;\n    const texture = mesh?.getTexture();\n\n    if (!this._initialized || !texture) return;\n    if (\n      !camera.animation\n      && !control.animating\n      && !autoplay.playing\n      && !texture.isVideo()\n    ) return;\n\n    this.renderFrame(delta);\n  };\n\n  private _renderVRFrame = (_delta: number, frame: XRFrame) => {\n    const vr = this._vr;\n    const mesh = this._mesh;\n    const renderer = this._renderer;\n\n    if (!mesh) return;\n\n    this._emit(EVENTS.BEFORE_RENDER);\n\n    renderer.renderVR(mesh, vr, frame);\n\n    this._emit(EVENTS.RENDER);\n  }\n\n  private _applyProjection(projection: Projection, texture: Texture) {\n    const camera = this._camera;\n    const control = this._control;\n    const renderer = this._renderer;\n    const mesh = this._mesh;\n\n    // Remove previous context\n    if (mesh) {\n      mesh.destroy(renderer.ctx);\n    }\n\n    const newMesh = projection.createMesh(renderer.ctx, texture);\n    projection.updateCamera(camera);\n    projection.updateControl(control);\n\n    this._mesh = newMesh;\n    this._emit(EVENTS.PROJECTION_CHANGE, {\n      projection\n    });\n  }\n\n  private async _loadTexture(projection: Projection): Promise<Texture> {\n    const contentLoader = new TextureLoader();\n    const { src, video } = projection;\n\n    this._emit(EVENTS.LOAD_START, {\n      src,\n      video\n    });\n\n    const texture = await contentLoader.load(src, video);\n\n    this._emit(EVENTS.LOAD, {\n      src,\n      video\n    });\n\n    return texture;\n  }\n\n  private _resizeComponents() {\n    const renderer = this._renderer;\n    const camera = this._camera;\n    const control = this._control;\n\n    renderer.resize();\n    camera.resize(renderer.width, renderer.height);\n    control.resize(renderer.width, renderer.height);\n  }\n\n  private _addEventHandlers(events: View360Options[\"on\"]) {\n    // Bind option \"on\"\n    Object.keys(events).forEach((evtName: keyof typeof EVENT_TYPES) => {\n      this.on(evtName, events[evtName]);\n    });\n  }\n\n  private _bindComponentEvents() {\n    // Bind internal component events\n    const root = this._rootEl;\n    const control = this._control;\n    const animator = this._animator;\n    const renderer = this._renderer;\n    const vr = this._vr;\n\n    const controlEventsToPropagate = [\n      CONTROL_EVENTS.STATIC_CLICK,\n      CONTROL_EVENTS.INPUT_START,\n      CONTROL_EVENTS.INPUT_END\n    ];\n\n    controlEventsToPropagate.forEach(evtName => {\n      control.rotate.on(evtName, evt => {\n        this._emit(evtName, evt);\n      });\n\n      control.zoom.on(evtName, evt => {\n        this._emit(evtName, evt);\n      });\n    });\n\n    vr.on(EVENTS.VR_START, evt => {\n      root.classList.add(DEFAULT_CLASS.IN_VR);\n\n      animator.changeContext(evt.session);\n      animator.start(this._renderVRFrame);\n\n      this._emit(EVENTS.VR_START);\n    });\n\n    vr.on(EVENTS.VR_END, () => {\n      root.classList.remove(DEFAULT_CLASS.IN_VR);\n\n      renderer.ctx.useDefaultFrameBuffer();\n      animator.changeContext(window);\n      animator.start(this._renderFrameOnDemand);\n\n      this.resize();\n\n      this._emit(EVENTS.VR_END);\n    });\n  }\n}\n\nexport default View360;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport { mat4, quat, vec3 } from \"gl-matrix\";\nimport { OBJECT_3D_EVENTS } from \"../const/internal\";\nimport Camera from \"./Camera\";\n\n/**\n * Context interface used for object update\n * @internal\n */\ninterface ObjectUpdateContext {\n  camera: Camera;\n}\n\n/**\n * Base class for 3D objects\n * @ko 3D 오브젝트의 베이스 클래스\n * @since 4.0.0\n * @internal\n */\nclass Object3D extends Component<{\n  [OBJECT_3D_EVENTS.UPDATE]: {\n    camera: Camera\n  };\n}> {\n  /**\n   * Local matrix of the object\n   * @ko 오브젝트의 local matrix\n   * @since 4.0.0\n   */\n  public matrix: mat4;\n  /**\n   * Rotation quaternion\n   * @ko 현재 오브젝트의 회전을 나타내는 사원수 값\n   * @since 4.0.0\n   */\n  public rotation: quat;\n  /**\n   * Position of the object\n   * @ko 오브젝트의 위치\n   * @since 4.0.0\n   */\n  public position: vec3;\n  /**\n   * A scale vector of the object\n   * @ko 오브젝트가 각 축으로 확대된 정도를 나타내는 벡터\n   * @since 4.0.0\n   */\n  public scale: vec3;\n\n  /**\n   * Create new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   */\n  public constructor() {\n    super();\n\n    this.matrix = mat4.create();\n    this.rotation = quat.create();\n    this.position = vec3.fromValues(0, 0, 0);\n    this.scale = vec3.fromValues(1, 1, 1);\n  }\n\n  /**\n   * Update local matrix of the object.\n   * @ko 오브젝트의 local matrix를 갱신합니다.\n   * @since 4.0.0\n   */\n  public updateMatrix() {\n    mat4.fromRotationTranslationScale(this.matrix, this.rotation, this.position, this.scale);\n  }\n\n  public update(ctx: ObjectUpdateContext) {\n    this.trigger(OBJECT_3D_EVENTS.UPDATE, ctx);\n  }\n}\n\nexport default Object3D;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport View360Plugin from \"../View360Plugin\";\nimport View360 from \"../../View360\";\nimport { EVENTS } from \"../../const/external\";\nimport { createElement } from \"../../utils\";\nimport { LoadStartEvent } from \"../../type/events\";\n\n/**\n * Options for {@link LoadingSpinner}\n * @ko {@link LoadingSpinner}용 옵션들\n * @since 4.0.0\n * @category Plugin\n */\nexport interface LoadingSpinnerOptions {\n  /**\n   * Override default class names.\n   * @ko 디폴트 클래스 이름들을 오버라이드합니다.\n   * @since 4.0.0\n   */\n  className: Partial<{ -readonly [key in keyof typeof LoadingSpinner.DEFAULT_CLASS]: string }>;\n}\n\n/**\n * A plugin that displays loading spinner while loading the projection.\n * @ko 프로젝션 로딩중에 로딩 스피너를 보여주는 플러그인\n * @since 4.0.0\n * @category Plugin\n */\nclass LoadingSpinner implements View360Plugin {\n  /**\n   * Default class names that LoadingSpinner uses\n   * @ko LoadingSpinner가 사용하는 디폴트 클래스 이름\n   * @since 4.0.0\n   */\n  public static readonly DEFAULT_CLASS = {\n    /**\n     * A class name for the container element\n     * @ko 컨테이너 엘리먼트의 클래스 이름\n     * @since 4.0.0\n     */\n    CONTAINER: \"view360-spinner\",\n    /**\n     * A class name for the spinning ring element\n     * @ko 돌아가는 링 엘리먼트의 클래스 이름\n     * @since 4.0.0\n     */\n    RING: \"view360-spinner-ring\"\n  } as const;\n\n  /**\n   * A class names overriding\n   * @ko 현재 오버라이드 중인 클래스 이름\n   * @since 4.0.0\n   */\n  public readonly className: LoadingSpinnerOptions[\"className\"];\n\n  private _container: HTMLElement;\n\n  /**\n   * Create a new instance of LoadingSpinner. {@ko LoadingSpinner의 새 인스턴스를 생성합니다.}\n   * @param options Options {@ko 옵션들}\n   */\n  public constructor({\n    className = {}\n  }: Partial<LoadingSpinnerOptions> = {}) {\n    this.className = className;\n    this._container = this._createElements();\n  }\n\n  public init(viewer: View360) {\n    viewer.on(EVENTS.LOAD_START, this._startLoading);\n  }\n\n  public destroy(viewer: View360): void {\n    viewer.off(EVENTS.LOAD_START, this._startLoading);\n    this._detachElements({ target: viewer });\n  }\n\n  private _startLoading = ({ target: viewer }: LoadStartEvent) => {\n    viewer.rootEl.appendChild(this._container);\n\n    if (viewer.initialized) {\n      viewer.once(EVENTS.LOAD, this._detachElements);\n    } else {\n      viewer.once(EVENTS.READY, this._detachElements);\n    }\n  };\n\n  private _detachElements = ({ target: viewer }: { target: View360 }) => {\n    const container = this._container;\n    if (!container) return;\n\n    if (container.parentElement === viewer.rootEl) {\n      viewer.rootEl.removeChild(container);\n    }\n  };\n\n  private _createElements() {\n    const className = {\n      ...this.className,\n      ...LoadingSpinner.DEFAULT_CLASS\n    };\n\n    const container = createElement(className.CONTAINER);\n    const ring = createElement(className.RING);\n\n    container.appendChild(ring);\n\n    return container;\n  }\n}\n\nexport default LoadingSpinner;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport ControlBar from \"./ControlBar\";\nimport View360 from \"../../View360\";\n\n/**\n * Common options for {@link ControlBarItem}\n * @ko {@link ControlBarItem}의 공통 옵션들\n * @category Plugin\n * @since 4.0.0\n */\nexport interface ControlBarItemOptions {\n  /**\n   * @copy ControlBarItem#position\n   */\n  position: typeof ControlBar.POSITION[keyof typeof ControlBar.POSITION];\n  /**\n   * @copy ControlBarItem#order\n   */\n  order: number;\n}\n\n/**\n * Interface of the ControlBar items\n * @ko 컨트롤바 아이템의 인터페이스\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nabstract class ControlBarItem {\n  /**\n   * Element of the item.\n   * @ko 아이템의 엘리먼트\n   * @since 4.0.0\n   */\n  public abstract element: HTMLElement;\n\n  /**\n   * Position to display item.\n   * @ko 아이템을 표시할 위치.\n   * @since 4.0.0\n   */\n  public position: ControlBarItemOptions[\"position\"];\n  /**\n   * Order within the same position.\n   * The lowest one will be shown first.\n   * @ko 동일한 position 내에서의 순서, 작을수록 먼저 표시됩니다.\n   * @since 4.0.0\n   */\n  public order: ControlBarItemOptions[\"order\"];\n\n  /**\n   * Create new instance of the ControlBarItem\n   * @ko ControlBarItem의 새로운 인스턴스를 생성합니다.\n   * @param options Options {@ko 옵션들}\n   */\n  public constructor(options: ControlBarItemOptions) {\n    this.position = options.position;\n    this.order = options.order;\n  }\n\n  /**\n   * Initialize item.\n   * @ko 아이템을 초기화합니다.\n   * @param viewer - A instance of viewer to attach item {@ko 아이템을 부착할 뷰어의 인스턴스}\n   * @param controlBar - A instance of control bar to attach item {@ko 아이템을 부착할 컨트롤바의 인스턴스}\n   * @since 4.0.0\n   */\n  public abstract init(viewer: View360, controlBar: ControlBar): any;\n  /**\n   * Destroy item and release all resources & event handlers.\n   * @ko 아이템을 제거하고 할당된 모든 리소스 및 이벤트 핸들러를 제거합니다.\n   * @param viewer - A instance of viewer to detach item {@ko 아이템을 떼어 낼 뷰어의 인스턴스}\n   * @param controlBar - A instance of control bar to detach item {@ko 아이템을 떼어 낼 컨트롤바의 인스턴스}\n   * @since 4.0.0\n   */\n  public abstract destroy(viewer: View360, controlBar: ControlBar): any;\n}\n\nexport default ControlBarItem;\n","export const CONTROL_BAR_DEFAULT_CLASS = {\n  CONTROLS_ROOT: \"view360-controls\",\n  CONTROLS_BG: \"view360-controls-background\",\n  CONTROLS_MAIN: \"view360-controls-main\",\n  CONTROLS_TOP: \"view360-controls-top\",\n  CONTROLS_BOTTOM: \"view360-controls-bottom\",\n  CONTROLS_MID: \"view360-controls-mid\",\n  CONTROLS_LEFT: \"view360-controls-left\",\n  CONTROLS_RIGHT: \"view360-controls-right\",\n  CONTROLS_FLOAT_LEFT: \"view360-controls-float-left\",\n  CONTROLS_FLOAT_RIGHT: \"view360-controls-float-right\",\n  CONTROLS_BUTTON: \"view360-controls-button\",\n  PROGRESS_ROOT: \"view360-controls-progress\",\n  VOLUME_ROOT: \"view360-controls-volume\",\n  RANGE_ROOT: \"view360-range\",\n  RANGE_TRACK: \"view360-range-track\",\n  RANGE_THUMB: \"view360-range-thumb\",\n  RANGE_FILLER: \"view360-range-filler\",\n  PLAY_BUTTON: \"view360-controls-play\",\n  PAUSE_BUTTON: \"view360-controls-pause\",\n  UNMUTED_BUTTON: \"view360-controls-unmuted\",\n  MUTED_BUTTON: \"view360-controls-muted\",\n  FULLSCREEN_BUTTON: \"view360-controls-fullscreen\",\n  FULLSCREEN_EXIT_BUTTON: \"view360-controls-fullscreen-exit\",\n  VR_BUTTON: \"view360-controls-vr\",\n  GYRO_ENABLED: \"view360-controls-gyro-enabled\",\n  GYRO_DISABLED: \"view360-controls-gyro-disabled\",\n  VIDEO_TIME_DISPLAY: \"view360-controls-time\",\n  PIEVIEW_ROOT: \"view360-controls-pie\",\n  FIXED: \"view360-controls-fixed\",\n  UNAVAILABLE: \"view360-controls-unavailable\",\n  HIDDEN: \"view360-controls-hidden\"\n} as const;\n\nexport const CONTROL_BAR_ITEM_POSITION = {\n  /**\n   * Place control bar item floating at top-left corner\n   * @ko 아이템을 왼쪽 위 구석에 표시합니다.\n   * @since 4.0.0\n   */\n  TOP_LEFT: \"top-left\",\n  /**\n   * Place control bar item floating at top-right corner\n   * @ko 아이템을 오른쪽 위 구석에 표시합니다.\n   * @since 4.0.0\n   */\n  TOP_RIGHT: \"top-right\",\n  /**\n   * Place control bar item at upper block inside the bottom control bar.\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 위쪽 블럭에 표시합니다.\n   * @since 4.0.0\n   */\n  MAIN_TOP: \"main-top\",\n  /**\n   * Place control bar item at lower block inside the bottom control bar.\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 하단 블럭에 표시합니다.\n   * @since 4.0.0\n   */\n  MAIN_BOTTOM: \"main-bottom\",\n  /**\n   * Place control bar item at center-left block inside the bottom control bar.\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 중간 왼쪽 블럭에 표시합니다.\n   * @since 4.0.0\n   */\n  MAIN_LEFT: \"main-left\",\n  /**\n   * Place control bar item at center-right block inside the bottom control bar.\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 중간 오른쪽 블럭에 표시합니다.\n   * @since 4.0.0\n   */\n  MAIN_RIGHT: \"main-right\"\n} as const;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport { ControlBarOptions } from \"./ControlBar\";\nimport { CONTROL_BAR_DEFAULT_CLASS } from \"./const\";\nimport Motion from \"../../core/Motion\";\nimport MouseInput from \"../../control/input/MouseInput\";\nimport TouchInput from \"../../control/input/TouchInput\";\nimport { CONTROL_EVENTS, INFINITE_RANGE } from \"../../const/internal\";\nimport { clamp } from \"../../utils\";\nimport { InputEvents } from \"../../type/internal\";\nimport { EL_DIV } from \"../../const/browser\";\n\nclass RangeControl extends Component<{\n  [CONTROL_EVENTS.INPUT_START]: number;\n  [CONTROL_EVENTS.CHANGE]: number;\n  [CONTROL_EVENTS.INPUT_END]: void;\n}> {\n  public readonly rootEl: HTMLElement;\n  public readonly thumbEl: HTMLElement;\n  public readonly trackEl: HTMLElement;\n  public readonly fillerEl: HTMLElement;\n\n  private _motion: Motion;\n  private _mouseInput: MouseInput;\n  private _touchInput: TouchInput;\n  private _fixedClass: string;\n  private _bbox: DOMRect;\n\n  /**\n   *\n   */\n  public constructor() {\n    super();\n\n    const root = document.createElement(EL_DIV);\n    const track = document.createElement(EL_DIV);\n    const thumb = document.createElement(EL_DIV);\n    const filler = document.createElement(EL_DIV);\n\n    root.draggable = false;\n\n    track.appendChild(filler);\n    track.appendChild(thumb);\n    root.appendChild(track);\n\n    this.rootEl = root;\n    this.trackEl = track;\n    this.thumbEl = thumb;\n    this.fillerEl = filler;\n\n    this._mouseInput = new MouseInput();\n    this._touchInput = new TouchInput();\n    this._motion = new Motion({ duration: 1, range: INFINITE_RANGE, easing: x => x });\n    this._bbox = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      top: 0\n    } as DOMRect;\n    this._fixedClass = CONTROL_BAR_DEFAULT_CLASS.FIXED;\n  }\n\n  public init(className: Required<ControlBarOptions[\"className\"]>) {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n\n    this.rootEl.classList.add(className.RANGE_ROOT);\n    this.trackEl.classList.add(className.RANGE_TRACK);\n    this.thumbEl.classList.add(className.RANGE_THUMB);\n    this.fillerEl.classList.add(className.RANGE_FILLER);\n    this._fixedClass = className.FIXED;\n\n    mouseInput.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    touchInput.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n\n    mouseInput.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n    touchInput.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n\n    mouseInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    touchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n\n    mouseInput.enable(this.rootEl);\n    touchInput.enable(this.rootEl);\n\n    this.resize();\n  }\n\n  public destroy() {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n\n    this.rootEl.className = \"\";\n    this.trackEl.className = \"\";\n    this.thumbEl.className = \"\";\n    this.fillerEl.className = \"\";\n\n    mouseInput.off();\n    touchInput.off();\n    mouseInput.disable();\n    touchInput.disable();\n  }\n\n  public resize() {\n    this._bbox = this.trackEl.getBoundingClientRect();\n  }\n\n  public updateStyle(progress: number) {\n    const width = this._bbox.width;\n    const clampedProgress = clamp(progress, 0, 1);\n\n    this.fillerEl.style.width = `${clampedProgress * 100}%`;\n    this.thumbEl.style.transform = `translateX(${clampedProgress * width}px)`;\n  }\n\n  private _onHold = ({ srcEvent, isTouch }: InputEvents<{ x: number; y: number }>[typeof CONTROL_EVENTS.INPUT_START]) => {\n    const bbox = this._bbox;\n    if (!bbox) return;\n\n    const x = isTouch\n      ? (srcEvent as TouchEvent).touches[0].pageX\n      : (srcEvent as MouseEvent).pageX;\n    const elX = bbox.x + (window.scrollX ?? window.pageXOffset);\n\n    const clamepdX = clamp(x, elX, elX + bbox.width);\n    const progress = (clamepdX - elX) / bbox.width;\n\n    this._motion.reset(clamepdX);\n    this.thumbEl.classList.add(this._fixedClass);\n\n    this.trigger(CONTROL_EVENTS.INPUT_START, progress);\n  };\n\n  private _onChange = ({ delta }: InputEvents<{ x: number; y: number }>[typeof CONTROL_EVENTS.CHANGE]) => {\n    const motion = this._motion;\n    const bbox = this._bbox;\n    if (!bbox) return;\n\n    motion.setNewEndByDelta(delta.x);\n    motion.update(1);\n\n    const elX = bbox.x + (window.scrollX ?? window.pageXOffset);\n    const clampedX = clamp(motion.val, elX, elX + bbox.width);\n    const progress = (clampedX - elX) / bbox.width;\n\n    this.trigger(CONTROL_EVENTS.CHANGE, progress);\n  };\n\n  private _onRelease = () => {\n    const bbox = this._bbox;\n    if (!bbox) return;\n\n    this.thumbEl.classList.remove(this._fixedClass);\n\n    this.trigger(CONTROL_EVENTS.INPUT_END);\n  };\n}\n\nexport default RangeControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport RangeControl from \"./RangeControl\";\nimport View360 from \"../../View360\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport { CONTROL_EVENTS, VIDEO_TIME_CHANGE_EVENT } from \"../../const/internal\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport { EVENTS } from \"../../const/external\";\nimport * as BROWSER from \"../../const/browser\";\n\n/**\n * Show video progress bar.\n * @ko 비디오의 프로그레스 바를 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass ProgressBar extends ControlBarItem {\n  public get element() { return this._rangeControl.rootEl; }\n\n  private _controlBar: ControlBar | null;\n  private _video: TextureVideo | null;\n  private _rangeControl: RangeControl;\n\n  private _wasPaused: boolean;\n  private _currentTime: number;\n  private _duration: number;\n  private _playPromise: Promise<void> | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_TOP,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.position = position;\n    this.order = order;\n\n    this._controlBar = null;\n    this._rangeControl = new RangeControl();\n\n    this._video = null;\n    this._wasPaused = false;\n    this._currentTime = 0;\n    this._duration = 0;\n    this._playPromise = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const video = viewer.mesh?.getTexture();\n    const element = this.element;\n    const rangeControl = this._rangeControl;\n    const unavailableClass = controlBar.className.UNAVAILABLE;\n\n    if (!video || !video.isVideo()) {\n      element.classList.add(unavailableClass);\n      return;\n    }\n\n    element.classList.remove(unavailableClass);\n    element.classList.add(controlBar.className.PROGRESS_ROOT);\n    viewer.on(EVENTS.RESIZE, this._onResize);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.addEventListener(VIDEO_TIME_CHANGE_EVENT, this._onTimeUpdate);\n    rangeControl.init(controlBar.className);\n    rangeControl.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    rangeControl.on(CONTROL_EVENTS.CHANGE, this._onControl);\n    rangeControl.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n\n    this._video = video;\n    this._currentTime = video.source.currentTime;\n    this._duration = video.source.duration;\n    this._controlBar = controlBar;\n\n    rangeControl.updateStyle(this._currentTime / this._duration);\n  }\n\n  public destroy(viewer: View360) {\n    const video = this._video;\n\n    viewer.off(EVENTS.RESIZE, this._onResize);\n\n    if (video) {\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_DURATION_CHANGE, this._onDurationChange);\n      video.source.removeEventListener(VIDEO_TIME_CHANGE_EVENT, this._onTimeUpdate);\n    }\n\n    this._rangeControl.destroy();\n    this._video = null;\n    this._playPromise = null;\n  }\n\n  private _onResize = () => {\n    this._rangeControl.resize();\n  }\n\n  private _onTimeUpdate = () => {\n    const video = this._video;\n    if (!video) return;\n\n    this._currentTime = video.source.currentTime;\n    this._rangeControl.updateStyle(this._currentTime / this._duration);\n  };\n\n  private _onDurationChange = () => {\n    const video = this._video;\n    if (!video) return;\n\n    this._duration = video.source.duration;\n    this._rangeControl.updateStyle(this._currentTime / this._duration);\n  };\n\n  private _onHold = (progress: number) => {\n    const video = this._video;\n    const controlBar = this._controlBar;\n    if (!video || !controlBar) return;\n\n    const paused = video.isPaused();\n\n    video.source.pause();\n\n    const time = video.source.duration * progress;\n    video.source.currentTime = time;\n    video.source.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, { detail: { time }}));\n\n    controlBar.rootEl.classList.add(controlBar.className.FIXED);\n    this._wasPaused = !this._playPromise && paused;\n  };\n\n  private _onControl = (progress: number) => {\n    const video = this._video;\n    if (!video) return;\n\n    const time = video.source.duration * progress;\n    video.source.currentTime = time;\n    video.source.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, { detail: { time }}));\n  };\n\n  private _onRelease = () => {\n    const video = this._video;\n    const controlBar = this._controlBar;\n\n    if (video && controlBar) {\n      if (!this._wasPaused && !this._playPromise) {\n        this._playPromise = video.source.play()\n          .catch(() => void 0);\n\n        // This should not be chained\n        this._playPromise.then(() => {\n          this._playPromise = null;\n        });\n\n        controlBar.rootEl.classList.remove(controlBar.className.FIXED);\n      }\n    }\n\n    this._wasPaused = false;\n  };\n}\n\nexport default ProgressBar;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport * as BROWSER from \"../../const/browser\";\n\n/**\n * Show video play / pause button.\n * @ko 비디오 재생 / 일시정지 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass PlayButton extends ControlBarItem {\n  public readonly element: HTMLElement;\n  private _controlBar: ControlBar | null;\n  private _video: TextureVideo | null;\n  private _paused: boolean;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_LEFT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_BUTTON);\n\n    this._video = null;\n    this._paused = true;\n    this._controlBar = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n    const video = viewer.mesh?.getTexture();\n    const className = controlBar.className;\n    const unavailableClass = className.UNAVAILABLE;\n\n    if (!video || !video.isVideo()) {\n      element.classList.add(unavailableClass);\n      return;\n    }\n\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.remove(unavailableClass);\n\n    const paused = video.isPaused();\n    this._video = video;\n    this._paused = paused;\n    this._controlBar = controlBar;\n\n    if (paused) {\n      this._onPause();\n    } else {\n      this._onPlay();\n    }\n\n    element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_PLAY, this._onPlay);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_PAUSE, this._onPause);\n  }\n\n  public destroy() {\n    const video = this._video;\n    const element = this.element;\n\n    if (!video) return;\n\n    element.className = \"\";\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    video.source.removeEventListener(BROWSER.EVENTS.VIDEO_PLAY, this._onPlay);\n    video.source.removeEventListener(BROWSER.EVENTS.VIDEO_PAUSE, this._onPause);\n\n    this._video = null;\n    this._paused = true;\n    this._controlBar = null;\n  }\n\n  private _onClick = () => {\n    const video = this._video;\n    if (!video) return;\n\n    if (this._paused) {\n      video.source.play();\n    } else {\n      video.source.pause();\n    }\n  };\n\n  private _onPlay = () => {\n    if (!this._controlBar) return;\n\n    const element = this.element;\n    const className = this._controlBar.className;\n\n    element.classList.add(className.PAUSE_BUTTON);\n    element.classList.remove(className.PLAY_BUTTON);\n    element.title = \"Pause Video\";\n\n    this._paused = false;\n  };\n\n  private _onPause = () => {\n    if (!this._controlBar) return;\n\n    const element = this.element;\n    const className = this._controlBar.className;\n\n    element.classList.add(className.PLAY_BUTTON);\n    element.classList.remove(className.PAUSE_BUTTON);\n    element.title = \"Play Video\";\n\n    this._paused = true;\n  };\n}\n\nexport default PlayButton;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport RangeControl from \"./RangeControl\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { EVENTS } from \"../../const/external\";\n\n/**\n * Show video volume control.\n * @ko 비디오 볼륨 조절 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass VolumeControl extends ControlBarItem {\n  public get element() { return this._rootEl; }\n\n  private _controlBar: ControlBar | null;\n  private _rootEl: HTMLButtonElement;\n  private _buttonEl: HTMLElement;\n  private _rangeControl: RangeControl;\n  private _video: TextureVideo | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this._controlBar = null;\n    this._rangeControl = new RangeControl();\n    this._createElements();\n\n    this._video = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const video = viewer.mesh?.getTexture();\n    const root = this._rootEl;\n    const button = this._buttonEl;\n    const rangeControl = this._rangeControl;\n    const className = controlBar.className;\n    const unavailableClass = className.UNAVAILABLE;\n\n    if (!video || !video.isVideo()) {\n      root.classList.add(unavailableClass);\n      return;\n    }\n\n    root.classList.remove(unavailableClass);\n    root.classList.add(className.CONTROLS_BUTTON);\n    root.classList.add(className.VOLUME_ROOT);\n    button.classList.add(className.CONTROLS_BUTTON);\n\n    if (video.source.muted) {\n      button.classList.add(className.MUTED_BUTTON);\n    } else {\n      button.classList.add(className.UNMUTED_BUTTON);\n    }\n\n    viewer.on(EVENTS.RESIZE, this._onResize);\n    root.addEventListener(BROWSER.EVENTS.TRANSITION_END, this._onResize);\n    button.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_VOLUME_CHANGE, this._onVolumeChange);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_LOADED_DATA, this._updateDisplay);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_CAN_PLAYTHROUGH, this._updateDisplay);\n\n    rangeControl.init(className);\n    rangeControl.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    rangeControl.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    rangeControl.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n\n    this._controlBar = controlBar;\n    this._video = video;\n\n    this._updateDisplay();\n  }\n\n  public destroy(viewer: View360) {\n    const video = this._video;\n    const button = this._buttonEl;\n    const root = this._rootEl;\n\n    root.className = \"\";\n    button.className = \"\";\n\n    viewer.off(EVENTS.RESIZE, this._onResize);\n    root.removeEventListener(BROWSER.EVENTS.TRANSITION_END, this._onResize);\n    button.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n\n    if (video) {\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_VOLUME_CHANGE, this._onVolumeChange);\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_LOADED_DATA, this._updateDisplay);\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_CAN_PLAYTHROUGH, this._updateDisplay);\n    }\n\n    this._controlBar = null;\n    this._rangeControl.destroy();\n    this._video = null;\n  }\n\n  private _onResize = () => {\n    this._rangeControl.resize();\n    this._updateDisplay();\n  }\n\n  private _onClick = () => {\n    const video = this._video;\n    if (!video || this._rootEl.disabled) return;\n\n    video.source.muted = !video.source.muted;\n  };\n\n  private _onVolumeChange = () => {\n    const button = this._buttonEl;\n    const video = this._video;\n    const controlBar = this._controlBar;\n\n    if (!video || !controlBar) return;\n\n    const className = controlBar.className;\n\n    if (video.source.muted || video.source.volume === 0) {\n      button.classList.add(className.MUTED_BUTTON);\n      button.classList.remove(className.UNMUTED_BUTTON);\n    } else {\n      button.classList.add(className.UNMUTED_BUTTON);\n      button.classList.remove(className.MUTED_BUTTON);\n    }\n\n    this._updateDisplay();\n  };\n\n  private _createElements() {\n    const root = document.createElement(BROWSER.EL_BUTTON);\n    const buttonEl = document.createElement(BROWSER.EL_DIV);\n\n    root.appendChild(this._rangeControl.rootEl);\n    root.appendChild(buttonEl);\n    root.title = \"Toggle Mute\";\n\n    this._rootEl = root;\n    this._buttonEl = buttonEl;\n  }\n\n  private _onHold = (progress: number) => {\n    const video = this._video;\n    const controlBar = this._controlBar;\n\n    if (!video || !controlBar) return;\n\n    const className = controlBar.className;\n\n    video.source.volume = progress;\n\n    this._rootEl.classList.add(className.FIXED);\n    controlBar.containerEl.classList.add(className.FIXED);\n\n    this._updateDisplay();\n  };\n\n  private _onChange = (progress: number) => {\n    const video = this._video;\n    if (!video) return;\n\n    video.source.volume = progress;\n    if (progress > 0) {\n      video.source.muted = false;\n    } else {\n      video.source.muted = true;\n    }\n\n    this._updateDisplay();\n  };\n\n  private _onRelease = () => {\n    const controlBar = this._controlBar;\n    if (!controlBar) return;\n\n    const className = controlBar.className;\n\n    this._rootEl.classList.remove(className.FIXED);\n    controlBar.containerEl.classList.remove(className.FIXED);\n  };\n\n  private _updateDisplay = () => {\n    const video = this._video;\n    const root = this._rootEl;\n    if (!video) return;\n\n    if (!video.hasAudio()) {\n      root.disabled = true;\n      return;\n    }\n\n    root.disabled = false;\n\n    const volume = video.source.muted ? 0 : video.source.volume;\n\n    this._rangeControl.updateStyle(volume);\n  };\n}\n\nexport default VolumeControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport * as BROWSER from \"../../const/browser\";\nimport { isFullscreen } from \"../../utils\";\n\n/**\n * Show fullscreen enter / exit button.\n * @ko 풀스크린 진입 / 해제 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass FullscreenButton extends ControlBarItem {\n  public readonly element: HTMLElement;\n  private _controlBar: ControlBar | null;\n  private _targetEl: HTMLElement | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_BUTTON);\n    this.element.title = \"Toggle Fullscreen\";\n    this._controlBar = null;\n    this._targetEl = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n\n    if (!this._fullscreenAvailable()) {\n      element.classList.add(className.UNAVAILABLE);\n      return;\n    }\n\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.remove(className.UNAVAILABLE);\n    element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    this._addFullscreenHandlers();\n\n    if (isFullscreen()) {\n      element.classList.add(className.FULLSCREEN_EXIT_BUTTON);\n    } else {\n      element.classList.add(className.FULLSCREEN_BUTTON);\n    }\n\n    this._controlBar = controlBar;\n    this._targetEl = viewer.rootEl;\n  }\n\n  public destroy() {\n    const element = this.element;\n\n    element.className = \"\";\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    this._removeFullscreenHandlers();\n\n    this._controlBar = null;\n    this._targetEl = null;\n  }\n\n  private _onClick = () => {\n    const target = this._targetEl;\n    if (!target) return;\n\n    if (isFullscreen()) {\n      this._exitFullscreen();\n    } else {\n      this._requestFullscreen(target);\n    }\n  };\n\n  private _fullscreenAvailable() {\n    return BROWSER.FULLSCREEN_REQUEST.some(key => !!document[key]);\n  }\n\n  private _requestFullscreen(el: HTMLElement) {\n    for (const key of BROWSER.FULLSCREEN_REQUEST) {\n      const request = el[key];\n      if (request) {\n        request.call(el);\n        return;\n      }\n    }\n  }\n\n  private _exitFullscreen() {\n    for (const key of BROWSER.FULLSCREEN_EXIT) {\n      const exit = document[key];\n\n      if (exit) {\n        exit.call(document);\n        return;\n      }\n    }\n  }\n\n  private _addFullscreenHandlers() {\n    BROWSER.FULLSCREEN_CHANGE.forEach(evtName => {\n      document.addEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n\n  private _removeFullscreenHandlers() {\n    BROWSER.FULLSCREEN_CHANGE.forEach(evtName => {\n      document.removeEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n\n  private _onFullscreenChange = () => {\n    const element = this.element;\n    const controlBar = this._controlBar;\n\n    if (!controlBar) return;\n\n    const className = controlBar.className;\n\n    if (isFullscreen()) {\n      element.classList.add(className.FULLSCREEN_EXIT_BUTTON);\n      element.classList.remove(className.FULLSCREEN_BUTTON);\n    } else {\n      element.classList.add(className.FULLSCREEN_BUTTON);\n      element.classList.remove(className.FULLSCREEN_EXIT_BUTTON);\n    }\n  };\n}\n\nexport default FullscreenButton;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport * as BROWSER from \"../../const/browser\";\nimport { VIDEO_TIME_CHANGE_EVENT } from \"../../const/internal\";\n\n/**\n * Show video current / total time.\n * @ko 비디오의 현재 / 총 재생시간을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass VideoTime extends ControlBarItem {\n  public readonly element: HTMLElement;\n  private _video: TextureVideo | null;\n  private _currentTime: number;\n  private _duration: number;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_LEFT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_DIV);\n\n    this._video = null;\n    this._currentTime = 0;\n    this._duration = 0;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const video = viewer.mesh?.getTexture();\n    const element = this.element;\n    const className = controlBar.className;\n\n    if (!video || !video.isVideo()) {\n      element.classList.add(className.UNAVAILABLE);\n      return;\n    }\n\n    element.classList.add(className.VIDEO_TIME_DISPLAY);\n    element.classList.remove(className.UNAVAILABLE);\n\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.addEventListener(VIDEO_TIME_CHANGE_EVENT, this._onCustomTimeChange);\n\n    this._video = video;\n    this._currentTime = video.source.currentTime;\n    this._duration = video.source.duration;\n\n    this._updateDisplay();\n  }\n\n  public destroy() {\n    const video = this._video;\n\n    if (!video) return;\n\n    this.element.className = \"\";\n    video.source.removeEventListener(BROWSER.EVENTS.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.removeEventListener(BROWSER.EVENTS.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.removeEventListener(VIDEO_TIME_CHANGE_EVENT, this._onCustomTimeChange);\n\n    this._video = null;\n  }\n\n  private _onTimeUpdate = () => {\n    const video = this._video;\n    if (!video) return;\n\n    this._currentTime = video.source.currentTime;\n    this._updateDisplay();\n  };\n\n  private _onDurationChange = () => {\n    const video = this._video;\n    if (!video) return;\n\n    this._duration = video.source.duration;\n    this._updateDisplay();\n  };\n\n  private _onCustomTimeChange = (evt: CustomEvent<{ time: number }>) => {\n    this._currentTime = evt.detail.time;\n    this._updateDisplay();\n  };\n\n  private _updateDisplay() {\n    const time = this._currentTime;\n    const timeMinute = Math.floor(time / 60);\n    const timeSeconds = Math.floor(time - timeMinute * 60);\n    const timeSecondsFormatted = timeSeconds < 10 ? `0${timeSeconds}` : timeSeconds;\n\n    const duration = this._duration;\n    const durationMinute = Math.floor(duration / 60);\n    const durationSeconds = Math.floor(duration - durationMinute * 60);\n    const durationSecondsFormatted = durationSeconds < 10 ? `0${durationSeconds}` : durationSeconds;\n\n    this.element.innerText = `${timeMinute}:${timeSecondsFormatted} / ${durationMinute}:${durationSecondsFormatted}`;\n  }\n}\n\nexport default VideoTime;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport { circulate, getObjectOption } from \"../../utils\";\nimport * as BROWSER from \"../../const/browser\";\nimport { EVENTS } from \"../../const/external\";\nimport { SVG_NAMESPACE } from \"../../const/internal\";\n\n/**\n * Options for {@link PieView}\n * @ko {@link PieView}용 옵션들\n * @category Plugin\n */\nexport interface PieViewOptions extends ControlBarItemOptions {\n  /**\n   * @copy PieView#resetCamera\n   */\n  resetCamera: boolean | Partial<{\n    yaw: number;\n    pitch: number;\n    zoom: number;\n    duration: number;\n    easing: (x: number) => number;\n  }>;\n}\n\n/**\n * Show camera direction/fov indicator.\n * @ko 카메라가 향하는 방향 및 FOV를 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass PieView extends ControlBarItem {\n  public readonly element: HTMLElement;\n\n  /**\n   * Set rotation to reset camera to when PieView is clicked.\n   * `false` will disable this value, and `true` will enable with default options.\n   * @ko PieView가 클릭되었을 때 카메라를 리셋할 방향을 지정합니다.\n   * `false`일 경우 이 동작을 비활성화하며, `true`일 경우 기본값을 사용합니다.\n   * @since 4.0.0\n   */\n  public resetCamera: PieViewOptions[\"resetCamera\"];\n\n  private _viewer: View360 | null;\n  private _piePathEl: SVGPathElement;\n  private _rangeCircleEl: SVGCircleElement;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    resetCamera = true,\n    position = CONTROL_BAR_ITEM_POSITION.TOP_RIGHT,\n    order = 9999\n  }: Partial<PieViewOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_DIV);\n    this.element.title = \"Reset view\";\n    this.resetCamera = resetCamera;\n    this._createPieElements();\n    this._viewer = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n\n    if (!viewer.initialized) {\n      viewer.once(EVENTS.READY, this._updatePie);\n    } else {\n      this._updatePie({ target: viewer });\n    }\n\n    const rootClass = controlBar.className.PIEVIEW_ROOT;\n    element.classList.add(rootClass);\n\n    if (this.resetCamera) {\n      element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    }\n\n    viewer.on(EVENTS.VIEW_CHANGE, this._updatePie);\n\n    this._viewer = viewer;\n  }\n\n  public destroy(viewer: View360) {\n    const element = this.element;\n\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    element.className = \"\";\n    viewer.off(EVENTS.READY, this._updatePie);\n    viewer.off(EVENTS.VIEW_CHANGE, this._updatePie);\n\n    this._viewer = null;\n  }\n\n  private _onClick = () => {\n    const viewer = this._viewer;\n    const resetCamera = this.resetCamera;\n\n    if (!viewer || !resetCamera) return;\n\n    const {\n      yaw = viewer.initialYaw,\n      pitch = viewer.initialPitch,\n      zoom = viewer.initialZoom,\n      duration = 500\n    } = getObjectOption(resetCamera);\n\n    viewer.camera.animateTo({\n      yaw,\n      pitch,\n      zoom,\n      duration\n    });\n  };\n\n  private _createPieElements() {\n    const root = this.element;\n    const pieSVG = document.createElementNS(SVG_NAMESPACE, \"svg\");\n    pieSVG.setAttribute(\"viewBox\", \"0 0 48 48\");\n    pieSVG.setAttribute(\"width\", \"100%\");\n    pieSVG.setAttribute(\"height\", \"100%\");\n\n    const piePath = document.createElementNS(SVG_NAMESPACE, \"circle\");\n\n    piePath.setAttribute(\"stroke\", \"currentColor\");\n    piePath.setAttribute(\"fill\", \"transparent\");\n    piePath.setAttribute(\"cx\", \"24\");\n    piePath.setAttribute(\"cy\", \"24\");\n    piePath.setAttribute(\"r\", \"12\");\n    piePath.setAttribute(\"stroke-width\", \"24\");\n    pieSVG.appendChild(piePath);\n\n    const rangeCircle = document.createElementNS(SVG_NAMESPACE, \"circle\");\n\n    rangeCircle.setAttribute(\"stroke\", \"currentColor\");\n    rangeCircle.setAttribute(\"fill\", \"transparent\");\n    rangeCircle.setAttribute(\"cx\", \"24\");\n    rangeCircle.setAttribute(\"cy\", \"24\");\n    rangeCircle.setAttribute(\"r\", \"22.5\");\n    rangeCircle.setAttribute(\"stroke-width\", \"3\");\n    pieSVG.appendChild(rangeCircle);\n\n    root.appendChild(pieSVG);\n\n    this._piePathEl = piePath;\n    this._rangeCircleEl = rangeCircle;\n  }\n\n  private _updatePie = ({ target: viewer }: { target: View360 }) => {\n    const piePath = this._piePathEl;\n    const rangeCircle = this._rangeCircleEl;\n    const camera = viewer.camera;\n    const fov = camera.getHorizontalFov();\n    const yawRange = camera.getYawRange(camera.zoom);\n    const halfFov = fov * 0.5;\n\n    const pieRadius = 24 * Math.PI;\n    const pieDeg = pieRadius * fov / 360;\n    const pieOffset = pieRadius * (camera.yaw + halfFov + 90) / 360;\n\n    piePath.setAttribute(\"stroke-dasharray\", `${pieDeg} ${pieRadius - pieDeg}`);\n    piePath.setAttribute(\"stroke-dashoffset\", `${pieOffset}`);\n\n    if (isFinite(yawRange.min) && isFinite(yawRange.max)) {\n      const radius = 45 * Math.PI; // 2 * PI * r\n      const min = (circulate(yawRange.min, -180, 180) - halfFov) / 360;\n      const max = (circulate(yawRange.max, -180, 180) + halfFov) / 360;\n\n      const rangeDiff = radius * Math.abs(max - min);\n      const offset = -radius * (min - 0.25);\n\n      rangeCircle.setAttribute(\"stroke-dasharray\", `${rangeDiff} ${radius - rangeDiff}`);\n      rangeCircle.setAttribute(\"stroke-dashoffset\", `${offset}`);\n    } else {\n      rangeCircle.setAttribute(\"stroke-dasharray\", \"\");\n      rangeCircle.setAttribute(\"stroke-dashoffset\", \"\");\n    }\n  };\n}\n\nexport default PieView;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport * as BROWSER from \"../../const/browser\";\n\n/**\n * Show VR enter button.\n * @ko VR 진입 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass VRButton extends ControlBarItem {\n  public readonly element: HTMLElement;\n\n  private _viewer: View360 | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_BUTTON);\n    this.element.title = \"Enter VR\";\n    this._viewer = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n\n    element.classList.add(className.UNAVAILABLE);\n    element.classList.add(className.VR_BUTTON);\n    element.classList.add(className.CONTROLS_BUTTON);\n\n    viewer.vr.isAvailable()\n      .then(available => {\n        if (available) {\n          element.classList.remove(className.UNAVAILABLE);\n        }\n      });\n\n    element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    this._viewer = viewer;\n  }\n\n  public destroy() {\n    const element = this.element;\n\n    element.className = \"\";\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n\n    this._viewer = null;\n  }\n\n  private _onClick = () => {\n    const viewer = this._viewer;\n    if (!viewer) return;\n\n    viewer.vr.enter();\n  };\n}\n\nexport default VRButton;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport * as BROWSER from \"../../const/browser\";\nimport GyroControl from \"../../control/GyroControl\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { sensorCanBeEnabledIOS } from \"../../utils\";\n\n/**\n * Show gyroscope control enable / disable button\n * @ko 자이로스코프 컨트롤 활성화 / 비활성화 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass GyroButton extends ControlBarItem {\n  public readonly element: HTMLElement;\n  private _viewer: View360 | null;\n  private _controlBar: ControlBar | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_DIV);\n    this.element.title = \"Toggle gyroscope control\";\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n\n    element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.add(className.UNAVAILABLE);\n\n    const enableButton = () => {\n      element.classList.remove(className.UNAVAILABLE);\n      viewer.control.gyro.on(CONTROL_EVENTS.ENABLE, this._updateStyle);\n      viewer.control.gyro.on(CONTROL_EVENTS.DISABLE, this._updateStyle);\n    };\n\n    if (sensorCanBeEnabledIOS()) {\n      enableButton();\n    } else {\n      GyroControl.isAvailable().then(available => {\n        if (!available) return;\n        enableButton();\n      });\n    }\n\n    this._controlBar = controlBar;\n    this._viewer = viewer;\n    this._updateStyle();\n  }\n\n  public destroy(viewer: View360) {\n    const element = this.element;\n\n    viewer.control.gyro.off(CONTROL_EVENTS.ENABLE, this._updateStyle);\n    viewer.control.gyro.off(CONTROL_EVENTS.DISABLE, this._updateStyle);\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    element.className = \"\";\n\n    this._controlBar = null;\n    this._viewer = null;\n  }\n\n  private _onClick = () => {\n    const viewer = this._viewer;\n    const controlBar = this._controlBar;\n\n    if (!viewer || !controlBar) return;\n\n    const gyroControl = viewer.control.gyro;\n    if (gyroControl.enabled) {\n      gyroControl.disable();\n    } else {\n      GyroControl.requestSensorPermission().then(available => {\n        if (available) {\n          gyroControl.enable();\n        } else {\n          this.element.classList.add(controlBar.className.UNAVAILABLE);\n        }\n      });\n    }\n  };\n\n  private _updateStyle = () => {\n    const element = this.element;\n    const viewer = this._viewer;\n    const controlBar = this._controlBar;\n\n    if (!viewer || !controlBar) return;\n\n    const gyroControl = viewer.control.gyro;\n    const className = controlBar.className;\n\n    if (gyroControl.enabled) {\n      element.classList.add(className.GYRO_ENABLED);\n      element.classList.remove(className.GYRO_DISABLED);\n    } else {\n      element.classList.add(className.GYRO_DISABLED);\n      element.classList.remove(className.GYRO_ENABLED);\n    }\n  };\n}\n\nexport default GyroButton;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport View360 from \"../../View360\";\nimport * as BROWSER from \"../../const/browser\";\nimport { FULLSCREEN_CHANGE } from \"../../const/browser\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport { isFullscreen } from \"../../utils\";\n\n/**\n * Options for ControlBar's {@link ControlBarOptions#autoHide}\n * @ko ControlBar의 {@link ControlBarOptions#autoHide}용 옵션\n * @category Plugin\n * @since 4.0.0\n */\nexport interface AutoHideOptions {\n  /**\n   * Initial delay before the control bar hides (ms)\n   * @ko 컨트롤바가 처음으로 표시되고 사라지기까지 걸리는 시간 (ms)\n   * @default 3000\n   * @since 4.0.0\n   */\n  initialDelay: number;\n  /**\n   * Delay time before hiding the control bar after mouse leave (ms)\n   * @ko 마우스가 컨트롤바 영역을 떠난 뒤 컨트롤바가 사라지기까지 걸리는 시간 (ms)\n   * @default 0\n   * @since 4.0.0\n   */\n  delay: number;\n  /**\n   * Delay time before hiding the control bar becomes active, like touch on mobile device or mouse move in fullscreen mode (ms)\n   * @ko 모바일이나 풀스크린 환경 등에서 사용자 입력이 없을 때 컨트롤바가 사라지기까지 걸리는 시간 (ms)\n   * @default 3000\n   * @since 4.0.0\n   */\n  idleDelay: number;\n}\n\nclass AutoHide {\n  private _initialDelay: AutoHideOptions[\"initialDelay\"];\n  private _delay: AutoHideOptions[\"delay\"];\n  private _idleDelay: AutoHideOptions[\"idleDelay\"];\n\n  private _controlBar: ControlBar;\n  private _timer: number;\n  private _isGrabbing: boolean;\n  private _isCursorInside: boolean;\n  private _isFullscreen: boolean;\n  private _targetEl: HTMLElement | null;\n  private _video: TextureVideo | null;\n\n  public get enabled() { return !!this._targetEl; }\n  public get hidden() { return this._controlBar.containerEl.classList.contains(this._hiddenClass); }\n\n  private get _hiddenClass() { return this._controlBar.className.HIDDEN; }\n  private get _fixedClass() { return this._controlBar.className.FIXED; }\n\n  public constructor(controlBar: ControlBar, {\n    initialDelay = 3000,\n    delay = 0,\n    idleDelay: activationDelay = 3000\n  }: Partial<AutoHideOptions>) {\n    this._controlBar = controlBar;\n    this._initialDelay = initialDelay;\n    this._delay = delay;\n    this._idleDelay = activationDelay;\n    this._timer = -1;\n    this._isCursorInside = false;\n    this._isGrabbing = false;\n    this._isFullscreen = false;\n    this._video = null;\n    this._targetEl = null;\n  }\n\n  public enable(viewer: View360) {\n    if (this._targetEl) {\n      this.disable(viewer);\n    }\n\n    const initialDelay = this._initialDelay;\n    const root = viewer.rootEl;\n\n    this._targetEl = viewer.rootEl;\n    this._timer = window.setTimeout(() => {\n      this.hide();\n    }, initialDelay);\n\n    root.addEventListener(BROWSER.EVENTS.MOUSE_DOWN, this._onHold);\n    root.addEventListener(BROWSER.EVENTS.MOUSE_ENTER, this._onMouseEnter);\n    root.addEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove);\n    root.addEventListener(BROWSER.EVENTS.MOUSE_LEAVE, this._onMouseLeave);\n    this._addFullscreenHandlers();\n\n    const video = viewer.mesh?.getTexture();\n    if (!video || !video.isVideo()) {\n      return;\n    }\n\n    if (video.isPaused()) {\n      this._controlBar.containerEl.classList.add(this._fixedClass);\n    }\n\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_PLAY, this._onVideoPlay);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_PAUSE, this._onVideoPause);\n\n    this._video = video;\n  }\n\n  public disable(viewer: View360) {\n    if (!this._targetEl) return;\n\n    const controlBar = this._controlBar;\n    const root = viewer.rootEl;\n    const video = this._video;\n\n    root.removeEventListener(BROWSER.EVENTS.MOUSE_DOWN, this._onHold);\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_UP, this._onRelease);\n    root.removeEventListener(BROWSER.EVENTS.MOUSE_ENTER, this._onMouseEnter);\n    root.removeEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove);\n    root.removeEventListener(BROWSER.EVENTS.MOUSE_LEAVE, this._onMouseLeave);\n    this._removeFullscreenHandlers();\n\n    window.clearTimeout(this._timer);\n    controlBar.containerEl.classList.remove(this._fixedClass);\n\n    if (video) {\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_PLAY, this._onVideoPlay);\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_PAUSE, this._onVideoPause);\n    }\n\n    this._isCursorInside = false;\n    this._isGrabbing = false;\n    this._video = null;\n    this._targetEl = null;\n  }\n\n  public show() {\n    this._clearHideTimer();\n    this._controlBar.containerEl.classList.remove(this._hiddenClass);\n  }\n\n  public showTemporaliy() {\n    this.show();\n    this._hideAfterDelay(this._idleDelay);\n  }\n\n  public hide() {\n    this._clearHideTimer();\n    this._controlBar.containerEl.classList.add(this._hiddenClass);\n  }\n\n  private _clearHideTimer() {\n    if (this._timer) {\n      window.clearTimeout(this._timer);\n      this._timer = -1;\n    }\n  }\n\n  private _hideAfterDelay(delay = this._delay) {\n    if (this._isGrabbing || (!this._isFullscreen && this._isCursorInside)) return;\n\n    this._clearHideTimer();\n    if (delay <= 0) {\n      this.hide();\n    } else {\n      this._timer = window.setTimeout(() => {\n        this.hide();\n      }, delay);\n    }\n  }\n\n  private _onMouseEnter = () => {\n    this._isCursorInside = true;\n    this.show();\n  };\n\n  private _onMouseLeave = () => {\n    this._isCursorInside = false;\n    this._hideAfterDelay();\n  };\n\n  private _onMouseMove = () => {\n    if (!this._isFullscreen) return;\n\n    this.showTemporaliy();\n  }\n\n  private _onHold = (evt: PointerEvent) => {\n    this._isGrabbing = true;\n\n    if (evt.pointerType === \"mouse\") {\n      this._isCursorInside = true;\n    }\n\n    window.addEventListener(BROWSER.EVENTS.MOUSE_UP, this._onRelease);\n\n    this.show();\n  };\n\n  private _onRelease = () => {\n    this._isGrabbing = false;\n\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_UP, this._onRelease);\n\n    this._hideAfterDelay();\n  };\n\n  private _onVideoPlay = () => {\n    const root = this._targetEl;\n    if (!root) return;\n\n    this._controlBar.containerEl.classList.remove(this._fixedClass);\n  };\n\n  private _onVideoPause = () => {\n    const root = this._targetEl;\n    if (!root) return;\n\n    this._controlBar.containerEl.classList.add(this._fixedClass);\n  };\n\n  private _addFullscreenHandlers() {\n    FULLSCREEN_CHANGE.forEach(evtName => {\n      document.addEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n\n  private _removeFullscreenHandlers() {\n    FULLSCREEN_CHANGE.forEach(evtName => {\n      document.removeEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n\n  private _onFullscreenChange = () => {\n    this._isFullscreen = isFullscreen();\n\n    if (this._isFullscreen) {\n      this._hideAfterDelay();\n    }\n  };\n}\n\nexport default AutoHide;\n","import TextureVideo from \"../../texture/TextureVideo\";\nimport * as BROWSER from \"../../const/browser\";\nimport { clamp } from \"../../utils\";\nimport { VIDEO_TIME_CHANGE_EVENT } from \"../../const/internal\";\n\nclass VideoControl {\n  private _video: TextureVideo | null;\n\n  public enable(root: HTMLElement, video: TextureVideo) {\n    this._video = video;\n    // capture is needed for resolving conflict with keyboard control\n    root.addEventListener(BROWSER.EVENTS.KEY_DOWN, this._onKeyDown, true);\n  }\n\n  public disable(root: HTMLElement) {\n    this._video = null;\n    root.removeEventListener(BROWSER.EVENTS.KEY_DOWN, this._onKeyDown, true);\n  }\n\n  private _onKeyDown = (event: KeyboardEvent) => {\n    const video = this._video;\n    if (!video) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    const videoEl = video.source;\n    const keyPressed = event.keyCode != null\n      ? BROWSER.DIRECTION_KEY_CODE[event.keyCode]\n      : BROWSER.DIRECTION_KEY_NAME[event.key];\n\n    switch (keyPressed) {\n      case \"LEFT\":\n      case \"RIGHT\":\n        return this._changeVideoTime(videoEl, keyPressed === \"RIGHT\");\n      case \"UP\":\n      case \"DOWN\":\n        return this._changeVideoVolume(videoEl, keyPressed === \"UP\");\n    }\n\n    const spacePressed = event.keyCode === BROWSER.SPACE_KEY_CODE || event.key === BROWSER.SPACE_KEY_NAME;\n    if (spacePressed) {\n      this._toggleVideo(video);\n    }\n  }\n\n  private _changeVideoTime(video: HTMLVideoElement, forward: boolean) {\n    const delta = forward ? 5 : -5;\n\n    video.currentTime += delta;\n    video.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, { detail: { time: video.currentTime }}));\n  }\n\n  private _changeVideoVolume(video: HTMLVideoElement, increase: boolean) {\n    const delta = increase ? 0.1 : -0.1;\n\n    if (video.muted) {\n      video.volume = clamp(delta, 0, 1);\n    } else {\n      video.volume = clamp(video.volume + delta, 0, 1);\n    }\n\n    if (video.volume > 0) {\n      video.muted = false;\n    } else {\n      video.muted = true;\n    }\n  }\n\n  private _toggleVideo(video: TextureVideo) {\n    if (video.isPaused()) {\n      video.source.play();\n    } else {\n      video.source.pause();\n    }\n  }\n}\n\nexport default VideoControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport ProgressBar from \"./ProgressBar\";\nimport PlayButton from \"./PlayButton\";\nimport VolumeControl from \"./VolumeControl\";\nimport FullscreenButton from \"./FullscreenButton\";\nimport VideoTime from \"./VideoTime\";\nimport PieView, { PieViewOptions } from \"./PieView\";\nimport VRButton from \"./VRButton\";\nimport GyroButton from \"./GyroButton\";\nimport AutoHide, { AutoHideOptions } from \"./AutoHide\";\nimport VideoControl from \"./VideoControl\";\nimport View360, { View360Events } from \"../../View360\";\nimport View360Plugin from \"../View360Plugin\";\nimport { EVENTS } from \"../../const/external\";\nimport { createElement, findIndex, getObjectOption } from \"../../utils\";\nimport { ValueOf } from \"../../type/utils\";\nimport { StaticClickEvent } from \"../../type/events\";\nimport { CONTROL_BAR_DEFAULT_CLASS, CONTROL_BAR_ITEM_POSITION } from \"./const\";\n\n/**\n * Options for {@link ControlBar}\n * @ko {@link ControlBar}용 옵션들\n * @category Plugin\n * @since 4.0.0\n */\nexport interface ControlBarOptions {\n  /**\n   * @copy ControlBar#autoHide\n   */\n  autoHide: boolean | Partial<AutoHideOptions>;\n  /**\n   * @copy ControlBar#showBackground\n   */\n  showBackground: boolean;\n  /**\n   * @copy ControlBar#clickToPlay\n   */\n  clickToPlay: boolean;\n  /**\n   * @copy ControlBar#keyboardControls\n   */\n  keyboardControls: boolean;\n  /**\n   * @copy ControlBar#progressBar\n   */\n  progressBar: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#playButton\n   */\n  playButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#volumeButton\n   */\n  volumeButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#fullscreenButton\n   */\n  fullscreenButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#videoTime\n   */\n  videoTime: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#pieView\n   */\n  pieView: boolean | Partial<PieViewOptions>;\n  /**\n   * @copy ControlBar#vrButton\n   */\n  vrButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#gyroButton\n   */\n  gyroButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#className\n   */\n  className: Partial<{ -readonly [key in keyof typeof ControlBar.DEFAULT_CLASS]: string }>;\n  /**\n   * @copy ControlBar#customItems\n   */\n  customItems: ControlBarItem[];\n}\n\n/**\n * A plugin that displays extra buttons & controls that controls {@link View360}.\n * @ko {@link View360}에 부가적인 버튼과 컨트롤을 추가해주는 플러그인.\n * @category Plugin\n * @since 4.0.0\n */\nclass ControlBar implements View360Plugin {\n  /**\n   * Default class names that ControlBar uses\n   * @ko ControlBar가 사용하는 디폴트 클래스 이름들\n   * @since 4.0.0\n   */\n  public static readonly DEFAULT_CLASS = CONTROL_BAR_DEFAULT_CLASS;\n\n  /**\n   * Constants for {@link ControlBarItemOptions#position}\n   * @ko {@link ControlBarItemOptions#position}에 사용 가능한 값들\n   */\n  public static readonly POSITION = CONTROL_BAR_ITEM_POSITION;\n\n  /**\n   * Automatically hide control bar on video plays.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오 재생시 자동으로 컨트롤바를 숨깁니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly autoHide?: ControlBarOptions[\"autoHide\"];\n  /**\n   * Show background element.\n   * @ko 배경 엘리먼트를 표시합니다.\n   * @since 4.0.0\n   */\n  public readonly showBackground?: ControlBarOptions[\"showBackground\"];\n  /**\n   * Whether to play / pause video on canvas click\n   * @ko 캔버스 클릭시에 비디오를 재생 / 일시정지 토글합니다.\n   * @since 4.0.0\n   */\n  public readonly clickToPlay: ControlBarOptions[\"clickToPlay\"];\n  /**\n   * Enable keyboard controls for video.\n   * Pressing up / down arrow will control video volume, and pressing left / right arrow will control video time.\n   * @ko 비디오 키보드 컨트롤을 활성화합니다.\n   * 위 / 아래 화살표키를 누를 시 비디오 볼륨을, 왼쪽 / 오른쪽 화살표키를 누를 시 비디오 시간을 조정합니다.\n   * @since 4.0.0\n   */\n  public readonly keyboardControls: ControlBarOptions[\"keyboardControls\"];\n  /**\n   * Show video progress bar.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오 프로그레스 바를 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly progressBar: ControlBarOptions[\"progressBar\"];\n  /**\n   * Show video play / pause button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오 재생 / 일시정지 버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly playButton: ControlBarOptions[\"playButton\"];\n  /**\n   * Show video volume control button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오 볼륨 조절 버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly volumeButton: ControlBarOptions[\"volumeButton\"];\n  /**\n   * Show fullscreen button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 풀스크린 진입 / 해제 버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly fullscreenButton: ControlBarOptions[\"fullscreenButton\"];\n  /**\n   * Show video current / total time\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오의 현재 시간 / 총 시간을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly videoTime: ControlBarOptions[\"videoTime\"];\n  /**\n   * Show camera pie view.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 현재 카메라가 가리키는 방향을 표시하는 파이 뷰를 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly pieView: ControlBarOptions[\"pieView\"];\n  /**\n   * Show VR button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko VR 진입버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly vrButton: ControlBarOptions[\"vrButton\"];\n  /**\n   * Show gyroscope control enable / disable button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 자이로스코프 컨트롤을 활성화 / 비활성화하는 버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly gyroButton: ControlBarOptions[\"gyroButton\"];\n  /**\n   * Override default class names.\n   * @ko 디폴트 클래스 이름들을 오버라이드합니다.\n   * @since 4.0.0\n   */\n  public readonly className: Required<ControlBarOptions[\"className\"]>;\n\n  /**\n   * Root element of the control bar\n   * @ko 컨트롤바의 루트 엘리먼트\n   * @since 4.0.0\n   */\n  public get rootEl() { return this._rootEl; }\n  /**\n   * Container element of the control bar\n   * @ko 컨트롤바의 컨테이너 엘리먼트\n   * @since 4.0.0\n   */\n  public get containerEl() { return this._containerEl; }\n  /**\n   * Background element of the control bar\n   * @ko 컨트롤바의 배경 엘리먼트\n   * @since 4.0.0\n   */\n  public get backgroundEl() { return this._bgEl; }\n  /**\n   * Control bar's default items created by {@link ControlBarOptions}\n   * @ko 주어진 {@link ControlBarOptions}에 의해 생성된 디폴트 아이템들\n   * @since 4.0.0\n   */\n  public get items() { return this._items; }\n  /**\n   * Custom control bar items\n   * @ko 커스텀 컨트롤바 아이템들을 추가합니다.\n   * @since 4.0.0\n   */\n  public get customItems() { return this._customItems; }\n\n  private _rootEl: HTMLElement;\n  private _containerEl: HTMLElement;\n  private _bgEl: HTMLElement;\n  private _wrapperEl: Record<ValueOf<typeof ControlBar.POSITION>, HTMLElement>;\n  private _items: Record<ValueOf<typeof ControlBar.POSITION>, ControlBarItem[]>;\n  private _customItems: ControlBarItem[];\n  private _autoHider: AutoHide;\n  private _videoControl: VideoControl;\n\n  /**\n   * Create new instance of ControlBar.\n   * @ko ControlBar의 새 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    autoHide,\n    showBackground,\n    clickToPlay = true,\n    keyboardControls = true,\n    progressBar = true,\n    playButton = true,\n    volumeButton = true,\n    fullscreenButton = true,\n    videoTime = true,\n    pieView = true,\n    vrButton = true,\n    gyroButton = true,\n    className = {},\n    customItems = []\n  }: Partial<ControlBarOptions> = {}) {\n    this.autoHide = autoHide;\n    this.showBackground = showBackground;\n    this.clickToPlay = clickToPlay;\n    this.keyboardControls = keyboardControls;\n    this.progressBar = progressBar;\n    this.playButton = playButton;\n    this.volumeButton = volumeButton;\n    this.fullscreenButton = fullscreenButton;\n    this.videoTime = videoTime;\n    this.pieView = pieView;\n    this.vrButton = vrButton;\n    this.gyroButton = gyroButton;\n    this.className = {\n      ...ControlBar.DEFAULT_CLASS,\n      ...className\n    };\n\n    const rootClass = className.CONTROLS_ROOT ?? ControlBar.DEFAULT_CLASS.CONTROLS_ROOT;\n\n    this._rootEl = createElement(rootClass);\n    this._createPositionWrappers();\n    this._items = Object.keys(ControlBar.POSITION).reduce((items, key) => {\n      items[ControlBar.POSITION[key]] = [];\n      return items;\n    }, {}) as Record<ValueOf<typeof ControlBar.POSITION>, ControlBarItem[]>;\n    this._customItems = customItems;\n    this._autoHider = new AutoHide(this, getObjectOption(autoHide));\n    this._videoControl = new VideoControl();\n\n    customItems.forEach(item => {\n      this._items[item.position].push(item);\n    });\n  }\n\n  public init(viewer: View360) {\n    const panoRoot = viewer.rootEl;\n    const controlsRoot = this._rootEl;\n    const defaultItems = this._createDefaultItems();\n\n    this._updateBackground(viewer);\n    this._updateAutoHide(viewer);\n    this._updateKeyboardHandler(viewer);\n\n    panoRoot.appendChild(controlsRoot);\n    this._addItem(viewer, defaultItems);\n    this._addItem(viewer, this._customItems);\n\n    viewer.on(EVENTS.PROJECTION_CHANGE, this._onNewSrcLoad);\n    viewer.on(EVENTS.STATIC_CLICK, this._onStaticClick);\n  }\n\n  public destroy(viewer: View360): void {\n    // Remove controls root from pano root\n    const panoRoot = viewer.rootEl;\n    const controlsRoot = this._rootEl;\n    const items = this._items;\n\n    if (controlsRoot.parentElement === panoRoot) {\n      panoRoot.removeChild(controlsRoot);\n    }\n\n    Object.keys(items).forEach((key: ValueOf<typeof ControlBar.POSITION>) => {\n      const category = items[key];\n\n      category.forEach(item => {\n        item.destroy(viewer, this);\n      });\n\n      items[key] = [];\n    });\n\n    this._clearItemElements();\n    this._autoHider.disable(viewer);\n    this._videoControl.disable(panoRoot);\n\n    viewer.off(EVENTS.PROJECTION_CHANGE, this._onNewSrcLoad);\n    viewer.off(EVENTS.STATIC_CLICK, this._onStaticClick);\n  }\n\n  private _addItem(viewer: View360, items: ControlBarItem[]) {\n    for (const item of items) {\n      const category = this._items[item.position];\n      const wrapper = this._wrapperEl[item.position];\n\n      const nextSiblingIndex = findIndex(category, sibling => sibling.order > item.order);\n\n      if (nextSiblingIndex >= 0) {\n        const nextSibling = category[nextSiblingIndex].element;\n        category.splice(nextSiblingIndex, 0, item);\n        wrapper.insertBefore(item.element, nextSibling);\n      } else {\n        category.push(item);\n        wrapper.appendChild(item.element);\n      }\n\n      item.init(viewer, this);\n    }\n  }\n\n  private _createPositionWrappers() {\n    const className = {\n      ...ControlBar.DEFAULT_CLASS,\n      ...this.className\n    };\n    const rootEl = this._rootEl;\n\n    // BG & FLOATING CONTROLS\n    const backgroundEl = createElement(className.CONTROLS_BG);\n    const floatLeftEl = createElement(className.CONTROLS_FLOAT_LEFT);\n    const floatRightEl = createElement(className.CONTROLS_FLOAT_RIGHT);\n\n    rootEl.appendChild(floatLeftEl);\n    rootEl.appendChild(floatRightEl);\n\n    // BOTTOM CONTROLS\n    const container = createElement(className.CONTROLS_MAIN);\n    const topWrapper = createElement(className.CONTROLS_TOP);\n    const bottomWrapper = createElement(className.CONTROLS_BOTTOM);\n    const midWrapper = createElement(className.CONTROLS_MID);\n    const leftControlsWrapper = createElement(className.CONTROLS_LEFT);\n    const rightControlsWrapper = createElement(className.CONTROLS_RIGHT);\n\n    midWrapper.appendChild(leftControlsWrapper);\n    midWrapper.appendChild(rightControlsWrapper);\n    container.appendChild(backgroundEl);\n    container.appendChild(topWrapper);\n    container.appendChild(midWrapper);\n    container.appendChild(bottomWrapper);\n    rootEl.appendChild(container);\n\n    this._bgEl = backgroundEl;\n    this._containerEl = container;\n    this._wrapperEl = {\n      [ControlBar.POSITION.MAIN_TOP]: topWrapper,\n      [ControlBar.POSITION.MAIN_LEFT]: leftControlsWrapper,\n      [ControlBar.POSITION.MAIN_RIGHT]: rightControlsWrapper,\n      [ControlBar.POSITION.MAIN_BOTTOM]: bottomWrapper,\n      [ControlBar.POSITION.TOP_LEFT]: floatLeftEl,\n      [ControlBar.POSITION.TOP_RIGHT]: floatRightEl\n    };\n  }\n\n  private _clearItemElements() {\n    const wrappers = Object.keys(ControlBar.POSITION)\n      .map(key => ControlBar.POSITION[key])\n      .map(pos => this._wrapperEl[pos]);\n\n    // Remove all elements inside wrappers\n    wrappers.forEach(wrapper => {\n      while (wrapper.firstChild) {\n        wrapper.removeChild(wrapper.firstChild);\n      }\n    });\n  }\n\n  private _onStaticClick = ({ target: viewer, isTouch }: StaticClickEvent) => {\n    const autoHider = this._autoHider;\n\n    if (isTouch) {\n      if (!autoHider.enabled) return;\n\n      if (autoHider.hidden) {\n        autoHider.showTemporaliy();\n      } else {\n        autoHider.hide();\n      }\n    } else {\n      if (!this.clickToPlay) return;\n\n      const video = viewer.mesh?.getTexture();\n      if (!video || !video.isVideo()) return;\n\n      if (video.isPaused()) {\n        video.source.play();\n      } else {\n        video.source.pause();\n      }\n    }\n  };\n\n  private _onNewSrcLoad = ({ target: viewer }: View360Events[\"projectionChange\"]) => {\n    const items = this._items;\n\n    this._updateBackground(viewer);\n    this._updateAutoHide(viewer);\n    this._updateKeyboardHandler(viewer);\n\n    Object.keys(items).forEach((key: ValueOf<typeof ControlBar.POSITION>) => {\n      const category = items[key];\n\n      category.forEach(item => {\n        item.destroy(viewer, this);\n        item.init(viewer, this);\n      });\n    });\n  };\n\n  private _updateAutoHide(viewer: View360) {\n    const autoHide = this.autoHide;\n    const autoHider = this._autoHider;\n\n    if (autoHide != null) {\n      if (autoHide) {\n        autoHider.enable(viewer);\n      } else {\n        autoHider.disable(viewer);\n      }\n    } else {\n      // Automatically choose whether to show background by content type\n      const texture = viewer.mesh?.getTexture();\n\n      if (texture && texture.isVideo()) {\n        // Enable auto hide when content type is video\n        autoHider.enable(viewer);\n      } else {\n        autoHider.disable(viewer);\n      }\n    }\n  }\n\n  private _updateBackground(viewer: View360) {\n    const background = this._bgEl;\n    const showBackground = this.showBackground;\n    const hiddenClass = this.className.HIDDEN ?? ControlBar.DEFAULT_CLASS.HIDDEN;\n\n    if (showBackground != null) {\n      if (showBackground) {\n        background.classList.remove(hiddenClass);\n      } else {\n        background.classList.add(hiddenClass);\n      }\n    } else {\n      // Automatically choose whether to show background by content type\n      const texture = viewer.mesh?.getTexture();\n\n      if (texture && texture.isVideo()) {\n        // Show bg when content type is video\n        background.classList.remove(hiddenClass);\n      } else {\n        background.classList.add(hiddenClass);\n      }\n    }\n  }\n\n  private _updateKeyboardHandler(viewer: View360) {\n    const panoRoot = viewer.rootEl;\n    const videoControl = this._videoControl;\n    const texture = viewer.mesh?.getTexture();\n\n    if (this.keyboardControls && texture && texture.isVideo()) {\n      videoControl.enable(panoRoot, texture);\n    } else {\n      videoControl.disable(panoRoot);\n    }\n  }\n\n  private _createDefaultItems(): ControlBarItem[] {\n    const items: ControlBarItem[] = [];\n\n    if (this.progressBar) {\n      items.push(new ProgressBar(getObjectOption(this.progressBar)));\n    }\n\n    if (this.playButton) {\n      items.push(new PlayButton(getObjectOption(this.playButton)));\n    }\n\n    if (this.volumeButton) {\n      items.push(new VolumeControl(getObjectOption(this.volumeButton)));\n    }\n\n    if (this.gyroButton) {\n      items.push(new GyroButton(getObjectOption(this.gyroButton)));\n    }\n\n    if (this.vrButton) {\n      items.push(new VRButton(getObjectOption(this.vrButton)));\n    }\n\n    if (this.fullscreenButton) {\n      items.push(new FullscreenButton(getObjectOption(this.fullscreenButton)));\n    }\n\n    if (this.videoTime) {\n      items.push(new VideoTime(getObjectOption(this.videoTime)));\n    }\n\n    if (this.pieView) {\n      items.push(new PieView(getObjectOption(this.pieView)));\n    }\n\n    return items;\n  }\n}\n\nexport default ControlBar;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Camera from \"../core/Camera\";\nimport PanoControl from \"../control/PanoControl\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport Texture from \"../texture/Texture\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport { VideoConfig } from \"../type/external\";\n\n/**\n * Common option for {@link Projection}s\n * @ko {@link Projection}을 위한 공통 옵션들\n * @category Projection\n * @since 4.0.0\n */\nexport interface ProjectionOptions {\n  /**\n   * @copy Projection#src\n   */\n  src: string | HTMLElement | Array<string | HTMLElement>;\n  /**\n   * @copy Projection#video\n   */\n  video?: boolean | Partial<VideoConfig>;\n}\n\n/**\n * Base class for projections.\n * @ko 프로젝션 베이스 클래스.\n * @category Projection\n * @since 4.0.0\n */\nabstract class Projection {\n  /**\n   * Source URL to panorama image/video.\n   * @ko 파노라마 이미지/비디오의 URL\n   * @since 4.0.0\n   */\n  public readonly src: ProjectionOptions[\"src\"];\n  /**\n   * Properties for the video element.\n   * Setting `false` will treat panorama source as an image, `true` will use default properties.\n   * @ko 비디오 엘리먼트에 설정할 프로퍼티를 담는 객체.\n   * @since 4.0.0\n   * @example\n   * Default properties\n   * ```ts\n   * autoplay: true\n   * muted: true\n   * loop: false\n   * volume: 1\n   * ```\n   */\n  public readonly video: ProjectionOptions[\"video\"];\n\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    src,\n    video = false\n  }: ProjectionOptions) {\n    this.src = src;\n    this.video = video;\n  }\n\n  /**\n   * Generate triangle mesh from current projection.\n   * @ko 현재 프로젝션으로부터 TriangleMesh의 인스턴스를 생성합니다.\n   * @param ctx - Instance of the WebGLContext helper {@ko WebGL context 헬퍼의 인스턴스}\n   * @param texture - New texture to apply {@ko 새로 적용할 텍스쳐}\n   * @internal\n   * @since 4.0.0\n   */\n  public abstract createMesh(ctx: WebGLContext, texture: Texture): TriangleMesh;\n\n  /**\n   * Update camera to match projection's settings.\n   * @ko 현재 프로젝션의 세팅으로 카메라를 업데이트합니다.\n   * @param camera - Instance of the camera to update {@ko 업데이트할 카메라의 인스턴스}\n   * @since 4.0.0\n   */\n  public updateCamera(camera: Camera) {\n    // Use default mode & no view restriction\n    camera.resetRange();\n  }\n\n  /**\n   * Update control to match projection's settings.\n   * @ko 현재 프로젝션의 세팅으로 컨트롤을 업데이트합니다.\n   * @param control - Instance of the control to update {@ko 업데이트할 컨트롤의 인스턴스}\n   * @since 4.0.0\n   */\n  public updateControl(control: PanoControl) {\n    control.ignoreZoomScale = false;\n  }\n}\n\nexport default Projection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nabstract class Uniform {\n  public needsUpdate: boolean;\n\n  public constructor() {\n    this.needsUpdate = true;\n  }\n\n  public abstract update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation, isWebGL2: boolean): void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public destroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    // DO_NOTHING\n  }\n}\n\nexport default Uniform;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport TextureCube from \"../texture/TextureCube\";\nimport { reorderCube } from \"../utils\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Uniform from \"./Uniform\";\n\nclass UniformTextureCube extends Uniform {\n  public readonly texture: TextureCube;\n  private _webglTexture: WebGLTexture;\n  private _cubemapOrder: string;\n\n  public constructor(ctx: WebGLContext, texture: TextureCube, cubemapOrder: string) {\n    super();\n\n    this.texture = texture;\n    this._webglTexture = ctx.createWebGLCubeTexture(texture, texture.width);\n    this._cubemapOrder = cubemapOrder;\n  }\n\n  public destroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n    this.texture.destroy();\n    gl.deleteTexture(this._webglTexture);\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation, isWebGL2: boolean) {\n    const texture = this.texture;\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._webglTexture);\n\n    const sources = reorderCube(texture.sources, this._cubemapOrder);\n    sources.forEach((src, idx) => {\n      if (isWebGL2) {\n        gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + idx, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, src);\n      } else {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + idx, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, src);\n      }\n    });\n\n    if (!texture.isVideo()) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\nexport default UniformTextureCube;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture2D from \"../texture/Texture2D\";\nimport { range, reorderCube } from \"../utils\";\n\n/** @hidden */\nclass CubeTexturePainter {\n  public readonly texture: Texture2D;\n  private _renderingOrder: number[];\n  private _canvas: HTMLCanvasElement;\n  private _ctx: CanvasRenderingContext2D;\n  private _row: number;\n  private _column: number;\n  private _size: number;\n\n  public get size() { return this._size; }\n\n  public constructor(texture: Texture2D, cubemapOrder: string) {\n    this.texture = texture;\n    this._renderingOrder = reorderCube(range(6), cubemapOrder);\n\n    const canvas = document.createElement(\"canvas\");\n\n    this._calcRenderingSize();\n\n    canvas.width = this._size;\n    canvas.height = this._size;\n\n    this._canvas = canvas;\n    this._ctx = canvas.getContext(\"2d\")!;\n  }\n\n  public destroy() {\n    const canvas = this._canvas;\n\n    // release memories\n    canvas.width = 1;\n    canvas.height = 1;\n    this._canvas = null as any;\n  }\n\n  public draw(gl: WebGLRenderingContext | WebGL2RenderingContext, isWebGL2: boolean) {\n    const size = this._size;\n    const texture = this.texture;\n    let surfaceIdx = 0;\n\n    for (let row = 0; row < this._row; row++) {\n      for (let column = 0; column < this._column; column++) {\n        const x = size * column;\n        const y = size * row;\n        const renderingFace = this._renderingOrder[surfaceIdx];\n\n        this._ctx.drawImage(texture.source as CanvasImageSource, x, y, size, size, 0, 0, size, size);\n\n        if (isWebGL2) {\n          gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderingFace, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n        } else {\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderingFace, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n        }\n\n        surfaceIdx++;\n      }\n    }\n  }\n\n  private _calcRenderingSize() {\n    const {\n      width,\n      height\n    } = this.texture;\n    const aspect = width / height;\n\n    if (aspect === 1 / 6) {\n      this._size = width;\n      this._row = 6;\n      this._column = 1;\n    } else if (aspect === 6) {\n      this._size = height;\n      this._row = 1;\n      this._column = 6;\n    } else if (aspect === 2 / 3) {\n      this._size = width * 0.5;\n      this._row = 3;\n      this._column = 2;\n    } else {\n      this._size = width / 3;\n      this._row = 2;\n      this._column = 3;\n    }\n  }\n}\n\nexport default CubeTexturePainter;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport CubeTexturePainter from \"../core/CubeTexturePainter\";\nimport Texture2D from \"../texture/Texture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Uniform from \"./Uniform\";\n\nclass UniformCanvasCube extends Uniform {\n  private _webglTexture: WebGLTexture;\n  private _painter: CubeTexturePainter;\n\n  public get texture() { return this._painter.texture; }\n\n  public constructor(ctx: WebGLContext, texture: Texture2D, cubemapOrder: string) {\n    super();\n\n    this._painter = new CubeTexturePainter(texture as Texture2D, cubemapOrder);\n    this._webglTexture = ctx.createWebGLCubeTexture(texture, this._painter.size);\n  }\n\n  public destroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    gl.deleteTexture(this._webglTexture);\n    this._painter.destroy();\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation, isWebGL2: boolean) {\n    const texture = this.texture;\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._webglTexture);\n\n    this._painter.draw(gl, isWebGL2);\n\n    if (!texture.isVideo()) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\nexport default UniformCanvasCube;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Object3D from \"./Object3D\";\nimport ShaderProgram from \"./ShaderProgram\";\nimport VertexArrayObject from \"./VertexArrayObject\";\nimport WebGLContext from \"./WebGLContext\";\nimport UniformCanvasCube from \"../uniform/UniformCanvasCube\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport UniformTextureCube from \"../uniform/UniformTextureCube\";\n\ntype CommonProjectionUniforms = {\n  uTexture: UniformTexture2D | UniformTextureCube | UniformCanvasCube;\n}\n\n/**\n * @hidden\n */\nclass TriangleMesh<T extends CommonProjectionUniforms = CommonProjectionUniforms> extends Object3D {\n  /**\n   * @internal\n   * Geometry data for projection\n   */\n  public readonly vao: VertexArrayObject;\n  /**\n   * @internal\n   * Material(shader) data for projection\n   */\n  public readonly program: ShaderProgram<T>;\n\n  public constructor(vao: VertexArrayObject, program: ShaderProgram<T>) {\n    super();\n\n    this.vao = vao;\n    this.program = program;\n  }\n\n  public destroy(ctx: WebGLContext) {\n    ctx.releaseVAO(this.vao);\n    ctx.releaseShaderResources(this.program);\n  }\n\n  public getTexture() {\n    return this.program.uniforms.uTexture.texture;\n  }\n}\n\nexport default TriangleMesh;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Uniform from \"../uniform/Uniform\";\nimport WebGLContext from \"./WebGLContext\";\nimport { UniformLocations } from \"../type/internal\";\n\nclass ShaderProgram<T extends Record<string, Uniform> = Record<string, Uniform>> {\n  public readonly program: WebGLProgram;\n  public readonly uniforms: T;\n  public readonly uniformLocations: UniformLocations<T>;\n\n  public constructor(ctx: WebGLContext, vertexShader: string, fragmentShader: string, uniforms: T) {\n    this.program = ctx.createProgram(vertexShader, fragmentShader);\n    this.uniforms = uniforms;\n    this.uniformLocations = ctx.getUniformLocations(this.program, uniforms);\n  }\n}\n\nexport default ShaderProgram;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { TypedArray } from \"../type/utils\";\n\n/**\n * @hidden\n */\nclass VertexData<T extends TypedArray> {\n  public readonly data: T;\n  public itemSize: number;\n  public count: number;\n\n  /** */\n  public constructor(data: T, itemSize: number) {\n    this.data = data;\n    this.itemSize = itemSize;\n    this.count = data.length / itemSize;\n  }\n}\n\nexport default VertexData;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport VertexData from \"../core/VertexData\";\n\n/**\n * @hidden\n */\nabstract class Geometry {\n  public readonly vertices: VertexData<Float32Array>;\n  public readonly indicies: VertexData<Uint16Array>;\n  public readonly uvs: VertexData<Float32Array>;\n\n  /** */\n  public constructor(vertices: number[], indicies: number[], uvs: number[]) {\n    this.vertices = new VertexData(new Float32Array(vertices), 3);\n    this.indicies = new VertexData(new Uint16Array(indicies), 1);\n    this.uvs = new VertexData(new Float32Array(uvs), 2);\n  }\n}\n\nexport default Geometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"./Geometry\";\nimport { ROTATE } from \"../const/internal\";\nimport { reorderCube } from \"../utils\";\n\n/**\n * @hidden\n */\nclass CubeGeometry extends Geometry {\n  public constructor({\n    order,\n    rotateUV\n  }: {\n    order: string;\n    rotateUV?: ROTATE[]\n  }) {\n    const vertices = [\n      // back\n      1, -1, 1,\n      -1, -1, 1,\n      -1, 1, 1,\n      1, 1, 1,\n\n      // front\n      -1, -1, -1,\n      1, -1, -1,\n      1, 1, -1,\n      -1, 1, -1,\n\n      // up\n      -1, 1, -1,\n      1, 1, -1,\n      1, 1, 1,\n      -1, 1, 1,\n\n      // down\n      -1, -1, 1,\n      1, -1, 1,\n      1, -1, -1,\n      -1, -1, -1,\n\n      // right\n      1, -1, -1,\n      1, -1, 1,\n      1, 1, 1,\n      1, 1, -1,\n\n      // left\n      -1, -1, 1,\n      -1, -1, -1,\n      -1, 1, -1,\n      -1, 1, 1\n    ];\n\n    const indicies = [\n      0, 1, 2,\n      0, 2, 3,\n      4, 5, 6,\n      4, 6, 7,\n      8, 9, 10,\n      8, 10, 11,\n      12, 13, 14,\n      12, 14, 15,\n      16, 17, 18,\n      16, 18, 19,\n      20, 21, 22,\n      20, 22, 23\n    ];\n\n    const oneThird = 1 / 3;\n    const coords: number[][] = [];\n\n    for (let r = 1; r >= 0; r--) {\n      for (let c = 0; c < 3; c++) {\n        const coord = [\n          c * oneThird, r * 0.5,\n          (c + 1) * oneThird, r * 0.5,\n          (c + 1) * oneThird, (r + 1) * 0.5,\n          c * oneThird, (r + 1) * 0.5\n        ];\n\n        coords.push(coord);\n      }\n    }\n\n    if (rotateUV) {\n      rotateUV.forEach((degree, idx) => {\n        if (degree === ROTATE.ZERO) return;\n\n        const coord = coords[idx];\n        let newOrder: number[];\n\n        if (degree === ROTATE.CW_90) {\n          newOrder = [1, 2, 3, 0];\n        } else if (degree === ROTATE.CCW_90) {\n          newOrder = [3, 0, 1, 2];\n        } else {\n          newOrder = [2, 3, 0, 1];\n        }\n\n        const newCoords = Array<number>(coord.length);\n        for (let uvIdx = 0; uvIdx < coord.length / 2; uvIdx++) {\n          newCoords[uvIdx * 2 + 0] = coord[newOrder[uvIdx] * 2 + 0];\n          newCoords[uvIdx * 2 + 1] = coord[newOrder[uvIdx] * 2 + 1];\n        }\n\n        coords[idx] = newCoords;\n      });\n    }\n\n    const uvs = reorderCube(coords, order, \"BFUDRL\")\n      .reduce((acc, val) => acc.concat(val), []);\n\n    super(vertices, indicies, uvs);\n  }\n}\n\nexport default CubeGeometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport UniformTextureCube from \"../uniform/UniformTextureCube\";\nimport UniformCanvasCube from \"../uniform/UniformCanvasCube\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport TextureCube from \"../texture/TextureCube\";\nimport CubeGeometry from \"../geometry/CubeGeometry\";\nimport vs from \"../shader/cube.vert\";\nimport fs from \"../shader/cube.frag\";\n\n/**\n * Options for {@link CubemapProjection}\n * @ko {@link CubemapProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface CubemapProjectionOptions extends ProjectionOptions {\n  /**\n   * Order of the cubemap images.\n   * @ko 큐브맵 이미지의 순서.\n   * @since 4.0.0\n   * @default \"RLUDFB\" (Right - Left - Up - Down - Front - Back)\n   */\n  cubemapOrder?: string;\n  /**\n   * Whether to flip cubemap image horizontally.\n   * @ko 큐브맵 이미지를 좌우대칭할지 여부.\n   * @since 4.0.0\n   * @default false\n   */\n  cubemapFlipX?: boolean;\n}\n\n/**\n * Projection based on cubemap images, accepts both multiple or single images.\n * @ko 큐브맵 이미지 기반의 프로젝션, 단일 혹은 여러 장의 이미지를 모두 사용 가능합니다.\n * @since 4.0.0\n * @category Projection\n */\nclass CubemapProjection extends Projection {\n  private _cubemapOrder: NonNullable<CubemapProjectionOptions[\"cubemapOrder\"]>;\n  private _cubemapFlipX: NonNullable<CubemapProjectionOptions[\"cubemapFlipX\"]>;\n\n  /**\n   * Create new instance.\n   * @ko 새 인스턴스를 생성합니다.\n   * @param options Options {@ko Options}\n   */\n  public constructor(options: CubemapProjectionOptions) {\n    super(options);\n\n    const {\n      cubemapOrder = \"RLUDFB\",\n      cubemapFlipX = false\n    } = options;\n\n    this._cubemapOrder = cubemapOrder;\n    this._cubemapFlipX = cubemapFlipX;\n  }\n\n  public createMesh(ctx: WebGLContext, texture: Texture2D) {\n    const cubemapOrder = this._cubemapOrder;\n    const cubemapFlipX = this._cubemapFlipX;\n    const uniforms = {\n      uTexture: texture.isCube()\n        ? new UniformTextureCube(ctx, texture as TextureCube, cubemapOrder)\n        : new UniformCanvasCube(ctx, texture as Texture2D, cubemapOrder)\n    };\n\n    const geometry = new CubeGeometry({\n      order: cubemapOrder\n    });\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    if (cubemapFlipX) {\n      mesh.scale[0] = -1;\n    }\n    mesh.updateMatrix();\n\n    return mesh;\n  }\n}\n\nexport default CubemapProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture2D from \"../texture/Texture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Uniform from \"./Uniform\";\n\nclass UniformTexture2D extends Uniform {\n  public readonly texture: Texture2D;\n  private _webglTexture: WebGLTexture;\n\n  public constructor(ctx: WebGLContext, texture: Texture2D) {\n    super();\n\n    this.texture = texture;\n    this._webglTexture = ctx.createWebGLTexture(texture);\n  }\n\n  public destroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n    this.texture.destroy();\n    gl.deleteTexture(this._webglTexture);\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation, isWebGL2: boolean) {\n    const texture = this.texture;\n    const isVideo = texture.isVideo();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this._webglTexture);\n\n    if (!isVideo && isWebGL2) {\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);\n    }\n\n    if (!isVideo) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\nexport default UniformTexture2D;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport CubeGeometry from \"../geometry/CubeGeometry\";\nimport vs from \"../shader/common.vert\";\nimport fs from \"../shader/common.frag\";\n\n/**\n * Options for {@link CubestripProjection}\n * @ko {@link CubestripProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface CubestripProjectionOptions extends ProjectionOptions {\n  /**\n   * @copy CubemapProjectionOptions#cubemapOrder\n   */\n  cubemapOrder?: string;\n  /**\n   * @copy CubemapProjectionOptions#cubemapFlipX\n   */\n  cubemapFlipX?: boolean;\n}\n\n/**\n * Projection based on cubemap strip.\n * Slightly more efficient than {@link CubemapProjection} as it doesn't copy cubemap image to canvas while rendering.\n * Accepts only single image.\n * @ko 큐브맵 스트립 기반의 프로젝션.\n * {@link CubemapProjection}와 달리 렌더링하는 과정에 캔버스에 이미지를 복사하는 과정이 없기 때문에 살짝 더 효율적입니다.\n * 단일 이미지만 사용 가능합니다.\n * @since 4.0.0\n * @category Projection\n */\nclass CubestripProjection extends Projection {\n  private _cubemapOrder: NonNullable<CubestripProjectionOptions[\"cubemapOrder\"]>;\n  private _cubemapFlipX: NonNullable<CubestripProjectionOptions[\"cubemapFlipX\"]>;\n\n  /**\n   * Create new instance.\n   * @ko 새 인스턴스를 생성합니다.\n   * @param options Options {@ko Options}\n   */\n  public constructor(options: CubestripProjectionOptions) {\n    super(options);\n\n    const {\n      cubemapOrder = \"RLUDFB\",\n      cubemapFlipX = false\n    } = options;\n\n    this._cubemapOrder = cubemapOrder;\n    this._cubemapFlipX = cubemapFlipX;\n  }\n\n  public createMesh(ctx: WebGLContext, texture: Texture2D) {\n    const cubemapOrder = this._cubemapOrder;\n    const cubemapFlipX = this._cubemapFlipX;\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n    const geometry = new CubeGeometry({\n      order: cubemapOrder\n    });\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    if (cubemapFlipX) {\n      mesh.scale[0] = -1;\n    }\n    mesh.updateMatrix();\n\n    return mesh;\n  }\n}\n\nexport default CubestripProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"./Geometry\";\n\n/**\n * @hidden\n */\nclass CylinderGeometry extends Geometry {\n  public constructor(maxTheta: number) {\n    const vertices: number[] = [];\n    const indicies: number[] = [];\n    const uvs: number[] = [];\n\n    const height = 1;\n    const radialSegments = 60;\n    const halfHeight = height * 0.5;\n    const heightSegments = [-halfHeight, halfHeight];\n    const invRadialSegments = 1 / radialSegments;\n    const angleConst = maxTheta * invRadialSegments;\n\n    for (let yIdx = 0; yIdx < 2; yIdx++) {\n      const y = heightSegments[yIdx];\n\n      for (let lngIdx = 0; lngIdx <= radialSegments; lngIdx++) {\n        const angle = lngIdx * angleConst + Math.PI - maxTheta * 0.5;\n        const x = Math.cos(angle);\n        const z = Math.sin(angle);\n        const u = lngIdx * invRadialSegments;\n        const v = yIdx;\n\n        uvs.push(u, v);\n        vertices.push(x, y, z);\n\n        if (yIdx === 0 && lngIdx < radialSegments) {\n          const a = lngIdx;\n          const b = a + radialSegments + 1;\n\n          indicies.push(a, b, a + 1, b, b + 1, a + 1);\n        }\n      }\n    }\n\n    super(vertices, indicies, uvs);\n  }\n}\n\nexport default CylinderGeometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n*/\nimport { quat } from \"gl-matrix\";\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport CylinderGeometry from \"../geometry/CylinderGeometry\";\nimport Camera from \"../core/Camera\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport { DEG_TO_RAD, RAD_TO_DEG } from \"../const/internal\";\nimport vs from \"../shader/common.vert\";\nimport fs from \"../shader/common.frag\";\nimport TriangleMesh from \"../core/TriangleMesh\";\n\n/**\n * Options for {@link CylindricalProjection}\n * @ko {@link CylindricalProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface CylindricalProjectionOptions extends ProjectionOptions {\n  src: string | HTMLElement;\n  /**\n   * Whether the panorama image covers full 360 degrees.\n   * @ko 파노라마 이미지가 360도를 전부 커버하는지 여부\n   * @since 4.0.0\n   * @default false\n   */\n  partial?: boolean;\n}\n\n/**\n * Projection based on cylindrical projection.\n * This can show panorama images taken from smartphones.\n * @ko 원통 투영법 기반의 프로젝션.\n * 일반적인 스마트폰 파노라마 사진을 표시하는데 사용될 수 있습니다.\n * @since 4.0.0\n * @category Projection\n */\nclass CylindricalProjection extends Projection {\n  private _partial: boolean;\n  private _aspect: number;\n  private _halfHeight: number;\n  private _mesh: TriangleMesh | null;\n\n  /**\n   * Create new instance.\n   * @ko 새 인스턴스를 생성합니다.\n   * @param options Options {@ko Options}\n   */\n  public constructor(options: CylindricalProjectionOptions) {\n    super(options);\n\n    const {\n      partial = false\n    } = options;\n\n    this._partial = partial;\n    this._aspect = 1;\n    this._halfHeight = 0;\n    this._mesh = null;\n  }\n\n  public createMesh(ctx: WebGLContext, texture: Texture2D) {\n    if (this._mesh) return this._mesh;\n\n    const partial = this._partial;\n    const { width, height } = texture;\n    const aspect = width / height;\n    const halfVFov = 180 / aspect;\n    const cylinderHeight = partial\n      ? 1\n      : 2 * Math.tan(halfVFov * DEG_TO_RAD);\n    const cylinderTheta = partial\n      ? aspect\n      : 2 * Math.PI;\n\n    const geometry = new CylinderGeometry(cylinderTheta);\n    const program = new ShaderProgram(ctx, vs, fs, {\n      uTexture: new UniformTexture2D(ctx, texture)\n    });\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    mesh.scale[1] = cylinderHeight;\n    quat.identity(mesh.rotation);\n    quat.rotateY(mesh.rotation, mesh.rotation, -Math.PI / 2);\n    mesh.updateMatrix();\n\n    this._aspect = aspect;\n    this._halfHeight = cylinderHeight * 0.5;\n    this._mesh = mesh;\n\n    return mesh;\n  }\n\n  public updateCamera(camera: Camera) {\n    super.updateCamera(camera);\n\n    const mesh = this._mesh;\n    const aspect = this._aspect;\n    const halfHeight = this._halfHeight;\n\n    if (!mesh) return;\n\n    if (this._partial) {\n      const restrictedYaw = 0.5 * aspect * RAD_TO_DEG;\n      camera.restrictYawRange(-restrictedYaw, restrictedYaw);\n    }\n\n    const restrictedPitch = Math.atan2(halfHeight, 1) * RAD_TO_DEG;\n    const minZoom = Math.tan(camera.fov * DEG_TO_RAD * 0.5) / (halfHeight * camera.aspect);\n\n    camera.restrictPitchRange(-restrictedPitch, restrictedPitch);\n    camera.restrictZoomRange(minZoom, Infinity);\n    camera.restrictRenderHeight(halfHeight * 2);\n  }\n}\n\nexport default CylindricalProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport CubeGeometry from \"../geometry/CubeGeometry\";\nimport vs from \"../shader/common.vert\";\nimport fs from \"../shader/eac.frag\";\nimport { ROTATE } from \"../const/internal\";\n\n/**\n * Options for {@link EquiangularProjection}\n * @ko {@link EquiangularProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface EquiangularProjectionOptions extends ProjectionOptions {}\n\n/**\n * Equi-Angular Cubemap Projection.\n * This format is used by Youtube's 360 videos.\n * @ko Equi-Angular Cubemap 프로젝션.\n * 이 포맷은 주로 Youtube의 360 비디오에 사용됩니다.\n * @since 4.0.0\n * @category Projection\n */\nclass EquiangularProjection extends Projection {\n  public createMesh(ctx: WebGLContext, texture: Texture2D) {\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n    const geometry = new CubeGeometry({\n      order: \"LFRDBU\",\n      rotateUV: [\n        ROTATE.ZERO, ROTATE.ZERO, ROTATE.ZERO,\n        ROTATE.CW_90, ROTATE.CCW_90, ROTATE.CW_90\n      ]\n    });\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    return mesh;\n  }\n}\n\nexport default EquiangularProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"./Geometry\";\n\n/**\n * @hidden\n */\nclass SphereGeometry extends Geometry {\n  /** */\n  public constructor() {\n    // const radius = 1;\n    const widthSegments = 60;\n    const heightSegments = 60;\n    const ANGLE_CORRECTION_FOR_CENTER_ALIGN = -0.5 * Math.PI;\n\n    const uvs: number[] = [];\n    const vertices: number[] = [];\n    const indicies: number[] = [];\n    let latIdx: number;\n    let lngIdx: number;\n\n    for (latIdx = 0; latIdx <= widthSegments; latIdx++) {\n      const theta = (latIdx / widthSegments - 0.5) * Math.PI;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n\n      for (lngIdx = 0; lngIdx <= heightSegments; lngIdx++) {\n        const phi = (lngIdx / heightSegments - 0.5) * 2 * Math.PI + ANGLE_CORRECTION_FOR_CENTER_ALIGN;\n        const sinPhi = Math.sin(phi);\n        const cosPhi = Math.cos(phi);\n        const x = cosPhi * cosTheta;\n        const y = sinTheta;\n        const z = sinPhi * cosTheta;\n        const u = lngIdx / heightSegments;\n        const v = latIdx / widthSegments;\n\n        uvs.push(u, v);\n        vertices.push(x, y, z);\n\n        if (lngIdx !== heightSegments && latIdx !== widthSegments) {\n          const a = latIdx * (heightSegments + 1) + lngIdx;\n          const b = a + heightSegments + 1;\n\n          indicies.push(a, a + 1, b, b, a + 1, b + 1);\n        }\n      }\n    }\n\n    super(vertices, indicies, uvs);\n  }\n}\n\nexport default SphereGeometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport Texture2D from \"../texture/Texture2D\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport SphereGeometry from \"../geometry/SphereGeometry\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport vs from \"../shader/common.vert\";\nimport fs from \"../shader/common.frag\";\n\n/**\n * Options for {@link EquirectProjection}\n * @ko {@link EquirectProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface EquirectProjectionOptions extends ProjectionOptions {\n  src: string | HTMLElement;\n}\n\n/**\n * Projection based on equirectangular projection.\n * @ko 등 장방형 도법(Equirectangular projection) 기반의 프로젝션\n * @since 4.0.0\n * @category Projection\n */\nclass EquirectProjection extends Projection {\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor(options: EquirectProjectionOptions) {\n    super(options);\n  }\n\n  public createMesh(ctx: WebGLContext, texture: Texture2D) {\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n\n    const geometry = new SphereGeometry();\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    return mesh;\n  }\n}\n\nexport default EquirectProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Uniform from \"./Uniform\";\n\nclass UniformFloat extends Uniform {\n  public val: number;\n\n  public constructor(val: number) {\n    super();\n\n    this.val = val;\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation) {\n    gl.uniform1f(location, this.val);\n\n    this.needsUpdate = false;\n  }\n}\n\nexport default UniformFloat;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"./Geometry\";\n\n/**\n * @hidden\n */\nclass PlaneGeometry extends Geometry {\n  /** */\n  public constructor(width: number = 2, height: number = 2, z: number = -1) {\n    const halfWidth = width * 0.5;\n    const halfHeight = height * 0.5;\n    const vertices = [\n      -halfWidth, -halfHeight, z,\n      halfWidth, -halfHeight, z,\n      -halfWidth, halfHeight, z,\n      halfWidth, halfHeight, z\n    ];\n    const indicies = [\n      0, 1, 2,\n      2, 1, 3\n    ];\n    const uvs = [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ];\n\n    super(vertices, indicies, uvs);\n  }\n}\n\nexport default PlaneGeometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport UniformFloat from \"../uniform/UniformFloat\";\nimport PanoControl from \"../control/PanoControl\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport Texture2D from \"../texture/Texture2D\";\nimport PlaneGeometry from \"../geometry/PlaneGeometry\";\nimport vs from \"../shader/little-planet.vert\";\nimport fs from \"../shader/little-planet.frag\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport { OBJECT_3D_EVENTS } from \"../const/internal\";\n\n/**\n * Options for {@link LittlePlanetProjection}\n * @ko {@link LittlePlanetProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface LittlePlanetProjectionOptions extends ProjectionOptions {\n  src: string | HTMLElement;\n}\n\n/**\n * Projection based on so-called \"Little planet\" or \"Tiny planet\" effect.\n * @ko \"Little planet\" 혹은 \"Tiny planet\"로 불리는 이펙트 기반의 프로젝션\n * @since 4.0.0\n * @category Projection\n */\nclass LittlePlanetProjection extends Projection {\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor(options: LittlePlanetProjectionOptions) {\n    super(options);\n  }\n\n  public createMesh(ctx: WebGLContext, texture: Texture2D) {\n    texture.wrapS = WebGLRenderingContext.REPEAT;\n    texture.wrapT = WebGLRenderingContext.REPEAT;\n\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture),\n      uYaw: new UniformFloat(0),\n      uPitch: new UniformFloat(0.5),\n      uZoom: new UniformFloat(1)\n    };\n\n    const geometry = new PlaneGeometry();\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    mesh.on(OBJECT_3D_EVENTS.UPDATE, ({ camera }) => {\n      const uniforms = mesh.program.uniforms;\n\n      uniforms.uYaw.val = camera.yaw / 360;\n      // Range from 0 ~ 1\n      uniforms.uPitch.val = (camera.pitch / 180) + 0.5;\n      uniforms.uZoom.val = camera.zoom;\n\n      uniforms.uYaw.needsUpdate = true;\n      uniforms.uPitch.needsUpdate = true;\n      uniforms.uZoom.needsUpdate = true;\n    });\n\n    return mesh;\n  }\n\n  public updateControl(control: PanoControl) {\n    control.ignoreZoomScale = true;\n  }\n}\n\nexport default LittlePlanetProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Uniform from \"./Uniform\";\n\nclass UniformVector4Array extends Uniform {\n  public val: number[][];\n\n  public constructor(val: number[][]) {\n    super();\n\n    this.val = val;\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation) {\n    gl.uniform4fv(location, this.val.reduce((arr, vector) => [...arr, ...vector], []));\n\n    this.needsUpdate = false;\n  }\n}\n\nexport default UniformVector4Array;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport SphereGeometry from \"../geometry/SphereGeometry\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport UniformVector4Array from \"../uniform/UniformVector4Array\";\nimport UniformFloat from \"../uniform/UniformFloat\";\nimport vs from \"../shader/stereoequi.vert\";\nimport fs from \"../shader/common.frag\";\n\n/**\n * Options for {@link StereoEquiProjection}\n * @ko {@link StereoEquiProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface StereoEquiProjectionOptions extends ProjectionOptions {\n  src: string | HTMLElement;\n  /**\n   * Stereoscopic mode of the image\n   * @ko 이미지의 스테레오스코픽 모드\n   * @since 4.0.0\n   * @default \"top_bottom\"\n   */\n  mode: typeof StereoEquiProjection.MODE[keyof typeof StereoEquiProjection.MODE]\n}\n\n/**\n * Projection based on stereo equirectangular images.\n * @ko Stereo equirectangular 이미지 기반의 프로젝션\n * @since 4.0.0\n * @category Projection\n */\nclass StereoEquiProjection extends Projection {\n  /**\n   * Available stereoscopic modes\n   * @ko 사용가능한 스테레오스코픽 모드들\n   * @since 4.0.0\n   */\n  public static MODE = {\n    /**\n     * @ko 이미지가 왼쪽/오른쪽으로 구성되어있을 경우\n     * @since 4.0.0\n     */\n    LEFT_RIGHT: \"left_right\",\n    /**\n     * @ko 이미지가 위/아래로 구성되어있을 경우\n     * @since 4.0.0\n     */\n    TOP_BOTTOM: \"top_bottom\",\n  } as const;\n\n  private _mode: StereoEquiProjectionOptions[\"mode\"];\n\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor(options: StereoEquiProjectionOptions) {\n    super(options);\n\n    this._mode = options.mode;\n  }\n\n  public createMesh(ctx: WebGLContext, texture: Texture2D) {\n    let leftEye: number[];\n    let rightEye: number[];\n\n    switch (this._mode) {\n      case StereoEquiProjection.MODE.LEFT_RIGHT:\n        leftEye = [0.5, 1, 0, 0];\n        rightEye = [0.5, 1, 0.5, 0];\n        break;\n      default:\n        // Default, uses \"top_bottom\"\n        leftEye = [1, 0.5, 0, 0];\n        rightEye = [1, 0.5, 0, 0.5];\n    }\n\n\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture),\n      uEye: new UniformFloat(0),\n      uTexScaleOffset: new UniformVector4Array([leftEye, rightEye])\n    };\n\n    const geometry = new SphereGeometry();\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    return mesh;\n  }\n}\n\nexport default StereoEquiProjection;\n","import Component from \"@egjs/component\";\nimport View360 from \"../View360\";\n\n/**\n * @hidden\n */\nconst withMethods = (prototype: any, attr: string) => {\n  [Component.prototype, View360.prototype].forEach(proto => {\n    Object.getOwnPropertyNames(proto)\n      .filter(name => name.charAt(0) !== \"_\" && name !== \"constructor\")\n      .forEach((name: string) => {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name)!;\n\n        if (descriptor.value) {\n          // Public Function\n          Object.defineProperty(prototype, name, {\n            value: function(...args) {\n              return descriptor.value.call(this[attr], ...args);\n            }\n          });\n        } else {\n          const getterDescriptor: { get?: () => any; set?: (val: any) => void } = {};\n          if (descriptor.get) {\n            getterDescriptor.get = function() {\n              return this[attr] && descriptor.get?.call(this[attr]);\n            };\n          }\n          if (descriptor.set) {\n            getterDescriptor.set = function(...args) {\n              return descriptor.set?.call(this[attr], ...args);\n            };\n          }\n\n          Object.defineProperty(prototype, name, getterDescriptor);\n        }\n      });\n  });\n};\n\nexport default withMethods;\n","/**\n * @hidden\n */\nexport const getValidProps = (propsObj: any) => {\n  return Object.keys(propsObj).reduce((props, propName) => {\n    if (propsObj[propName] != null) {\n      props[propName] = propsObj[propName];\n    }\n\n    return props;\n  }, {});\n};\n","export const VIEW360_METHODS = [\n  \"destroy\",\n  \"init\",\n  \"load\",\n  \"resize\",\n  \"addPlugins\",\n  \"removePlugins\",\n  \"renderFrame\",\n  // @egjs/component methods\n  \"on\",\n  \"hasOn\",\n  \"once\",\n  \"off\",\n  \"trigger\"\n] as const;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport View360, { View360Options, View360Events } from \"./View360\";\n\nexport * from \"./core\";\nexport * from \"./control\";\nexport * from \"./plugin\";\nexport * from \"./projection\";\nexport * from \"./hotspot\";\nexport * from \"./const/external\";\nexport * from \"./type/external\";\nexport * from \"./cfc\";\n\nexport type {\n  View360Options,\n  View360Events\n};\n\nexport default View360;\n"],"names":["View360Error","Error","constructor","message","code","Object","setPrototypeOf","prototype","name","ERROR_CODES","WRONG_TYPE","WRONG_OPTION","ELEMENT_NOT_FOUND","CANVAS_NOT_FOUND","WEBGL_NOT_SUPPORTED","FAILED_CREATE_CONTEXT_2D","PROVIDE_PROJECTION_FIRST","FAILED_LINKING_PROGRAM","INSUFFICIENT_ARGS","MESSAGES","val","types","map","type","join","optionName","query","msg","shaderLog","CODES","EVENTS","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","TOUCH_START","TOUCH_MOVE","TOUCH_END","WHEEL","RESIZE","CONTEXT_MENU","MOUSE_ENTER","MOUSE_LEAVE","POINTER_DOWN","POINTER_MOVE","POINTER_UP","POINTER_CANCEL","POINTER_ENTER","POINTER_LEAVE","KEY_DOWN","KEY_UP","LOAD","ERROR","CLICK","DOUBLE_CLICK","CONTEXT_CREATE_ERROR","CONTEXT_LOST","CONTEXT_RESTORED","DEVICE_ORIENTATION","DEVICE_MOTION","ORIENTATION_CHANGE","VIDEO_PLAY","VIDEO_PAUSE","VIDEO_LOADED_DATA","VIDEO_VOLUME_CHANGE","VIDEO_TIME_UPDATE","VIDEO_DURATION_CHANGE","VIDEO_CAN_PLAYTHROUGH","TRANSITION_END","XR_END","EL_DIV","EL_BUTTON","MOUSE_BUTTON","CURSOR","GRAB","GRABBING","NONE","KEY_DIRECTION","DIRECTION_KEY_CODE","SPACE_KEY_CODE","DIRECTION_KEY_NAME","LEFT","UP","RIGHT","DOWN","SPACE_KEY_NAME","FULLSCREEN_REQUEST","FULLSCREEN_ELEMENT","FULLSCREEN_EXIT","FULLSCREEN_CHANGE","DEFAULT_CLASS","CONTAINER","CANVAS","CTX_LOST","IN_VR","HOTSPOT_CONTAINER","HOTSPOT","HOTSPOT_VISIBLE","HOTSPOT_FLIP_X","HOTSPOT_FLIP_Y","READY","LOAD_START","PROJECTION_CHANGE","BEFORE_RENDER","RENDER","INPUT_START","INPUT_END","VIEW_CHANGE","STATIC_CLICK","VR_START","VR_END","EASING","LINEAR","x","SINE_WAVE","Math","sin","PI","EASE_OUT_CUBIC","pow","EASE_OUT_BOUNCE","n1","d1","CAMERA_EVENTS","CHANGE","ANIMATION_END","OBJECT_3D_EVENTS","UPDATE","CONTROL_EVENTS","ENABLE","DISABLE","DEG_TO_RAD","RAD_TO_DEG","DEFAULT_EASING","DEFAULT_ANIMATION_DURATION","INFINITE_RANGE","min","Infinity","max","DEFAULT_PITCH_RANGE","DEFAULT_ZOOM_RANGE","ROTATE","VIDEO_TIME_CHANGE_EVENT","SVG_NAMESPACE","SESSION_VR","XR_REFERENCE_SPACE","EPSILON","_a","Number","isString","isElement","nodeType","Node","ELEMENT_NODE","createElement","className","tag","BROWSER","el","document","classList","add","getNullableElement","parent","targetEl","parentEl","queryResult","querySelector","getElement","findCanvas","root","selector","canvas","range","end","Array","apply","undef","idx","clamp","lerp","a","b","t","circulate","size","abs","offset","findIndex","array","checker","length","getObjectOption","toVerticalFov","fovRadian","aspect","atan","tan","reorderCube","arr","order","defaultOrder","split","face","indexOf","index","isFullscreen","key","sensorCanBeEnabledIOS","window","isSecureContext","DeviceMotionEvent","hfovToZoom","baseFov","fov","renderingWidth","zoomedWidth","eulerToQuat","out","yaw","pitch","roll","quat","identity","pitchThreshold","pitchClamped","rotateY","rotateX","rotateZ","quatToEuler","quaternion","y","z","w","x2","y2","z2","w2","unit","test","atan2","view","vec3","fromValues","up","transformQuat","viewXZ","sqrt","Motion","_val","start","_start","_end","progress","_progress","activated","_activated","duration","_duration","loop","_loop","_range","easing","_easing","reset","update","deltaTime","prev","nextProgress","easedProgress","defaultVal","delta","setNewEndByDelta","setRange","CameraAnimation","_motion","camera","from","to","_camera","_from","_to","_finishPromise","Promise","resolve","_finish","getFinishPromise","motion","rotation","create","zoom","slerp","rotate","Camera","Component","_aspect","changed","_changed","yawRange","_initialYawRange","pitchRange","_initialPitchRange","zoomRange","_initialZoomRange","initialYaw","initialPitch","initialZoom","rollOffset","position","animation","_up","_yawRange","_pitchRange","_zoomRange","_updateQuaternion","viewMatrix","mat4","projectionMatrix","_maxRenderHeight","destroy","off","resize","width","height","prevAspect","updateMatrix","lookAt","prevQuaternion","clone","prevZoom","zoomDiff","equals","normalized","normalize","isSameRotation","copy","animateTo","finishPromise","then","trigger","restrictYawRange","restrictPitchRange","restrictZoomRange","restrictRenderHeight","resetRange","getYawRange","yawLimit","maxRenderHeight","halfHFov","getHorizontalFov","minYaw","maxYaw","halfVFovRad","h","d","theta","getPitchRange","pitchLimit","minPitch","maxPitch","halfVFov","getVerticalFov","getZoomRange","limit","minFov","maxFov","currentFov","current","_getZoomedHorizontalFov","hFov","vFov","fovToZoom","projMatrix","upDir","viewDir","perspective","onFrameRender","MouseInput","_onMouseDown","evt","_el","button","preventDefault","focus","_prevPos","clientX","clientY","addEventListener","_onMouseMove","_onMouseUp","srcEvent","isTouch","isKeyboard","prevPos","deltaX","deltaY","removeEventListener","scrolling","enable","element","disable","TouchInput","scrollable","_scrollable","_onTouchStart","touches","_scrolling","touch","_isFirstTouch","_onTouchMove","cancelable","_onTouchEnd","passive","KeyboardInput","active","pressed","_pressed","_onKeyDown","location","KeyboardEvent","DOM_KEY_LOCATION_STANDARD","_updateKeyPress","pressedCount","_getPressedKeyCount","repeat","_onKeyUp","_clearPressedKeys","_getDeltaByPressedKeys","reduce","obj","keyName","assign","event","isEnable","keyToUpdate","keyCode","filter","RotateControl","enabled","_enabled","enableBlocked","_enableBlocked","animating","_keyboardInput","_xMotion","_yMotion","_touchInput","pointerScale","_pointerScale","keyboardScale","_keyboardScale","disablePitch","_disablePitch","disableYaw","_disableYaw","disableKeyboard","_disableKeyboard","controlEl","_onInputStart","_changedWhileDragging","inputType","_onChange","invZoomScale","_zoomScale","screenScale","_screenScale","scale","scaledX","scaledY","_onInputEnd","_controlEl","_mouseInput","_bindInputs","xMotion","yMotion","keyboardInput","updateRange","setZoomScale","hfov","vfov","control","updateCursor","sync","mouseInput","touchInput","on","WheelInput","_onWheel","stopPropagation","_inputTimer","_clearTimer","_baseScale","setTimeout","capture","clearTimeout","PinchInput","prevDistance","_prevDistance","diff","pageX","pageY","distance","ZoomControl","_wheelInput","_scale","scaledDelta","_pinchInput","wheelInput","pinchInput","ROTATE_CONSTANT","PITCH_DELTA","YAW_DELTA_BY_ROLL","YAW_DELTA_BY_YAW","targetAxis","meshPoint","GyroInput","orientationUpdated","_orientationUpdated","ignoreRoll","_ignoreRoll","_onDeviceOrientation","prevOrientation","_orientation","alpha","beta","gamma","_needsCalibrate","_calibrateSensor","_updateScreenOrientation","screen","orientation","angle","undefined","_screenOrientation","_yawOrigin","_yawOffset","_updateRotation","collectDelta","prevRotation","_toEulerDelta","setInitialRotation","yawOrigin","sensorYaw","screenAngle","world","set","cos","multiply","prevQuat","currentQuat","_getDeltaYaw","_getDeltaPitch","prvQ","curQ","yawDeltaByYaw","_getRotationDelta","yawDeltaByRoll","_extractPitchFromQuat","prevQ","rotateKind","curQuaternion","prevPoint","curPoint","rotateDistance","dot","cross","rotateDirection","meshPoint2","meshPoint3","vecU","vecV","vecN","coefficientA","coefficientB","coefficientC","projectedPrevPoint","subtract","trigonometricRatio","acos","crossVec","thetaDirection","deltaRadian","baseV","GyroControl","_input","isAvailable","onDeviceMotionChange","listenDeviceMotion","res","rotationRate","timeout","race","available","requestSensorPermission","requestPermission","permissionState","catch","_updateYawPitch","input","yawDelta","pitchDelta","PanoControl","useGrabCursor","_useGrabCursor","_setCursor","disableContextMenu","_disableContextMenu","_blockContextMenu","_restoreContextMenu","_rotateControl","wheelScrollable","_zoomControl","ignoreZoomScale","_ignoreZoomScale","gyro","_gyroControl","_preventContextMenu","_onEnable","_onDisable","_onCameraAnimationEnd","_bindEvents","rotateControl","zoomControl","gyroControl","zoomScale","newCursor","style","cursor","Texture","flipY","wrapS","WebGLRenderingContext","CLAMP_TO_EDGE","wrapT","isVideo","isCube","Texture2D","source","TextureVideo","video","pause","removeAttribute","load","isPaused","paused","ended","readyState","hasAudio","audioTracks","webkitAudioDecodedByteCount","mozHasAudio","TextureCube","sources","TextureLoader","_loadChecker","ImReady","src","loadVideo","isArray","loadCubeImage","imgSrc","loadImage","images","_toImageArray","_load","image","naturalWidth","naturalHeight","videoConfig","config","autoplay","muted","volume","_toVideoElement","currentTime","play","videoWidth","videoHeight","content","onLoad","loader","reject","once","errorCount","check","srcs","imgEl","Image","crossOrigin","HTMLVideoElement","playsInline","setAttribute","forEach","_appendSourceElement","sourceCount","querySelectorAll","HTMLSourceElement","sourceEl","appendChild","FrameAnimator","maxDeltaTime","context","_context","_rafId","_rafTimer","_lastUpdateTime","callback","_time","frame","time","Date","now","requestAnimationFrame","stop","cancelAnimationFrame","changeContext","AutoResizer","useResizeObserver","_useResizeObserver","onResize","_skipFirstResize","isFirstResize","_onResize","_resizeObserver","ResizeObserver","bbox","getBoundingClientRect","resizeImmediate","resizeObserver","observe","disconnect","Autoplay","playing","_interrupted","delay","_delay","delayOnMouseLeave","_delayOnMouseLeave","speed","_speed","pauseOnHover","_pauseOnHover","canInterrupt","_canInterrupt","disableOnInterrupt","_disableOnInterrupt","viewer","options","_clearTimeout","_setUninterruptedAfterDelay","_onGyroEnable","_onMouseEnter","_hovering","_onMouseLeave","_control","_element","_interruptionTimer","enableAfterDelay","XRManager","ctx","exit","_onSessionEnd","_xrSession","_xrRefSpace","_ctx","_options","xr","navigator","isSessionSupported","enter","requiredFeatures","makeXRCompatible","session","requestSession","bindXRLayer","refSpace","requestReferenceSpace","_setSession","xrSession","canRender","pose","getViewerPose","getEyeParams","glLayer","renderState","baseLayer","views","viewport","getViewport","vMatrix","transform","inverse","matrix","pMatrix","Hotspot","HotspotRenderer","rootEl","renderer","_containerEl","_renderer","_hotspots","_zoom","refresh","container","hotspotEls","slice","_parseHotspot","render","hotspots","halfWidth","halfHeight","centerTransform","zoomTransform","hotspot","relPos","transformMat4","remove","screenPos","vec2","yawStr","dataset","pitchStr","positionStr","parseFloat","_yawPitchToVec3","pos","defaultPos","yawRad","pitchRad","VertexArrayObject","count","geometry","indicies","buffers","WebGLContext","_canvas","maxTextureSize","_maxTextureSize","isWebGL2","_isWebGL2","supportVAO","_extensions","vao","lost","_contextLost","debug","_debug","_onContextLost","_onContextRestore","loseContext","init","gl","_getContext","_gl","getParameter","MAX_TEXTURE_SIZE","getExtension","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","forceLoseContext","extension","forceRestoreContext","restoreContext","clear","COLOR_BUFFER_BIT","drawingBufferWidth","drawingBufferHeight","createVAO","shaderProgram","nativeVAO","_createNativeVAO","_createBuffer","uv","_bindNativeVAO","_supplyGeometryData","_unbindBuffers","draw","drawElements","TRIANGLES","UNSIGNED_SHORT","releaseVAO","_deleteNativeVAO","_deleteBuffer","getUniformLocations","program","uniforms","uniformLocations","keys","locations","getUniformLocation","_getCommonUniformLocations","updateCommonUniforms","entity","mvMatrix","uniformMatrix4fv","uMVMatrix","uPMatrix","updateVRUniforms","eyeIndex","uEye","uniform1f","updateUniforms","uniform","needsUpdate","releaseShaderResources","deleteProgram","useProgram","createProgram","vertexShader","fragmentShader","vs","_compileShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramInfoLog","deleteShader","createWebGLTexture","texData","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","gl2","texStorage2D","RGBA8","createWebGLCubeTexture","TEXTURE_CUBE_MAP","attributes","getContextAttributes","xrCompatible","xrLayer","XRWebGLLayer","updateRenderState","bindXRFrame","bindFramebuffer","FRAMEBUFFER","framebuffer","useDefaultFrameBuffer","createBuffer","buffer","deleteBuffer","createVertexArray","ext","createVertexArrayOES","bindVertexArray","bindVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","_supplyIndiciesData","_supplyAttributeData","vertices","uvs","bufferData","data","STATIC_DRAW","attribute","attribLocation","getAttribLocation","vertexAttribPointer","itemSize","FLOAT","enableVertexAttribArray","shader","createShader","shaderSource","compileShader","webglIdentifiers","contextAttributes","preserveDrawingBuffer","antialias","onWebglContextCreationError","e","statusMessage","identifier","getContext","WebGLRenderer","_elementSize","pixelRatio","_pixelRatio","canvasSize","devicePixelRatio","clientWidth","clientHeight","mesh","renderVR","vr","eyeParams","eye","View360","_rootEl","_vr","_hotspot","plugins","_plugins","projection","_projection","_initialized","_mesh","initialized","_autoplay","autoInit","_autoInit","autoResize","_autoResize","canvasSelector","_canvasSelector","tabIndex","_tabIndex","_animator","updateCamera","renderFrame","autoPlayer","_emit","_renderFrameOnDemand","getTexture","_renderVRFrame","_delta","_autoResizer","_addEventHandlers","plugin","animator","_bindComponentEvents","_resizeComponents","_loadTexture","_applyProjection","hasAttribute","addPlugins","push","removePlugins","pluginIdx","splice","eventName","params","evtParams","target","newMesh","createMesh","updateControl","contentLoader","events","evtName","controlEventsToPropagate","VERSION","Object3D","fromRotationTranslationScale","LoadingSpinner","_startLoading","_container","_detachElements","parentElement","removeChild","_createElements","ring","RING","ControlBarItem","CONTROL_BAR_DEFAULT_CLASS","CONTROLS_ROOT","CONTROLS_BG","CONTROLS_MAIN","CONTROLS_TOP","CONTROLS_BOTTOM","CONTROLS_MID","CONTROLS_LEFT","CONTROLS_RIGHT","CONTROLS_FLOAT_LEFT","CONTROLS_FLOAT_RIGHT","CONTROLS_BUTTON","PROGRESS_ROOT","VOLUME_ROOT","RANGE_ROOT","RANGE_TRACK","RANGE_THUMB","RANGE_FILLER","PLAY_BUTTON","PAUSE_BUTTON","UNMUTED_BUTTON","MUTED_BUTTON","FULLSCREEN_BUTTON","FULLSCREEN_EXIT_BUTTON","VR_BUTTON","GYRO_ENABLED","GYRO_DISABLED","VIDEO_TIME_DISPLAY","PIEVIEW_ROOT","FIXED","UNAVAILABLE","HIDDEN","CONTROL_BAR_ITEM_POSITION","TOP_LEFT","TOP_RIGHT","MAIN_TOP","MAIN_BOTTOM","MAIN_LEFT","MAIN_RIGHT","RangeControl","_onHold","_bbox","elX","scrollX","pageXOffset","clamepdX","thumbEl","_fixedClass","clampedX","_onRelease","track","thumb","filler","draggable","trackEl","fillerEl","left","right","bottom","top","updateStyle","clampedProgress","ProgressBar","_rangeControl","_onTimeUpdate","_video","_currentTime","_onDurationChange","controlBar","_controlBar","dispatchEvent","CustomEvent","detail","_wasPaused","_playPromise","_onControl","rangeControl","unavailableClass","PlayButton","_onClick","_paused","_onPlay","title","_onPause","VolumeControl","_updateDisplay","disabled","_onVolumeChange","_buttonEl","containerEl","buttonEl","FullscreenButton","_targetEl","_exitFullscreen","_requestFullscreen","_onFullscreenChange","_fullscreenAvailable","_addFullscreenHandlers","_removeFullscreenHandlers","some","request","call","VideoTime","_onCustomTimeChange","timeMinute","floor","timeSeconds","timeSecondsFormatted","durationMinute","durationSeconds","durationSecondsFormatted","innerText","PieView","resetCamera","_viewer","_updatePie","piePath","_piePathEl","rangeCircle","_rangeCircleEl","halfFov","pieRadius","pieDeg","pieOffset","isFinite","radius","rangeDiff","_createPieElements","rootClass","pieSVG","createElementNS","VRButton","GyroButton","_updateStyle","enableButton","AutoHide","hidden","contains","_hiddenClass","initialDelay","idleDelay","activationDelay","_isCursorInside","show","_hideAfterDelay","_isFullscreen","showTemporaliy","_isGrabbing","pointerType","_onVideoPlay","_onVideoPause","_initialDelay","_idleDelay","_timer","hide","_clearHideTimer","VideoControl","videoEl","keyPressed","_changeVideoTime","_changeVideoVolume","spacePressed","_toggleVideo","forward","increase","ControlBar","backgroundEl","_bgEl","items","_items","customItems","_customItems","autoHide","showBackground","clickToPlay","keyboardControls","progressBar","playButton","volumeButton","fullscreenButton","videoTime","pieView","vrButton","gyroButton","_onStaticClick","autoHider","_autoHider","_onNewSrcLoad","_updateBackground","_updateAutoHide","_updateKeyboardHandler","category","item","_createPositionWrappers","POSITION","_videoControl","panoRoot","controlsRoot","defaultItems","_createDefaultItems","_addItem","_clearItemElements","wrapper","_wrapperEl","nextSiblingIndex","sibling","nextSibling","insertBefore","floatLeftEl","floatRightEl","topWrapper","bottomWrapper","midWrapper","leftControlsWrapper","rightControlsWrapper","wrappers","firstChild","background","hiddenClass","_b","videoControl","Projection","Uniform","UniformTextureCube","cubemapOrder","_webglTexture","_cubemapOrder","deleteTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","uniform1i","activeTexture","TEXTURE0","texSubImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGBA","UNSIGNED_BYTE","texImage2D","CubeTexturePainter","_size","_renderingOrder","_calcRenderingSize","surfaceIdx","row","_row","column","_column","renderingFace","drawImage","UniformCanvasCube","_painter","TriangleMesh","uTexture","ShaderProgram","VertexData","Geometry","Float32Array","Uint16Array","CubeGeometry","rotateUV","oneThird","coords","r","c","coord","degree","ZERO","newOrder","CW_90","CCW_90","newCoords","uvIdx","acc","concat","CubemapProjection","cubemapFlipX","_cubemapFlipX","UniformTexture2D","CubestripProjection","CylinderGeometry","maxTheta","radialSegments","heightSegments","invRadialSegments","angleConst","yIdx","lngIdx","u","v","CylindricalProjection","partial","_partial","_halfHeight","cylinderHeight","cylinderTheta","restrictedYaw","restrictedPitch","minZoom","EquiangularProjection","SphereGeometry","widthSegments","ANGLE_CORRECTION_FOR_CENTER_ALIGN","latIdx","sinTheta","cosTheta","phi","sinPhi","cosPhi","EquirectProjection","UniformFloat","PlaneGeometry","LittlePlanetProjection","REPEAT","uYaw","uPitch","uZoom","UniformVector4Array","uniform4fv","vector","StereoEquiProjection","_mode","mode","leftEye","rightEye","MODE","LEFT_RIGHT","uTexScaleOffset","TOP_BOTTOM","withMethods","attr","proto","getOwnPropertyNames","charAt","descriptor","getOwnPropertyDescriptor","value","defineProperty","args","getterDescriptor","get","getValidProps","propsObj","props","propName","VIEW360_METHODS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAGG;AAEH;;;;AAIG;AACH,MAAMA,YAAa,SAAQC,KAAK,CAAA;AAQ9B;;;;;AAKG;AACHC,EAAAA,WAAmBA,CAAAC,OAAe,EAAEC,IAAY,EAAA;IAC9C,KAAK,CAACD,OAAO,CAAC,CAAA;IAEdE,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEN,YAAY,CAACO,SAAS,CAAC,CAAA;IAEnD,IAAI,CAACC,IAAI,GAAG,cAAc,CAAA;IAC1B,IAAI,CAACJ,IAAI,GAAGA,IAAI,CAAA;AAClB,GAAA;AACD;;AChCD;;;AAGG;AAEH;;;;AAIG;AACI,MAAMK,WAAW,GAAG;AACzB;;;;AAIG;AACHC,EAAAA,UAAU,EAAE,CAAC;AACb;;;;AAIG;AACHC,EAAAA,YAAY,EAAE,CAAC;AACf;;;;AAIG;AACHC,EAAAA,iBAAiB,EAAE,CAAC;AACpB;;;;AAIG;AACHC,EAAAA,gBAAgB,EAAE,CAAC;AACnB;;;;AAIG;AACHC,EAAAA,mBAAmB,EAAE,CAAC;AACtB;;;;AAIG;AACHC,EAAAA,wBAAwB,EAAE,CAAC;AAC3B;;;;AAIG;AACHC,EAAAA,wBAAwB,EAAE,CAAC;AAC3B;;;;AAIG;AACHC,EAAAA,sBAAsB,EAAE,CAAC;AACzB;;;;AAIG;AACHC,EAAAA,iBAAiB,EAAE,CAAA;EACX;AAEH,MAAMC,QAAQ,GAAG;EACtBT,UAAU,EAAEA,CAACU,GAAQ,EAAEC,KAAe,KAAQ,CAAA,EAAA,OAAOD,GAAG,CAAA,UAAA,EAAaC,KAAK,CAACC,GAAG,CAACC,IAAI,IAAQ,CAAA,CAAA,EAAAA,IAAO,CAAA,CAAA,CAAA,CAAC,CAACC,IAAI,CAAC,MAAM,CAAI,CAAA,CAAA,CAAA;EACnHb,YAAY,EAAEA,CAACS,GAAQ,EAAEK,UAAkB,KAA2B,CAAAL,mBAAAA,EAAAA,GAAoB,CAAAK,cAAAA,EAAAA,UAAc,CAAA,EAAA,CAAA;AACxGb,EAAAA,iBAAiB,EAAGc,KAAa,IAAK,CAAA,uBAAA,EAA0BA,KAAmB,CAAA,YAAA,CAAA;AACnFb,EAAAA,gBAAgB,EAAE,iEAAiE;AACnFC,EAAAA,mBAAmB,EAAE,yCAAyC;AAC9DC,EAAAA,wBAAwB,EAAE,oCAAoC;AAC9DC,EAAAA,wBAAwB,EAAE,0DAA0D;EACpFC,sBAAsB,EAAEA,CAACU,GAAkB,EAAEC,SAAwB,KAAwC,CAAAD,gCAAAA,EAAAA,GAA4B,CAAAC,sBAAAA,EAAAA,SAAW,CAAA,CAAA;EACpJV,iBAAiB,EAAEA,CAACE,GAAQ,EAAEZ,IAAY,KAAuC,CAAA,+BAAA,EAAAY,GAAa,CAAA,OAAA,EAAAZ,IAAQ,CAAA,EAAA,CAAA;CACvG,CAAA;AAED,YAAe;AACbqB,EAAAA,KAAK,EAAEpB,WAAW;AAClBU,EAAAA,QAAAA;CACD;;AClFD;;;AAGG;AACI,MAAMW,QAAM,GAAG;AACpBC,EAAAA,UAAU,EAAE,WAAW;AACvBC,EAAAA,UAAU,EAAE,WAAW;AACvBC,EAAAA,QAAQ,EAAE,SAAS;AACnBC,EAAAA,WAAW,EAAE,YAAY;AACzBC,EAAAA,UAAU,EAAE,WAAW;AACvBC,EAAAA,SAAS,EAAE,UAAU;AACrBC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,YAAY,EAAE,aAAa;AAC3BC,EAAAA,WAAW,EAAE,YAAY;AACzBC,EAAAA,WAAW,EAAE,YAAY;AACzBC,EAAAA,YAAY,EAAE,aAAa;AAC3BC,EAAAA,YAAY,EAAE,aAAa;AAC3BC,EAAAA,UAAU,EAAE,WAAW;AACvBC,EAAAA,cAAc,EAAE,eAAe;AAC/BC,EAAAA,aAAa,EAAE,cAAc;AAC7BC,EAAAA,aAAa,EAAE,cAAc;AAC7BC,EAAAA,QAAQ,EAAE,SAAS;AACnBC,EAAAA,MAAM,EAAE,OAAO;AACfC,EAAAA,IAAI,EAAE,MAAM;AACZC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,YAAY,EAAE,UAAU;AACxBC,EAAAA,oBAAoB,EAAE,2BAA2B;AACjDC,EAAAA,YAAY,EAAE,kBAAkB;AAChCC,EAAAA,gBAAgB,EAAE,sBAAsB;AACxCC,EAAAA,kBAAkB,EAAE,mBAAmB;AACvCC,EAAAA,aAAa,EAAE,cAAc;AAC7BC,EAAAA,kBAAkB,EAAE,mBAAmB;AACvCC,EAAAA,UAAU,EAAE,MAAM;AAClBC,EAAAA,WAAW,EAAE,OAAO;AACpBC,EAAAA,iBAAiB,EAAE,YAAY;AAC/BC,EAAAA,mBAAmB,EAAE,cAAc;AACnCC,EAAAA,iBAAiB,EAAE,YAAY;AAC/BC,EAAAA,qBAAqB,EAAE,gBAAgB;AACvCC,EAAAA,qBAAqB,EAAE,gBAAgB;AACvCC,EAAAA,cAAc,EAAE,eAAe;AAC/BC,EAAAA,MAAM,EAAE,KAAA;CACA,CAAA;AAEH,MAAMC,MAAM,GAAG,KAAK,CAAA;AACpB,MAAMC,SAAS,GAAG,QAAQ,CAAA;AAEjC;AACA,IAAYC,YAIX,CAAA;AAJD,CAAA,UAAYA,YAAY,EAAA;EACtBA,YAAA,CAAAA,YAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;EACJA,YAAA,CAAAA,YAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM,CAAA;EACNA,YAAA,CAAAA,YAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK,CAAA;AACP,CAAC,EAJWA,YAAY,KAAZA,YAAY,GAIvB,EAAA,CAAA,CAAA,CAAA;AAEM,MAAMC,MAAM,GAAG;AACpBC,EAAAA,IAAI,EAAE,MAAM;AACZC,EAAAA,QAAQ,EAAE,UAAU;AACpBC,EAAAA,IAAI,EAAE,EAAA;CACE,CAAA;AAEH,MAAMC,aAAa,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAU,CAAA;AACrE,IAAYC,kBAKX,CAAA;AALD,CAAA,UAAYA,kBAAkB,EAAA;EAC5BA,kBAAA,CAAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAS,CAAA;EACTA,kBAAA,CAAAA,kBAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,GAAA,IAAO,CAAA;EACPA,kBAAA,CAAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAU,CAAA;EACVA,kBAAA,CAAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAS,CAAA;AACX,CAAC,EALWA,kBAAkB,KAAlBA,kBAAkB,GAK7B,EAAA,CAAA,CAAA,CAAA;AACM,MAAMC,cAAc,GAAG,EAAE,CAAA;AAEzB,MAAMC,kBAAkB,GAAG;AAChCC,EAAAA,IAAI,EAAE,WAAW;AACjBC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,KAAK,EAAE,YAAY;AACnBC,EAAAA,IAAI,EAAE,WAAA;CACE,CAAA;AACH,MAAMC,cAAc,GAAG,GAAG,CAAA;AAE1B,MAAMC,kBAAkB,GAAG,CAChC,mBAAmB,EACnB,yBAAyB,EACzB,yBAAyB,EACzB,wBAAwB,EACxB,sBAAsB,EACtB,qBAAqB,CACtB,CAAA;AAEM,MAAMC,kBAAkB,GAAG,CAChC,mBAAmB,EACnB,yBAAyB,EACzB,gCAAgC,EAChC,sBAAsB,EACtB,qBAAqB,CACtB,CAAA;AAEM,MAAMC,eAAe,GAAG,CAC7B,gBAAgB,EAChB,sBAAsB,EACtB,wBAAwB,EACxB,qBAAqB,EACrB,kBAAkB,CACnB,CAAA;AAEM,MAAMC,iBAAiB,GAAG,CAC/B,kBAAkB,EAClB,wBAAwB,EACxB,qBAAqB,EACrB,oBAAoB,CACrB;;AC5GD;;;AAGG;AAGH;;;;AAIG;AACI,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,SAAS,EAAE,mBAAmB;AAC9BC,EAAAA,MAAM,EAAE,gBAAgB;AACxBC,EAAAA,QAAQ,EAAE,kBAAkB;AAC5BC,EAAAA,KAAK,EAAE,uBAAuB;AAC9BC,EAAAA,iBAAiB,EAAE,kBAAkB;AACrCC,EAAAA,OAAO,EAAE,iBAAiB;AAC1BC,EAAAA,eAAe,EAAE,yBAAyB;AAC1CC,EAAAA,cAAc,EAAE,wBAAwB;AACxCC,EAAAA,cAAc,EAAE,wBAAA;EACR;AAEV;;;;;;;;;;;;;;AAcG;AACI,MAAMpE,MAAM,GAAG;AACpBqE,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,UAAU,EAAE,WAAW;AACvBlD,EAAAA,IAAI,EAAE,MAAM;AACZmD,EAAAA,iBAAiB,EAAE,kBAAkB;AACrC/D,EAAAA,MAAM,EAAE,QAAQ;AAChBgE,EAAAA,aAAa,EAAE,cAAc;AAC7BC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,WAAW,EAAE,YAAY;AACzBC,EAAAA,SAAS,EAAE,UAAU;AACrBC,EAAAA,WAAW,EAAE,YAAY;AACzBC,EAAAA,YAAY,EAAE,aAAa;AAC3BC,EAAAA,QAAQ,EAAE,SAAS;AACnBC,EAAAA,MAAM,EAAE,OAAA;EACA;AAEV;;;AAGG;AACI,MAAMC,MAAM,GAAG;EACpBC,MAAM,EAAGC,CAAS,IAAKA,CAAC;AACxBC,EAAAA,SAAS,EAAGD,CAAS,IAAKE,IAAI,CAACC,GAAG,CAACH,CAAC,GAAGE,IAAI,CAACE,EAAE,GAAG,CAAC,CAAC;AACnDC,EAAAA,cAAc,EAAGL,CAAS,IAAK,CAAC,GAAGE,IAAI,CAACI,GAAG,CAAC,CAAC,GAAGN,CAAC,EAAE,CAAC,CAAC;EACrDO,eAAe,EAAGP,CAAS,IAAY;IACrC,MAAMQ,EAAE,GAAG,MAAM,CAAA;IACjB,MAAMC,EAAE,GAAG,IAAI,CAAA;AAEf,IAAA,IAAIT,CAAC,GAAG,CAAC,GAAGS,EAAE,EAAE;AACd,MAAA,OAAOD,EAAE,GAAGR,CAAC,GAAGA,CAAC,CAAA;AAClB,KAAA,MAAM,IAAIA,CAAC,GAAG,CAAC,GAAGS,EAAE,EAAE;MACrB,OAAOD,EAAE,IAAIR,CAAC,IAAI,GAAG,GAAGS,EAAE,CAAC,GAAGT,CAAC,GAAG,IAAI,CAAA;AACvC,KAAA,MAAM,IAAIA,CAAC,GAAG,GAAG,GAAGS,EAAE,EAAE;MACvB,OAAOD,EAAE,IAAIR,CAAC,IAAI,IAAI,GAAGS,EAAE,CAAC,GAAGT,CAAC,GAAG,MAAM,CAAA;AAC1C,KAAA,MAAM;MACL,OAAOQ,EAAE,IAAIR,CAAC,IAAI,KAAK,GAAGS,EAAE,CAAC,GAAGT,CAAC,GAAG,QAAQ,CAAA;AAC7C,KAAA;AACH,GAAA;;;;ACpEK,MAAMU,aAAa,GAAG;AAC3BC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,aAAa,EAAE,cAAA;CACP,CAAA;AAEH,MAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,MAAM,EAAE,QAAA;CACA,CAAA;AAEH,MAAMC,cAAc,GAAG;AAC5BvB,EAAAA,WAAW,EAAE,YAAY;AACzBmB,EAAAA,MAAM,EAAE,QAAQ;AAChBlB,EAAAA,SAAS,EAAE,UAAU;AACrBuB,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,OAAO,EAAE,SAAS;AAClBtB,EAAAA,YAAY,EAAE,aAAA;CACN,CAAA;AAEH,MAAMuB,UAAU,GAAGhB,IAAI,CAACE,EAAE,GAAG,GAAG,CAAA;AAChC,MAAMe,UAAU,GAAG,GAAG,GAAGjB,IAAI,CAACE,EAAE,CAAA;AAChC,MAAMgB,cAAc,GAAGtB,MAAM,CAACO,cAAc,CAAA;AAC5C,MAAMgB,0BAA0B,GAAG,GAAG,CAAA;AACtC,MAAMC,cAAc,GAAoB;EAC7CC,GAAG,EAAE,CAACC,QAAQ;AAAEC,EAAAA,GAAG,EAAED,QAAAA;CACb,CAAA;AACH,MAAME,mBAAmB,GAAoB;EAClDH,GAAG,EAAE,CAAC,EAAE;AAAEE,EAAAA,GAAG,EAAE,EAAA;CACP,CAAA;AACH,MAAME,kBAAkB,GAAoB;AACjDJ,EAAAA,GAAG,EAAE,GAAG;AAAEE,EAAAA,GAAG,EAAE,EAAA;CACP,CAAA;AAEV,IAAYG,MAKX,CAAA;AALD,CAAA,UAAYA,MAAM,EAAA;EAChBA,MAAA,CAAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;EACJA,MAAA,CAAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK,CAAA;EACLA,MAAA,CAAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM,CAAA;EACNA,MAAA,CAAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM,CAAA;AACR,CAAC,EALWA,MAAM,KAANA,MAAM,GAKjB,EAAA,CAAA,CAAA,CAAA;AAED;AACO,MAAMC,uBAAuB,GAAG,wBAAwB,CAAA;AACxD,MAAMC,aAAa,GAAG,4BAA4B,CAAA;AAClD,MAAMC,UAAU,GAAG,cAAc,CAAA;AACjC,MAAMC,kBAAkB,GAAG,OAAO,CAAA;AAElC,MAAMC,OAAO,GAAG,CAAAC,EAAA,GAAAC,MAAM,CAACF,OAAO,MAAI,IAAA,IAAAC,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAA,qBAAqB;;ACpD9D;;;AAGG;AAQI,MAAME,QAAQ,GAAIhI,GAAQ,IAAoB,OAAOA,GAAG,KAAK,QAAQ,CAAA;AACrE,MAAMiI,SAAS,GAAIjI,GAAQ,IAAqB,CAAC,CAACA,GAAG,IAAIA,GAAG,CAACkI,QAAQ,KAAKC,IAAI,CAACC,YAAY,CAAA;AAE3F,MAAMC,aAAa,GAAGA,CAACC,SAAiB,EAAEC,GAAG,GAAGC,MAAc,KAAI;AACvE,EAAA,MAAMC,EAAE,GAAGC,QAAQ,CAACL,aAAa,CAACE,GAAG,CAAC,CAAA;AAEtCE,EAAAA,EAAE,CAACE,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC,CAAA;AAE3B,EAAA,OAAOG,EAAE,CAAA;AACX,CAAC,CAAA;AAEM,MAAMI,kBAAkB,GAAGA,CAACJ,EAA+B,EAAEK,MAAoB,KAAwB;EAC9G,IAAIC,QAAQ,GAAuB,IAAI,CAAA;AAEvC,EAAA,IAAIf,QAAQ,CAACS,EAAE,CAAC,EAAE;AAChB,IAAA,MAAMO,QAAQ,GAAGF,MAAM,GAAGA,MAAM,GAAGJ,QAAQ,CAAA;AAC3C,IAAA,MAAMO,WAAW,GAAGD,QAAQ,CAACE,aAAa,CAACT,EAAE,CAAC,CAAA;IAE9C,IAAI,CAACQ,WAAW,EAAE;AAChB,MAAA,OAAO,IAAI,CAAA;AACZ,KAAA;AAEDF,IAAAA,QAAQ,GAAGE,WAA0B,CAAA;AACtC,GAAA,MAAM,IAAIhB,SAAS,CAACQ,EAAE,CAAC,EAAE;AACxBM,IAAAA,QAAQ,GAAGN,EAAE,CAAA;AACd,GAAA;AAED,EAAA,OAAOM,QAAQ,CAAA;AACjB,CAAC,CAAA;AAEM,MAAMI,UAAU,GAAGA,CAACV,EAAwB,EAAEK,MAAoB,KAAiB;AACxF,EAAA,MAAMC,QAAQ,GAAGF,kBAAkB,CAACJ,EAAE,EAAEK,MAAM,CAAC,CAAA;EAE/C,IAAI,CAACC,QAAQ,EAAE;AACb,IAAA,IAAIf,QAAQ,CAACS,EAAE,CAAC,EAAE;AAChB,MAAA,MAAM,IAAI7J,YAAY,CAACmD,KAAK,CAAChC,QAAQ,CAACP,iBAAiB,CAACiJ,EAAE,CAAC,EAAE1G,KAAK,CAACtB,KAAK,CAACjB,iBAAiB,CAAC,CAAA;AAC5F,KAAA,MAAM;MACL,MAAM,IAAIZ,YAAY,CAACmD,KAAK,CAAChC,QAAQ,CAACT,UAAU,CAACmJ,EAAE,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,EAAE1G,KAAK,CAACtB,KAAK,CAACnB,UAAU,CAAC,CAAA;AACzG,KAAA;AACF,GAAA;AAED,EAAA,OAAOyJ,QAAQ,CAAA;AACjB,CAAC,CAAA;AAEM,MAAMK,UAAU,GAAGA,CAACC,IAAiB,EAAEC,QAAgB,KAAuB;AACnF,EAAA,MAAMC,MAAM,GAAGF,IAAI,CAACH,aAAa,CAACI,QAAQ,CAAsB,CAAA;EAEhE,IAAI,CAACC,MAAM,EAAE;AACX,IAAA,MAAM,IAAI3K,YAAY,CAACmD,KAAK,CAAChC,QAAQ,CAACN,gBAAgB,EAAEsC,KAAK,CAACtB,KAAK,CAAChB,gBAAgB,CAAC,CAAA;AACtF,GAAA;AAED,EAAA,OAAO8J,MAAM,CAAA;AACf,CAAC,CAAA;AAEM,MAAMC,KAAK,GAAIC,GAAW,IAAc;AAC7C,EAAA,IAAI,CAACA,GAAG,IAAIA,GAAG,IAAI,CAAC,EAAE;AACpB,IAAA,OAAO,EAAE,CAAA;AACV,GAAA;EAED,OAAOC,KAAK,CAACC,KAAK,CAAC,CAAC,EAAED,KAAK,CAACD,GAAG,CAAC,CAAC,CAACvJ,GAAG,CAAC,CAAC0J,KAAK,EAAEC,GAAG,KAAKA,GAAG,CAAC,CAAA;AAC5D,CAAC,CAAA;AAEM,MAAMC,KAAK,GAAGA,CAAClE,CAAS,EAAEuB,GAAW,EAAEE,GAAW,KAAKvB,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACqB,GAAG,CAACvB,CAAC,EAAEyB,GAAG,CAAC,EAAEF,GAAG,CAAC,CAAA;AAE7F;AACO,MAAM4C,IAAI,GAAGA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAS,KAAI;EACtD,OAAOF,CAAC,IAAI,CAAC,GAAGE,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAAC,CAAA;AAC5B,CAAC,CAAA;AAEM,MAAMC,SAAS,GAAGA,CAACnK,GAAW,EAAEmH,GAAW,EAAEE,GAAW,KAAI;EACjE,MAAM+C,IAAI,GAAGtE,IAAI,CAACuE,GAAG,CAAChD,GAAG,GAAGF,GAAG,CAAC,CAAA;EAEhC,IAAInH,GAAG,GAAGmH,GAAG,EAAE;AACb,IAAA,MAAMmD,MAAM,GAAG,CAACnD,GAAG,GAAGnH,GAAG,IAAIoK,IAAI,CAAA;IACjCpK,GAAG,GAAGqH,GAAG,GAAGiD,MAAM,CAAA;AACnB,GAAA,MAAM,IAAItK,GAAG,GAAGqH,GAAG,EAAE;AACpB,IAAA,MAAMiD,MAAM,GAAG,CAACtK,GAAG,GAAGqH,GAAG,IAAI+C,IAAI,CAAA;IACjCpK,GAAG,GAAGmH,GAAG,GAAGmD,MAAM,CAAA;AACnB,GAAA;AAED,EAAA,OAAOtK,GAAG,CAAA;AACZ,CAAC,CAAA;AAkBM,MAAMuK,SAAS,GAAGA,CAAIC,KAAU,EAAEC,OAA4B,KAAY;AAC/E,EAAA,KAAK,IAAIZ,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGW,KAAK,CAACE,MAAM,EAAEb,GAAG,EAAE,EAAE;AAC3C,IAAA,IAAIY,OAAO,CAACD,KAAK,CAACX,GAAG,CAAC,CAAC,EAAE;AACvB,MAAA,OAAOA,GAAG,CAAA;AACX,KAAA;AACF,GAAA;AAED,EAAA,OAAO,CAAC,CAAC,CAAA;AACX,CAAC,CAAA;AAEM,MAAMc,eAAe,GAAyC3K,GAAO,IAAmB,OAAOA,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAG,EAAS,CAAA;AACjI,MAAM4K,aAAa,GAAGA,CAACC,SAAiB,EAAEC,MAAc,KAAI;AACjE,EAAA,OAAOhF,IAAI,CAACiF,IAAI,CAACjF,IAAI,CAACkF,GAAG,CAACH,SAAS,GAAG,GAAG,CAAC,GAAGC,MAAM,CAAC,GAAG,CAAC,CAAA;AAC1D,CAAC,CAAA;AAEM,MAAMG,WAAW,GAAGA,CAAIC,GAAQ,EAAEC,KAAa,EAAEC,YAAY,GAAG,QAAQ,KAAS;EACtF,OAAOA,YAAY,CAACC,KAAK,CAAC,EAAE,CAAC,CAC1BnL,GAAG,CAACoL,IAAI,IAAIH,KAAK,CAACI,OAAO,CAACD,IAAI,CAAC,CAAC,CAChCpL,GAAG,CAACsL,KAAK,IAAIN,GAAG,CAACM,KAAK,CAAC,CAAC,CAAA;AAC7B,CAAC,CAAA;AAEM,MAAMC,YAAY,GAAGA,MAAK;AAC/B,EAAA,IAAI,CAAC/C,QAAQ,EAAE,OAAO,KAAK,CAAA;AAE3B,EAAA,KAAK,MAAMgD,GAAG,IAAIlD,kBAA0B,EAAE;AAC5C,IAAA,IAAIE,QAAQ,CAACgD,GAAG,CAAC,EAAE,OAAO,IAAI,CAAA;AAC/B,GAAA;AAED,EAAA,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAEM,MAAMC,qBAAqB,GAAGA,MAAK;EACxC,OAAOC,MAAM,CAACC,eAAe,IAAI,CAAC,CAACC,iBAAiB,IAAI,mBAAmB,IAAIA,iBAAiB,CAAA;AAClG,CAAC,CAAA;AAEM,MAAMC,UAAU,GAAGA,CAACC,OAAe,EAAEC,GAAW,KAAI;EACzD,MAAMC,cAAc,GAAGpG,IAAI,CAACkF,GAAG,CAAClE,UAAU,GAAGkF,OAAO,GAAG,GAAG,CAAC,CAAA;EAC3D,MAAMG,WAAW,GAAGrG,IAAI,CAACkF,GAAG,CAAClE,UAAU,GAAGmF,GAAG,GAAG,GAAG,CAAC,CAAA;EAEpD,OAAOC,cAAc,GAAGC,WAAW,CAAA;AACrC,CAAC,CAAA;AAEM,MAAMC,WAAW,GAAGA,CAACC,GAAS,EAAEC,GAAW,EAAEC,KAAa,EAAEC,IAAY,KAAU;AACvFC,EAAAA,IAAI,CAACC,QAAQ,CAACL,GAAG,CAAC,CAAA;EAElB,MAAMM,cAAc,GAAG,IAAI,CAAA;AAC3B,EAAA,MAAMC,YAAY,GAAG9C,KAAK,CAACyC,KAAK,EAAE,CAAC,EAAE,GAAGI,cAAc,EAAE,EAAE,GAAGA,cAAc,CAAC,CAAA;EAE5EF,IAAI,CAACI,OAAO,CAACR,GAAG,EAAEA,GAAG,EAAEC,GAAG,GAAGxF,UAAU,CAAC,CAAA;EACxC2F,IAAI,CAACK,OAAO,CAACT,GAAG,EAAEA,GAAG,EAAEO,YAAY,GAAG9F,UAAU,CAAC,CAAA;EACjD2F,IAAI,CAACM,OAAO,CAACV,GAAG,EAAEA,GAAG,EAAEG,IAAI,GAAG1F,UAAU,CAAC,CAAA;AAEzC,EAAA,OAAOuF,GAAG,CAAA;AACZ,CAAC,CAAA;AAED;;;AAGG;AACI,MAAMW,WAAW,GAAIC,UAAgB,IAAI;AAC9C,EAAA,MAAMrH,CAAC,GAAGqH,UAAU,CAAC,CAAC,CAAC,CAAA;AACvB,EAAA,MAAMC,CAAC,GAAGD,UAAU,CAAC,CAAC,CAAC,CAAA;AACvB,EAAA,MAAME,CAAC,GAAGF,UAAU,CAAC,CAAC,CAAC,CAAA;AACvB,EAAA,MAAMG,CAAC,GAAGH,UAAU,CAAC,CAAC,CAAC,CAAA;AACvB,EAAA,MAAMI,EAAE,GAAGzH,CAAC,GAAGA,CAAC,CAAA;AAChB,EAAA,MAAM0H,EAAE,GAAGJ,CAAC,GAAGA,CAAC,CAAA;AAChB,EAAA,MAAMK,EAAE,GAAGJ,CAAC,GAAGA,CAAC,CAAA;AAChB,EAAA,MAAMK,EAAE,GAAGJ,CAAC,GAAGA,CAAC,CAAA;EAEhB,MAAMK,IAAI,GAAGJ,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,CAAA;EAC9B,MAAME,IAAI,GAAG9H,CAAC,GAAGwH,CAAC,GAAGF,CAAC,GAAGC,CAAC,CAAA;EAE1B,IAAIZ,KAAa,EAAED,GAAW,CAAA;AAE9B,EAAA,IAAIoB,IAAI,GAAG,QAAQ,GAAGD,IAAI,EAAE;AAC1B;AACAlB,IAAAA,KAAK,GAAGzG,IAAI,CAACE,EAAE,GAAG,CAAC,CAAA;IACnBsG,GAAG,GAAG,CAAC,GAAGxG,IAAI,CAAC6H,KAAK,CAACT,CAAC,EAAEtH,CAAC,CAAC,CAAA;GAC3B,MAAM,IAAI8H,IAAI,GAAG,CAAC,QAAQ,GAAGD,IAAI,EAAE;AAClC;AACAlB,IAAAA,KAAK,GAAG,CAACzG,IAAI,CAACE,EAAE,GAAG,CAAC,CAAA;IACpBsG,GAAG,GAAG,CAAC,CAAC,GAAGxG,IAAI,CAAC6H,KAAK,CAACT,CAAC,EAAEtH,CAAC,CAAC,CAAA;AAC5B,GAAA,MAAM;IACL,MAAMgI,IAAI,GAAGC,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACrC,MAAMC,EAAE,GAAGF,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAEnCD,IAAI,CAACG,aAAa,CAACJ,IAAI,EAAEA,IAAI,EAAEX,UAAU,CAAC,CAAA;IAC1CY,IAAI,CAACG,aAAa,CAACD,EAAE,EAAEA,EAAE,EAAEd,UAAU,CAAC,CAAA;IAEtC,MAAMgB,MAAM,GAAGnI,IAAI,CAACoI,IAAI,CAACN,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;AAE/DrB,IAAAA,KAAK,GAAGzG,IAAI,CAAC6H,KAAK,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEK,MAAM,CAAC,CAAA;AACpC3B,IAAAA,GAAG,GAAGxG,IAAI,CAAC6H,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;AACnC,GAAA;EAED,OAAO;IACLrB,KAAK,EAAEzC,KAAK,CAACyC,KAAK,GAAGxF,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IACzCuF,GAAG,EAAEnC,SAAS,CAACmC,GAAG,GAAGvF,UAAU,EAAE,CAAC,EAAE,GAAG,CAAA;GACxC,CAAA;AACH,CAAC;;ACjND;;;AAGG;AAMH;;;;AAIG;AACH,MAAMoH,MAAM,CAAA;AAcV;;;;AAIG;EACH,IAAWnO,GAAGA;IAAK,OAAO,IAAI,CAACoO,IAAI,CAAA;AAAE,GAAA;AACrC;;;;AAIG;EACH,IAAWC,KAAKA;IAAK,OAAO,IAAI,CAACC,MAAM,CAAA;AAAE,GAAA;AACzC;;;;AAIG;EACH,IAAW7E,GAAGA;IAAK,OAAO,IAAI,CAAC8E,IAAI,CAAA;AAAE,GAAA;AACrC;;;;AAIG;EACH,IAAWC,QAAQA;IAAK,OAAO,IAAI,CAACC,SAAS,CAAA;AAAE,GAAA;AAC/C;;;;AAIG;EACH,IAAWC,SAASA;IAAK,OAAO,IAAI,CAACC,UAAU,CAAA;AAAE,GAAA;AAEjD;;;;AAIG;EACH,IAAWC,QAAQA;IAAK,OAAO,IAAI,CAACC,SAAS,CAAA;AAAE,GAAA;EAC/C,IAAWD,QAAQA,CAAC5O,GAAW,EAAI;IAAA,IAAI,CAAC6O,SAAS,GAAG7O,GAAG,CAAA;AAAE,GAAA;AAEzD;;;;AAIG;EACH,IAAW8O,IAAIA;IAAK,OAAO,IAAI,CAACC,KAAK,CAAA;AAAE,GAAA;EACvC,IAAWD,IAAIA,CAAC9O,GAAY,EAAI;IAAA,IAAI,CAAC+O,KAAK,GAAG/O,GAAG,CAAA;AAAE,GAAA;AAElD;;;;AAIG;EACH,IAAWwJ,KAAKA;IAAK,OAAO,IAAI,CAACwF,MAAM,CAAA;AAAE,GAAA;AAEzC;;;;AAIG;EACH,IAAWC,MAAMA;IAAK,OAAO,IAAI,CAACC,OAAO,CAAA;AAAE,GAAA;EAC3C,IAAWD,MAAMA,CAACjP,GAA0B,EAAI;IAAA,IAAI,CAACkP,OAAO,GAAGlP,GAAG,CAAA;AAAE,GAAA;AAEpE;;;;;;;;AAQG;AACHlB,EAAAA,WAAmBA,CAAA;AACjB8P,IAAAA,QAAQ,GAAG3H,0BAA0B;AACrC6H,IAAAA,IAAI,GAAG,KAAK;AACZtF,IAAAA,KAAK,GAAG;AAAErC,MAAAA,GAAG,EAAE,CAAC;AAAEE,MAAAA,GAAG,EAAE,CAAA;KAAG;AAC1B4H,IAAAA,MAAM,GAAGjI,cAAAA;GACV,GAAG,EAAE,EAAA;IACJ,IAAI,CAAC6H,SAAS,GAAGD,QAAQ,CAAA;IACzB,IAAI,CAACG,KAAK,GAAGD,IAAI,CAAA;IACjB,IAAI,CAACE,MAAM,GAAGxF,KAAK,CAAA;IACnB,IAAI,CAAC0F,OAAO,GAAGD,MAAM,CAAA;IACrB,IAAI,CAACN,UAAU,GAAG,KAAK,CAAA;AACvB,IAAA,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAA;AACf,GAAA;AAEA;;;;;;AAMG;EACIC,MAAMA,CAACC,SAAiB,EAAA;AAC7B,IAAA,IAAI,CAAC,IAAI,CAACV,UAAU,EAAE;AACpB,MAAA,IAAI,CAACP,IAAI,GAAG,IAAI,CAACG,IAAI,CAAA;AACrB,MAAA,OAAO,CAAC,CAAA;AACT,KAAA;AAED,IAAA,MAAMF,KAAK,GAAG,IAAI,CAACC,MAAM,CAAA;AACzB,IAAA,MAAM7E,GAAG,GAAG,IAAI,CAAC8E,IAAI,CAAA;AACrB,IAAA,MAAMK,QAAQ,GAAG,IAAI,CAACC,SAAS,CAAA;AAC/B,IAAA,MAAMS,IAAI,GAAG,IAAI,CAAClB,IAAI,CAAA;AACtB,IAAA,MAAMU,IAAI,GAAG,IAAI,CAACC,KAAK,CAAA;IAEvB,MAAMQ,YAAY,GAAG,IAAI,CAACd,SAAS,GAAGY,SAAS,GAAGT,QAAQ,CAAA;IAE1D,IAAI,CAACH,SAAS,GAAGK,IAAI,GACjB3E,SAAS,CAACoF,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,GAC7BzF,KAAK,CAACyF,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAE7B,MAAMC,aAAa,GAAG,IAAI,CAACN,OAAO,CAAC,IAAI,CAACT,SAAS,CAAC,CAAA;IAClD,IAAI,CAACL,IAAI,GAAGrE,IAAI,CAACsE,KAAK,EAAE5E,GAAG,EAAE+F,aAAa,CAAC,CAAA;IAE3C,IAAI,CAACV,IAAI,IAAI,IAAI,CAACL,SAAS,IAAI,CAAC,EAAE;MAChC,IAAI,CAACE,UAAU,GAAG,KAAK,CAAA;AACxB,KAAA;AAED,IAAA,OAAO,IAAI,CAACP,IAAI,GAAGkB,IAAI,CAAA;AACzB,GAAA;AAEA;;;;;AAKG;EACIH,KAAKA,CAACM,UAAkB,EAAA;AAC7B,IAAA,MAAMjG,KAAK,GAAG,IAAI,CAACwF,MAAM,CAAA;AACzB,IAAA,MAAMhP,GAAG,GAAG8J,KAAK,CAAC2F,UAAU,EAAEjG,KAAK,CAACrC,GAAG,EAAEqC,KAAK,CAACnC,GAAG,CAAC,CAAA;IACnD,IAAI,CAACiH,MAAM,GAAGtO,GAAG,CAAA;IACjB,IAAI,CAACuO,IAAI,GAAGvO,GAAG,CAAA;IACf,IAAI,CAACoO,IAAI,GAAGpO,GAAG,CAAA;IACf,IAAI,CAACyO,SAAS,GAAG,CAAC,CAAA;IAClB,IAAI,CAACE,UAAU,GAAG,KAAK,CAAA;AACzB,GAAA;AAEA;;;;AAIG;EACI/F,GAAGA,CAAC8G,KAAa,EAAA;AACtB,IAAA,MAAMlG,KAAK,GAAG,IAAI,CAACwF,MAAM,CAAA;AAEzB,IAAA,IAAI,CAACV,MAAM,GAAGxE,KAAK,CAAC,IAAI,CAACwE,MAAM,GAAGoB,KAAK,EAAElG,KAAK,CAACrC,GAAG,EAAEqC,KAAK,CAACnC,GAAG,CAAC,CAAA;AAC9D,IAAA,IAAI,CAACkH,IAAI,GAAGzE,KAAK,CAAC,IAAI,CAACyE,IAAI,GAAGmB,KAAK,EAAElG,KAAK,CAACrC,GAAG,EAAEqC,KAAK,CAACnC,GAAG,CAAC,CAAA;AAC1D,IAAA,IAAI,CAAC+G,IAAI,GAAGtE,KAAK,CAAC,IAAI,CAACsE,IAAI,GAAGsB,KAAK,EAAElG,KAAK,CAACrC,GAAG,EAAEqC,KAAK,CAACnC,GAAG,CAAC,CAAA;AAC5D,GAAA;AAEA;;;;AAIG;EACIsI,gBAAgBA,CAACD,KAAa,EAAA;AACnC,IAAA,MAAMlG,KAAK,GAAG,IAAI,CAACwF,MAAM,CAAA;AAEzB,IAAA,IAAI,CAACV,MAAM,GAAG,IAAI,CAACF,IAAI,CAAA;AACvB,IAAA,IAAI,CAACG,IAAI,GAAGzE,KAAK,CAAC,IAAI,CAACyE,IAAI,GAAGmB,KAAK,EAAElG,KAAK,CAACrC,GAAG,EAAEqC,KAAK,CAACnC,GAAG,CAAC,CAAA;IAC1D,IAAI,CAACoH,SAAS,GAAG,CAAC,CAAA;IAClB,IAAI,CAACE,UAAU,GAAG,IAAI,CAAA;AACxB,GAAA;AAEA;;;;;AAKG;AACIiB,EAAAA,QAAQA,CAACzI,GAAW,EAAEE,GAAW,EAAA;AACtC,IAAA,IAAI,CAACiH,MAAM,GAAGxE,KAAK,CAAC,IAAI,CAACwE,MAAM,EAAEnH,GAAG,EAAEE,GAAG,CAAC,CAAA;AAC1C,IAAA,IAAI,CAACkH,IAAI,GAAGzE,KAAK,CAAC,IAAI,CAACyE,IAAI,EAAEpH,GAAG,EAAEE,GAAG,CAAC,CAAA;IACtC,IAAI,CAAC2H,MAAM,GAAG;MAAE7H,GAAG;AAAEE,MAAAA,GAAAA;KAAK,CAAA;AAC5B,GAAA;AACD;;AC1MD;;;AAGG;AAYH;;;;;AAKG;AACH,MAAMwI,eAAe,CAAA;AAWnB;;;;AAIG;EACH,IAAWjB,QAAQA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACkB,OAAO,CAAClB,QAAQ,CAAA;AAAE,GAAA;EACtD,IAAWA,QAAQA,CAAC5O,GAAW,EAAA;AAAI,IAAA,IAAI,CAAC8P,OAAO,CAAClB,QAAQ,GAAG5O,GAAG,CAAA;AAAE,GAAA;AAChE;;;;AAIG;EACH,IAAWiP,MAAMA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACa,OAAO,CAACb,MAAM,CAAA;AAAE,GAAA;EAClD,IAAWA,MAAMA,CAACjP,GAA0B,EAAA;AAAI,IAAA,IAAI,CAAC8P,OAAO,CAACb,MAAM,GAAGjP,GAAG,CAAA;AAAE,GAAA;AAE3E;;;;;;;;;AASG;AACHlB,EAAAA,WAAAA,CAAmBiR,MAAc,EAAEC,IAAgB,EAAEC,EAAc,EAAE;AACnErB,IAAAA,QAAQ,GAAG3H,0BAA0B;AACrCgI,IAAAA,MAAM,GAAGjI,cAAAA;GACV,GAAG,EAAE,EAAA;IACJ,IAAI,CAACkJ,OAAO,GAAGH,MAAM,CAAA;AACrB,IAAA,IAAI,CAACD,OAAO,GAAG,IAAI3B,MAAM,CAAC;MAAES,QAAQ;MAAEK,MAAM;AAAEzF,MAAAA,KAAK,EAAE;AAAErC,QAAAA,GAAG,EAAE,CAAC;AAAEE,QAAAA,GAAG,EAAE,CAAA;AAAC,OAAA;AAAI,KAAA,CAAC,CAAA;IAC1E,IAAI,CAAC8I,KAAK,GAAGH,IAAI,CAAA;IACjB,IAAI,CAACI,GAAG,GAAGH,EAAE,CAAA;AACb,IAAA,IAAI,CAACI,cAAc,GAAG,IAAIC,OAAO,CAACC,OAAO,IAAG;MAC1C,IAAI,CAACC,OAAO,GAAGD,OAAqB,CAAA;AACtC,KAAC,CAAC,CAAA;AAEF;AACA,IAAA,IAAI,CAACT,OAAO,CAACH,gBAAgB,CAAC,CAAC,CAAC,CAAA;AAClC,GAAA;AAEA;;;;AAIG;AACIc,EAAAA,gBAAgBA,GAAA;IACrB,OAAO,IAAI,CAACJ,cAAc,CAAA;AAC5B,GAAA;AAEA;;;;;AAKG;EACIjB,MAAMA,CAACC,SAAiB,EAAA;AAC7B,IAAA,MAAMU,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAC3B,IAAA,MAAMF,IAAI,GAAG,IAAI,CAACG,KAAK,CAAA;AACvB,IAAA,MAAMF,EAAE,GAAG,IAAI,CAACG,GAAG,CAAA;AACnB,IAAA,MAAMM,MAAM,GAAG,IAAI,CAACZ,OAAO,CAAA;AAC3BY,IAAAA,MAAM,CAACtB,MAAM,CAACC,SAAS,CAAC,CAAA;AAExB;AACA,IAAA,MAAMb,QAAQ,GAAGkC,MAAM,CAAC1Q,GAAG,CAAA;AAC3B,IAAA,MAAM2Q,QAAQ,GAAGlE,IAAI,CAACmE,MAAM,EAAE,CAAA;AAC9B,IAAA,MAAMC,IAAI,GAAG9G,IAAI,CAACiG,IAAI,CAACa,IAAI,EAAEZ,EAAE,CAACY,IAAI,EAAErC,QAAQ,CAAC,CAAA;AAE/C/B,IAAAA,IAAI,CAACqE,KAAK,CAACH,QAAQ,EAAEX,IAAI,CAACW,QAAQ,EAAEV,EAAE,CAACU,QAAQ,EAAEnC,QAAQ,CAAC,CAAA;AAC1DuB,IAAAA,MAAM,CAACgB,MAAM,CAACJ,QAAQ,EAAEE,IAAI,CAAC,CAAA;IAE7B,IAAIrC,QAAQ,IAAI,CAAC,EAAE;MACjB,IAAI,CAACgC,OAAO,EAAE,CAAA;AACf,KAAA;AACH,GAAA;AACD;;AC3BD;;;;AAIG;AACH,MAAMQ,MAAO,SAAQC,SAAuB,CAAA;AA8F1C;;;;AAIG;EACH,IAAWnG,MAAMA;IAAK,OAAO,IAAI,CAACoG,OAAO,CAAA;AAAE,GAAA;AAC3C;;;;AAIG;EACH,IAAWC,OAAOA;IAAK,OAAO,IAAI,CAACC,QAAQ,CAAA;AAAE,GAAA;AAC7C;;AAEG;EACH,IAAWC,QAAQA;IAAK,OAAO,IAAI,CAACC,gBAAgB,CAAA;AAAE,GAAA;EACtD,IAAWD,QAAQA,CAACrR,GAAiB,EAAA;IACnC,IAAI,CAACsR,gBAAgB,GAAGtR,GAAG,CAAA;AAC7B,GAAA;AACA;;AAEG;EACH,IAAWuR,UAAUA;IAAK,OAAO,IAAI,CAACC,kBAAkB,CAAA;AAAE,GAAA;EAC1D,IAAWD,UAAUA,CAACvR,GAAiB,EAAA;IACrC,IAAI,CAACwR,kBAAkB,GAAGxR,GAAG,CAAA;AAC/B,GAAA;AACA;;AAEG;EACH,IAAWyR,SAASA;IAAK,OAAO,IAAI,CAACC,iBAAiB,CAAA;AAAE,GAAA;EACxD,IAAWD,SAASA,CAACzR,GAAiB,EAAA;IACpC,IAAI,CAAC0R,iBAAiB,GAAG1R,GAAG,CAAA;AAC9B,GAAA;AAEA;;;AAGG;AACHlB,EAAAA,WAAAA,CAAmB;IACjB6S,UAAU;IACVC,YAAY;IACZC,WAAW;IACXR,QAAQ;IACRE,UAAU;IACVE,SAAS;AACTxF,IAAAA,GAAAA;AACc,GAAA,EAAA;AACd,IAAA,KAAK,EAAE,CAAA;IAEP,IAAI,CAACK,GAAG,GAAGqF,UAAU,CAAA;IACrB,IAAI,CAACpF,KAAK,GAAGqF,YAAY,CAAA;IACzB,IAAI,CAACf,IAAI,GAAGgB,WAAW,CAAA;IACvB,IAAI,CAACC,UAAU,GAAG,CAAC,CAAA;IAEnB,IAAI,CAACH,UAAU,GAAGA,UAAU,CAAA;IAC5B,IAAI,CAACC,YAAY,GAAGA,YAAY,CAAA;IAChC,IAAI,CAACC,WAAW,GAAGA,WAAW,CAAA;AAE9B,IAAA,IAAI,CAACE,QAAQ,GAAGlE,IAAI,CAAC+C,MAAM,EAAE,CAAA;IAC7B,IAAI,CAACoB,SAAS,GAAG,IAAI,CAAA;AAErB,IAAA,IAAI,CAACC,GAAG,GAAGpE,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACnC,IAAI,CAACoD,OAAO,GAAG,CAAC,CAAA;IAEhB,IAAI,CAACI,gBAAgB,GAAGD,QAAQ,CAAA;IAChC,IAAI,CAACG,kBAAkB,GAAGD,UAAU,CAAA;IACpC,IAAI,CAACG,iBAAiB,GAAGD,SAAS,CAAA;IAElC,IAAI,CAACS,SAAS,GAAGb,QAAQ,CAAA;IACzB,IAAI,CAACc,WAAW,GAAGZ,UAAU,CAAA;IAC7B,IAAI,CAACa,UAAU,GAAGX,SAAS,CAAA;AAE3B,IAAA,IAAI,CAACxE,UAAU,GAAGR,IAAI,CAACmE,MAAM,EAAE,CAAA;IAC/B,IAAI,CAACyB,iBAAiB,EAAE,CAAA;AAExB,IAAA,IAAI,CAACC,UAAU,GAAGC,IAAI,CAAC3B,MAAM,EAAE,CAAA;AAC/B,IAAA,IAAI,CAAC4B,gBAAgB,GAAGD,IAAI,CAAC3B,MAAM,EAAE,CAAA;IACrC,IAAI,CAAC3E,GAAG,GAAGA,GAAG,CAAA;AAEd,IAAA,IAAI,CAACwG,gBAAgB,GAAG,CAAC,CAAC,CAAA;AAC5B,GAAA;AAEA;;;;AAIG;AACIC,EAAAA,OAAOA,GAAA;IACZ,IAAI,CAACC,GAAG,EAAE,CAAA;AACZ,GAAA;AAEA;;;;;;AAMG;AACIC,EAAAA,MAAMA,CAACC,KAAa,EAAEC,MAAc,EAAA;AACzC,IAAA,MAAMC,UAAU,GAAG,IAAI,CAAC7B,OAAO,CAAA;AAE/B,IAAA,IAAI,CAACA,OAAO,GAAG2B,KAAK,GAAGC,MAAM,CAAA;AAE7B,IAAA,IAAI,IAAI,CAAC5B,OAAO,KAAK6B,UAAU,EAAE;MAC/B,IAAI,CAACC,YAAY,EAAE,CAAA;AACpB,KAAA;AACH,GAAA;AAEA;;;;;;;;AAQG;AACIC,EAAAA,MAAMA,CAAC;IACZ3G,GAAG,GAAG,IAAI,CAACA,GAAG;IACdC,KAAK,GAAG,IAAI,CAACA,KAAK;IAClBsE,IAAI,GAAG,IAAI,CAACA,IAAAA;AAKZ,GAAA,EAAA;IACA,MAAMqC,cAAc,GAAGzG,IAAI,CAAC0G,KAAK,CAAC,IAAI,CAAClG,UAAU,CAAC,CAAA;AAClD,IAAA,MAAMmG,QAAQ,GAAG,IAAI,CAACvC,IAAI,CAAA;IAE1B,IAAI,CAACvE,GAAG,GAAGnC,SAAS,CAACmC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;IACjC,IAAI,CAACC,KAAK,GAAGzC,KAAK,CAACyC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;IAClC,IAAI,CAACsE,IAAI,GAAGA,IAAI,CAAA;IAEhB,IAAI,CAACwB,iBAAiB,EAAE,CAAA;IAExB,MAAMgB,QAAQ,GAAGvN,IAAI,CAACuE,GAAG,CAACwG,IAAI,GAAGuC,QAAQ,CAAC,CAAA;AAE1C,IAAA,IACE,CAAC3G,IAAI,CAAC6G,MAAM,CAAC,IAAI,CAACrG,UAAU,EAAEiG,cAAc,CAAC,IAC1CG,QAAQ,IAAIxL,OAAO,GAAG,EAAE;MAC3B;MACA,IAAI,CAACmL,YAAY,EAAE,CAAA;AACpB,KAAA;AACH,GAAA;AAEA;;;;;;AAMG;EACIjC,MAAMA,CAACJ,QAAc,EAAEE,IAAe,GAAA,IAAI,CAACA,IAAI,EAAA;AACpD,IAAA,MAAM0C,UAAU,GAAG9G,IAAI,CAAC+G,SAAS,CAAC/G,IAAI,CAACmE,MAAM,EAAE,EAAED,QAAQ,CAAC,CAAA;IAC1D,MAAM8C,cAAc,GAAGhH,IAAI,CAAC6G,MAAM,CAAC,IAAI,CAACrG,UAAU,EAAEsG,UAAU,CAAC,CAAA;IAC/D9G,IAAI,CAACiH,IAAI,CAAC,IAAI,CAACzG,UAAU,EAAEsG,UAAU,CAAC,CAAA;AAEtC,IAAA,MAAMH,QAAQ,GAAG,IAAI,CAACvC,IAAI,CAAA;IAC1B,MAAM;MAAEvE,GAAG;AAAEC,MAAAA,KAAAA;AAAK,KAAE,GAAGS,WAAW,CAACuG,UAAU,CAAC,CAAA;IAE9C,IAAI,CAACjH,GAAG,GAAGA,GAAG,CAAA;IACd,IAAI,CAACC,KAAK,GAAGA,KAAK,CAAA;IAClB,IAAI,CAACsE,IAAI,GAAGA,IAAI,CAAA;IAEhB,MAAMwC,QAAQ,GAAGvN,IAAI,CAACuE,GAAG,CAACwG,IAAI,GAAGuC,QAAQ,CAAC,CAAA;IAE1C,IAAI,CAACK,cAAc,IAAIJ,QAAQ,IAAIxL,OAAO,GAAG,EAAE,EAAE;MAC/C,IAAI,CAACmL,YAAY,EAAE,CAAA;AACpB,KAAA;AACH,GAAA;AAEA;;;;;;;;;AASG;AACUW,EAAAA,SAASA,CAAC;IACrBrH,GAAG,GAAG,IAAI,CAACA,GAAG;IACdC,KAAK,GAAG,IAAI,CAACA,KAAK;IAClBsE,IAAI,GAAG,IAAI,CAACA,IAAI;AAChBjC,IAAAA,QAAQ,GAAG,CAAC;AACZK,IAAAA,MAAM,GAAGjI,cAAAA;GAAc,GAOpB,EAAE,EAAA;;AACL,MAAA,IACE,IAAI,CAACsF,GAAG,KAAKA,GAAG,IACb,IAAI,CAACC,KAAK,KAAKA,KAAK,IACpB,IAAI,CAACsE,IAAI,KAAKA,IAAI,EACrB,OAAA;AAEF,MAAA,MAAMb,IAAI,GAAG;QACXW,QAAQ,EAAElE,IAAI,CAAC0G,KAAK,CAAC,IAAI,CAAClG,UAAU,CAAC;QACrC4D,IAAI,EAAE,IAAI,CAACA,IAAAA;OACZ,CAAA;AACD,MAAA,MAAMZ,EAAE,GAAG;AACTU,QAAAA,QAAQ,EAAEvE,WAAW,CAACK,IAAI,CAACmE,MAAM,EAAE,EAAEtE,GAAG,EAAEC,KAAK,EAAE,IAAI,CAACuF,UAAU,CAAC;AACjEjB,QAAAA,IAAAA;OACD,CAAA;MAED,MAAMmB,SAAS,GAAG,IAAInC,eAAe,CAAC,IAAI,EAAEG,IAAI,EAAEC,EAAE,EAAE;QACpDrB,QAAQ;AACRK,QAAAA,MAAAA;AACD,OAAA,CAAC,CAAA;AACF,MAAA,MAAM2E,aAAa,GAAG5B,SAAS,CAACvB,gBAAgB,EAAE,CAAA;MAElD,IAAI,CAACuB,SAAS,GAAGA,SAAS,CAAA;MAC1B4B,aAAa,CAACC,IAAI,CAAC,MAAK;QACtB,IAAI,CAAC7B,SAAS,GAAG,IAAI,CAAA;AACrB,QAAA,IAAI,CAAC8B,OAAO,CAACxN,aAAa,CAACE,aAAa,EAAE;AAAEwL,UAAAA,SAAAA;AAAW,SAAA,CAAC,CAAA;AAC1D,OAAC,CAAC,CAAA;AAEF,MAAA,OAAO4B,aAAa,CAAA;AACtB,KAAC,CAAA,CAAA;AAAA,GAAA;AAED;;AAEG;AACIG,EAAAA,gBAAgBA,CAAC5M,GAAW,EAAEE,GAAW,EAAA;IAC9C,IAAI,CAAC6K,SAAS,GAAG;MAAE/K,GAAG;AAAEE,MAAAA,GAAAA;KAAK,CAAA;AAC/B,GAAA;AAEA;;AAEG;AACI2M,EAAAA,kBAAkBA,CAAC7M,GAAW,EAAEE,GAAW,EAAA;IAChD,IAAI,CAAC8K,WAAW,GAAG;MAAEhL,GAAG;AAAEE,MAAAA,GAAAA;KAAK,CAAA;AACjC,GAAA;AAEA;;AAEG;AACI4M,EAAAA,iBAAiBA,CAAC9M,GAAW,EAAEE,GAAW,EAAA;IAC/C,IAAI,CAAC+K,UAAU,GAAG;MAAEjL,GAAG;AAAEE,MAAAA,GAAAA;KAAK,CAAA;AAChC,GAAA;AAEA;;AAEG;EACI6M,oBAAoBA,CAACpB,MAAc,EAAA;IACxC,IAAI,CAACL,gBAAgB,GAAGK,MAAM,CAAA;AAChC,GAAA;AAEA;;AAEG;AACIqB,EAAAA,UAAUA,GAAA;AACf,IAAA,IAAI,CAACjC,SAAS,GAAG,IAAI,CAACZ,gBAAgB,CAAA;AACtC,IAAA,IAAI,CAACa,WAAW,GAAG,IAAI,CAACX,kBAAkB,CAAA;AAC1C,IAAA,IAAI,CAACY,UAAU,GAAG,IAAI,CAACV,iBAAiB,CAAA;AACxC,IAAA,IAAI,CAACe,gBAAgB,GAAG,CAAC,CAAC,CAAA;AAC5B,GAAA;AAEA;;;;AAIG;EACI2B,WAAWA,CAACvD,IAAY,EAAA;AAC7B,IAAA,MAAMwD,QAAQ,GAAG,IAAI,CAACnC,SAAS,CAAA;AAC/B,IAAA,MAAMoC,eAAe,GAAG,IAAI,CAAC7B,gBAAgB,CAAA;AAC7C,IAAA,IAAI,CAAC4B,QAAQ,EAAE,OAAOnN,cAAc,CAAA;IAEpC,MAAMqN,QAAQ,GAAG,IAAI,CAACC,gBAAgB,CAAC3D,IAAI,CAAC,GAAG,GAAG,CAAA;AAClD,IAAA,IAAI4D,MAAM,GAAGJ,QAAQ,CAAClN,GAAG,CAAA;AACzB,IAAA,IAAIuN,MAAM,GAAGL,QAAQ,CAAChN,GAAG,CAAA;IAEzB,IAAIiN,eAAe,GAAG,CAAC,EAAE;MACvB,MAAMK,WAAW,GAAG/J,aAAa,CAAC2J,QAAQ,GAAGzN,UAAU,EAAE,IAAI,CAACoK,OAAO,CAAC,CAAA;AACtE,MAAA,MAAM0D,CAAC,GAAGN,eAAe,GAAG,GAAG,CAAA;AAC/B,MAAA,MAAMpK,CAAC,GAAGpE,IAAI,CAACkF,GAAG,CAAC2J,WAAW,CAAC,CAAA;AAC/B,MAAA,MAAME,CAAC,GAAG/O,IAAI,CAACoI,IAAI,CAAC,CAAC,CAAC,GAAG0G,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAG1K,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAA;AAC9C,MAAA,MAAM4K,KAAK,GAAGhP,IAAI,CAACiF,IAAI,CAACjF,IAAI,CAACkF,GAAG,CAACuJ,QAAQ,GAAGzN,UAAU,CAAC,GAAG+N,CAAC,CAAC,GAAG9N,UAAU,CAAA;AAEzE0N,MAAAA,MAAM,GAAGJ,QAAQ,CAAClN,GAAG,GAAG2N,KAAK,CAAA;AAC7BJ,MAAAA,MAAM,GAAGL,QAAQ,CAAChN,GAAG,GAAGyN,KAAK,CAAA;AAC9B,KAAA;IAED,IAAIL,MAAM,GAAGC,MAAM,EAAE;AACnBD,MAAAA,MAAM,GAAG,CAAC,CAAA;AACVC,MAAAA,MAAM,GAAG,CAAC,CAAA;AACX,KAAA;IAED,OAAO;AACLvN,MAAAA,GAAG,EAAEsN,MAAM;AACXpN,MAAAA,GAAG,EAAEqN,MAAAA;KACN,CAAA;AACH,GAAA;AAEA;;;;AAIG;EACIK,aAAaA,CAAClE,IAAY,EAAA;AAC/B,IAAA,MAAMmE,UAAU,GAAG,IAAI,CAAC7C,WAAW,CAAA;AACnC,IAAA,MAAMmC,eAAe,GAAG,IAAI,CAAC7B,gBAAgB,CAAA;AAE7C,IAAA,IAAI,CAACuC,UAAU,EAAE,OAAO1N,mBAAmB,CAAA;AAE3C,IAAA,IAAI2N,QAAQ,GAAGD,UAAU,CAAC7N,GAAG,CAAA;AAC7B,IAAA,IAAI+N,QAAQ,GAAGF,UAAU,CAAC3N,GAAG,CAAA;IAE7B,IAAIiN,eAAe,GAAG,CAAC,EAAE;MACvB,MAAMa,QAAQ,GAAG,IAAI,CAACC,cAAc,CAACvE,IAAI,CAAC,GAAG,GAAG,CAAA;AAEhDoE,MAAAA,QAAQ,GAAGD,UAAU,CAAC7N,GAAG,GAAGgO,QAAQ,CAAA;AACpCD,MAAAA,QAAQ,GAAGF,UAAU,CAAC3N,GAAG,GAAG8N,QAAQ,CAAA;AACrC,KAAA;IAED,IAAIF,QAAQ,GAAGC,QAAQ,EAAE;AACvBD,MAAAA,QAAQ,GAAG,CAAC,CAAA;AACZC,MAAAA,QAAQ,GAAG,CAAC,CAAA;AACb,KAAA;IAED,OAAO;MACL/N,GAAG,EAAErB,IAAI,CAACuB,GAAG,CAAC4N,QAAQ,EAAE,CAAC,EAAE,CAAC;AAC5B5N,MAAAA,GAAG,EAAEvB,IAAI,CAACqB,GAAG,CAAC+N,QAAQ,EAAE,EAAE,CAAA;KAC3B,CAAA;AACH,GAAA;AAEA;;;;AAIG;AACIG,EAAAA,YAAYA,GAAA;;AACjB,IAAA,MAAMC,KAAK,GAAG,CAAAxN,EAAA,GAAA,IAAI,CAACsK,UAAU,MAAA,IAAA,IAAAtK,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAIP,kBAAkB,CAAA;AAEnD;IACA,MAAMgO,MAAM,GAAG,IAAI,CAACf,gBAAgB,CAACc,KAAK,CAACjO,GAAG,CAAC,CAAA;IAC/C,MAAMmO,MAAM,GAAG,IAAI,CAAChB,gBAAgB,CAACc,KAAK,CAACnO,GAAG,CAAC,CAAA;IAC/C,MAAMsO,UAAU,GAAG,IAAI,CAACjB,gBAAgB,CAAC,IAAI,CAAC3D,IAAI,CAAC,CAAA;IAEnD,OAAO;MACL1J,GAAG,EAAErB,IAAI,CAACuB,GAAG,CAACkO,MAAM,EAAE,CAAC,CAAC;MACxBlO,GAAG,EAAEvB,IAAI,CAACqB,GAAG,CAACqO,MAAM,EAAE,GAAG,CAAC;AAC1BE,MAAAA,OAAO,EAAED,UAAAA;KACV,CAAA;AACH,GAAA;AAEA;;;;;AAKG;AACIjB,EAAAA,gBAAgBA,CAAC3D,IAAI,GAAG,IAAI,CAACA,IAAI,EAAA;AACtC,IAAA,OAAO,IAAI,CAAC8E,uBAAuB,CAAC9E,IAAI,CAAC,GAAG9J,UAAU,CAAA;AACxD,GAAA;AAEA;;;;;AAKG;AACIqO,EAAAA,cAAcA,CAACvE,IAAI,GAAG,IAAI,CAACA,IAAI,EAAA;AACpC,IAAA,MAAM/F,MAAM,GAAG,IAAI,CAACoG,OAAO,CAAA;IAC3B,MAAM0E,IAAI,GAAG,IAAI,CAACD,uBAAuB,CAAC9E,IAAI,CAAC,CAAC;AAChD,IAAA,MAAMgF,IAAI,GAAGjL,aAAa,CAACgL,IAAI,EAAE9K,MAAM,CAAC,CAAA;IAExC,OAAO+K,IAAI,GAAG9O,UAAU,CAAA;AAC1B,GAAA;AAEA;;;;;AAKG;EACI+O,SAASA,CAAC7J,GAAW,EAAA;AAC1B,IAAA,MAAMD,OAAO,GAAG,IAAI,CAACC,GAAG,CAAA;IACxB,MAAMC,cAAc,GAAGpG,IAAI,CAACkF,GAAG,CAAClE,UAAU,GAAGkF,OAAO,GAAG,GAAG,CAAC,CAAA;IAC3D,MAAMG,WAAW,GAAGrG,IAAI,CAACkF,GAAG,CAAClE,UAAU,GAAGmF,GAAG,GAAG,GAAG,CAAC,CAAA;IAEpD,OAAOC,cAAc,GAAGC,WAAW,CAAA;AACrC,GAAA;AAEA;;;;;AAKG;AACI6G,EAAAA,YAAYA,GAAA;AACjB,IAAA,MAAMjF,EAAE,GAAG,IAAI,CAACkE,GAAG,CAAA;AACnB,IAAA,MAAMnH,MAAM,GAAG,IAAI,CAACoG,OAAO,CAAA;AAC3B,IAAA,MAAMoB,UAAU,GAAG,IAAI,CAACA,UAAU,CAAA;AAClC,IAAA,MAAMyD,UAAU,GAAG,IAAI,CAACvD,gBAAgB,CAAA;AACxC,IAAA,MAAMT,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAA;AAC9B,IAAA,MAAMpB,QAAQ,GAAG,IAAI,CAAC1D,UAAU,CAAA;AAEhC,IAAA,MAAM+I,KAAK,GAAGnI,IAAI,CAAC+C,MAAM,EAAE,CAAA;AAC3B,IAAA,MAAMqF,OAAO,GAAGpI,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACzCD,IAAI,CAACG,aAAa,CAACiI,OAAO,EAAEA,OAAO,EAAEtF,QAAQ,CAAC,CAAA;IAC9C9C,IAAI,CAACG,aAAa,CAACgI,KAAK,EAAEjI,EAAE,EAAE4C,QAAQ,CAAC,CAAA;AAEvC,IAAA,MAAMiF,IAAI,GAAG,IAAI,CAACD,uBAAuB,EAAE,CAAC;AAC5C,IAAA,MAAME,IAAI,GAAGjL,aAAa,CAACgL,IAAI,EAAE9K,MAAM,CAAC,CAAA;IAExCyH,IAAI,CAACU,MAAM,CAACX,UAAU,EAAEP,QAAQ,EAAEkE,OAAO,EAAED,KAAK,CAAC,CAAA;AACjDzD,IAAAA,IAAI,CAAC2D,WAAW,CAACH,UAAU,EAAEF,IAAI,EAAE/K,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IAEpD,IAAI,CAACsG,QAAQ,GAAG,IAAI,CAAA;AACtB,GAAA;AAEA;;AAEG;AACI+E,EAAAA,aAAaA,GAAA;IAClB,IAAI,CAAC/E,QAAQ,GAAG,KAAK,CAAA;AACvB,GAAA;AAEQiB,EAAAA,iBAAiBA,GAAA;AACvBjG,IAAAA,WAAW,CAAC,IAAI,CAACa,UAAU,EAAE,IAAI,CAACX,GAAG,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACuF,UAAU,CAAC,CAAA;AACrE,GAAA;AAEA;;;AAGG;AACK6D,EAAAA,uBAAuBA,CAAC9E,IAAI,GAAG,IAAI,CAACA,IAAI,EAAA;IAC9C,OAAO,CAAC,GAAG/K,IAAI,CAACiF,IAAI,CAACjF,IAAI,CAACkF,GAAG,CAAClE,UAAU,GAAG,IAAI,CAACmF,GAAG,GAAG,GAAG,CAAC,GAAG4E,IAAI,CAAC,CAAA;AACpE,GAAA;AACD;;ACrmBD;;;AAGG;AAMH,MAAMuF,UAAW,SAAQnF,SAA4D,CAAA;AAInFnS,EAAAA,WAAAA,GAAA;AACE,IAAA,KAAK,EAAE,CAAA;AAyBD,IAAA,IAAA,CAAAuX,YAAY,GAAIC,GAAe,IAAI;AACzC,MAAA,MAAM7N,EAAE,GAAG,IAAI,CAAC8N,GAAG,CAAA;AACnB,MAAA,IAAI,CAAC9N,EAAE,IAAI6N,GAAG,CAACE,MAAM,KAAKhO,YAAoB,CAAC5E,IAAI,EAAE,OAAA;MAErD0S,GAAG,CAACG,cAAc,EAAE,CAAA;MAEpB,IAAIhO,EAAE,CAACiO,KAAK,EAAE;QACZjO,EAAE,CAACiO,KAAK,EAAE,CAAA;AACX,OAAA,MAAM;QACL9K,MAAM,CAAC8K,KAAK,EAAE,CAAA;AACf,OAAA;MAED,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,GAAGL,GAAG,CAACM,OAAO,CAAA;MAC9B,IAAI,CAACD,QAAQ,CAAC,CAAC,CAAC,GAAGL,GAAG,CAACO,OAAO,CAAA;AAE9BjL,MAAAA,MAAM,CAACkL,gBAAgB,CAACtO,QAAc,CAAC5H,UAAU,EAAE,IAAI,CAACmW,YAAY,EAAE,KAAK,CAAC,CAAA;AAC5EnL,MAAAA,MAAM,CAACkL,gBAAgB,CAACtO,QAAc,CAAC3H,QAAQ,EAAE,IAAI,CAACmW,UAAU,EAAE,KAAK,CAAC,CAAA;AAExE,MAAA,IAAI,CAAClD,OAAO,CAACnN,cAAc,CAACvB,WAAW,EAAE;AACvC6R,QAAAA,QAAQ,EAAEX,GAAG;AACbY,QAAAA,OAAO,EAAE,KAAK;AACdC,QAAAA,UAAU,EAAE,KAAA;AACb,OAAA,CAAC,CAAA;KACH,CAAA;AAEO,IAAA,IAAA,CAAAJ,YAAY,GAAIT,GAAe,IAAI;MACzCA,GAAG,CAACG,cAAc,EAAE,CAAA;AAEpB,MAAA,MAAM7Q,CAAC,GAAG0Q,GAAG,CAACM,OAAO,CAAA;AACrB,MAAA,MAAM1J,CAAC,GAAGoJ,GAAG,CAACO,OAAO,CAAA;AACrB,MAAA,MAAMO,OAAO,GAAG,IAAI,CAACT,QAAQ,CAAA;AAC7B,MAAA,MAAMU,MAAM,GAAGzR,CAAC,GAAGwR,OAAO,CAAC,CAAC,CAAC,CAAA;AAC7B,MAAA,MAAME,MAAM,GAAGpK,CAAC,GAAGkK,OAAO,CAAC,CAAC,CAAC,CAAA;AAE7B,MAAA,IAAI,CAACtD,OAAO,CAACnN,cAAc,CAACJ,MAAM,EAAE;AAClCmJ,QAAAA,KAAK,EAAE;AACL9J,UAAAA,CAAC,EAAEyR,MAAM;AACTnK,UAAAA,CAAC,EAAEoK,MAAAA;SACJ;AACDJ,QAAAA,OAAO,EAAE,KAAK;AACdC,QAAAA,UAAU,EAAE,KAAA;AACb,OAAA,CAAC,CAAA;AAEFC,MAAAA,OAAO,CAAC,CAAC,CAAC,GAAGxR,CAAC,CAAA;AACdwR,MAAAA,OAAO,CAAC,CAAC,CAAC,GAAGlK,CAAC,CAAA;KACf,CAAA;IAEO,IAAU,CAAA8J,UAAA,GAAG,MAAK;AACxB,MAAA,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACpB,MAAA,IAAI,CAACA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AAEpB/K,MAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAAC5H,UAAU,EAAE,IAAI,CAACmW,YAAY,EAAE,KAAK,CAAC,CAAA;AAC/EnL,MAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAAC3H,QAAQ,EAAE,IAAI,CAACmW,UAAU,EAAE,KAAK,CAAC,CAAA;AAE3E,MAAA,IAAI,CAAClD,OAAO,CAACnN,cAAc,CAACtB,SAAS,EAAE;AACrC6R,QAAAA,OAAO,EAAE,KAAK;AACdC,QAAAA,UAAU,EAAE,KAAK;AACjBK,QAAAA,SAAS,EAAE,KAAA;AACZ,OAAA,CAAC,CAAA;KACH,CAAA;IAlFC,IAAI,CAACjB,GAAG,GAAG,IAAI,CAAA;AACf,IAAA,IAAI,CAACI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACxB,GAAA;EAEOc,MAAMA,CAACC,OAAoB,EAAA;IAChC,IAAI,IAAI,CAACnB,GAAG,EAAE,OAAA;AAEdmB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAAC7H,UAAU,EAAE,IAAI,CAAC0V,YAAY,CAAC,CAAA;IAEtE,IAAI,CAACE,GAAG,GAAGmB,OAAO,CAAA;AACpB,GAAA;AAEOC,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMD,OAAO,GAAG,IAAI,CAACnB,GAAG,CAAA;IACxB,IAAI,CAACmB,OAAO,EAAE,OAAA;AAEdA,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAAC7H,UAAU,EAAE,IAAI,CAAC0V,YAAY,CAAC,CAAA;AACzEzK,IAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAAC5H,UAAU,EAAE,IAAI,CAACmW,YAAY,EAAE,KAAK,CAAC,CAAA;AAC/EnL,IAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAAC3H,QAAQ,EAAE,IAAI,CAACmW,UAAU,EAAE,KAAK,CAAC,CAAA;IAE3E,IAAI,CAACT,GAAG,GAAG,IAAI,CAAA;AACjB,GAAA;AA8DD;;ACnGD;;;AAGG;AAOH,MAAMqB,UAAW,SAAQ3G,SAA4D,CAAA;EAOnF,IAAW4G,UAAUA;IAAK,OAAO,IAAI,CAACC,WAAW,CAAA;AAAE,GAAA;EACnD,IAAWD,UAAUA,CAAC7X,GAAY,EAAI;IAAA,IAAI,CAAC8X,WAAW,GAAG9X,GAAG,CAAA;AAAE,GAAA;AAE9DlB,EAAAA,WAAAA,GAAA;AACE,IAAA,KAAK,EAAE,CAAA;AA8BD,IAAA,IAAA,CAAAiZ,aAAa,GAAIzB,GAAe,IAAI;MAC1C,IAAIA,GAAG,CAAC0B,OAAO,CAACtN,MAAM,GAAG,CAAC,IAAI,IAAI,CAACuN,UAAU,EAAE,OAAA;AAE/C,MAAA,MAAMC,KAAK,GAAG5B,GAAG,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAA;MAE5B,IAAI,CAACG,aAAa,GAAG,IAAI,CAAA;MACzB,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC,GAAGuB,KAAK,CAACtB,OAAO,CAAA;MAChC,IAAI,CAACD,QAAQ,CAAC,CAAC,CAAC,GAAGuB,KAAK,CAACrB,OAAO,CAAA;AAEhC,MAAA,IAAI,CAAC/C,OAAO,CAACnN,cAAc,CAACvB,WAAW,EAAE;AACvC6R,QAAAA,QAAQ,EAAEX,GAAG;AACbY,QAAAA,OAAO,EAAE,IAAI;AACbC,QAAAA,UAAU,EAAE,KAAA;AACb,OAAA,CAAC,CAAA;KACH,CAAA;AAEO,IAAA,IAAA,CAAAiB,YAAY,GAAI9B,GAAe,IAAI;AACzC;MACA,IAAIA,GAAG,CAAC0B,OAAO,CAACtN,MAAM,GAAG,CAAC,IAAI,IAAI,CAACuN,UAAU,EAAE,OAAA;AAE/C,MAAA,MAAMC,KAAK,GAAG5B,GAAG,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAA;AAC5B,MAAA,MAAMH,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AACnC,MAAA,MAAMV,OAAO,GAAG,IAAI,CAACT,QAAQ,CAAA;AAE7B,MAAA,MAAM/Q,CAAC,GAAGsS,KAAK,CAACtB,OAAO,CAAA;AACvB,MAAA,MAAM1J,CAAC,GAAGgL,KAAK,CAACrB,OAAO,CAAA;AACvB,MAAA,MAAMQ,MAAM,GAAGzR,CAAC,GAAGwR,OAAO,CAAC,CAAC,CAAC,CAAA;AAC7B,MAAA,MAAME,MAAM,GAAGpK,CAAC,GAAGkK,OAAO,CAAC,CAAC,CAAC,CAAA;MAE7B,IAAI,IAAI,CAACe,aAAa,EAAE;AACtB,QAAA,IAAIN,UAAU,IAAI,CAACpM,YAAY,EAAE,EAAE;AACjC,UAAA,IAAI3F,IAAI,CAACuE,GAAG,CAACiN,MAAM,CAAC,GAAGxR,IAAI,CAACuE,GAAG,CAACgN,MAAM,CAAC,EAAE;AACvC;YACA,IAAI,CAACY,UAAU,GAAG,IAAI,CAAA;AACtB,YAAA,OAAA;AACD,WAAA;AACF,SAAA;QAED,IAAI,CAACE,aAAa,GAAG,KAAK,CAAA;AAC3B,OAAA;AAED,MAAA,IAAI7B,GAAG,CAAC+B,UAAU,KAAK,KAAK,EAAE;QAC5B/B,GAAG,CAACG,cAAc,EAAE,CAAA;AACrB,OAAA;AAED,MAAA,IAAI,CAAC3C,OAAO,CAACnN,cAAc,CAACJ,MAAM,EAAE;AAClCmJ,QAAAA,KAAK,EAAE;AACL9J,UAAAA,CAAC,EAAEyR,MAAM;AACTnK,UAAAA,CAAC,EAAEoK,MAAAA;SACJ;AACDJ,QAAAA,OAAO,EAAE,IAAI;AACbC,QAAAA,UAAU,EAAE,KAAA;AACb,OAAA,CAAC,CAAA;AAEFC,MAAAA,OAAO,CAAC,CAAC,CAAC,GAAGxR,CAAC,CAAA;AACdwR,MAAAA,OAAO,CAAC,CAAC,CAAC,GAAGlK,CAAC,CAAA;KACf,CAAA;AAEO,IAAA,IAAA,CAAAoL,WAAW,GAAIhC,GAAe,IAAI;AACxC,MAAA,IAAIA,GAAG,CAAC0B,OAAO,CAACtN,MAAM,KAAK,CAAC,EAAE,OAAA;AAE9B,MAAA,MAAMwN,KAAK,GAAG5B,GAAG,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAA;AAC5B,MAAA,MAAMZ,OAAO,GAAG,IAAI,CAACT,QAAQ,CAAA;AAE7B,MAAA,IAAIuB,KAAK,EAAE;AACTd,QAAAA,OAAO,CAAC,CAAC,CAAC,GAAGc,KAAK,CAACtB,OAAO,CAAA;AAC1BQ,QAAAA,OAAO,CAAC,CAAC,CAAC,GAAGc,KAAK,CAACrB,OAAO,CAAA;AAC3B,OAAA,MAAM;AACLO,QAAAA,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACdA,QAAAA,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AAEd,QAAA,IAAI,CAACtD,OAAO,CAACnN,cAAc,CAACtB,SAAS,EAAE;AACrC6R,UAAAA,OAAO,EAAE,IAAI;AACbC,UAAAA,UAAU,EAAE,KAAK;UACjBK,SAAS,EAAE,IAAI,CAACS,UAAAA;AACjB,SAAA,CAAC,CAAA;AACH,OAAA;AAED,MAAA,IAAI3B,GAAG,CAAC+B,UAAU,KAAK,KAAK,EAAE;QAC5B/B,GAAG,CAACG,cAAc,EAAE,CAAA;AACrB,OAAA;MAED,IAAI,CAACwB,UAAU,GAAG,KAAK,CAAA;KACxB,CAAA;IA/GC,IAAI,CAAC1B,GAAG,GAAG,IAAI,CAAA;AACf,IAAA,IAAI,CAACI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACtB,IAAI,CAACwB,aAAa,GAAG,KAAK,CAAA;IAC1B,IAAI,CAACF,UAAU,GAAG,KAAK,CAAA;IACvB,IAAI,CAACH,WAAW,GAAG,KAAK,CAAA;AAC1B,GAAA;EAEOL,MAAMA,CAACC,OAAoB,EAAA;IAChC,IAAI,IAAI,CAACnB,GAAG,EAAE,OAAA;AAEdmB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAAC1H,WAAW,EAAE,IAAI,CAACiX,aAAa,EAAE;AAAEQ,MAAAA,OAAO,EAAE,KAAA;AAAK,KAAE,CAAC,CAAA;AAC5Fb,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACzH,UAAU,EAAE,IAAI,CAACqX,YAAY,EAAE;AAAEG,MAAAA,OAAO,EAAE,KAAA;AAAK,KAAE,CAAC,CAAA;AAC1Fb,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACxH,SAAS,EAAE,IAAI,CAACsX,WAAW,CAAC,CAAA;IAEpE,IAAI,CAAC/B,GAAG,GAAGmB,OAAO,CAAA;AACpB,GAAA;AAEOC,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMD,OAAO,GAAG,IAAI,CAACnB,GAAG,CAAA;IACxB,IAAI,CAACmB,OAAO,EAAE,OAAA;AAEdA,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAAC1H,WAAW,EAAE,IAAI,CAACiX,aAAa,CAAC,CAAA;AAC3EL,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACzH,UAAU,EAAE,IAAI,CAACqX,YAAY,CAAC,CAAA;AACzEV,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACxH,SAAS,EAAE,IAAI,CAACsX,WAAW,CAAC,CAAA;IAEvE,IAAI,CAAC/B,GAAG,GAAG,IAAI,CAAA;AACjB,GAAA;AAsFD;;ACvID;;;AAGG;AAMH,MAAMiC,aAAc,SAAQvH,SAA+D,CAAA;EASzF,IAAWwH,MAAMA,GAAA;AACf,IAAA,MAAMC,OAAO,GAAG,IAAI,CAACC,QAAQ,CAAA;AAC7B,IAAA,OAAOD,OAAO,CAAC9U,IAAI,IAAI8U,OAAO,CAAC7U,EAAE,IAAI6U,OAAO,CAAC5U,KAAK,IAAI4U,OAAO,CAAC3U,IAAI,CAAA;AACpE,GAAA;AAEAjF,EAAAA,WAAAA,GAAA;AACE,IAAA,KAAK,EAAE,CAAA;AAyFD,IAAA,IAAA,CAAA8Z,UAAU,GAAItC,GAAkB,IAAI;AAC1C;AACA,MAAA,IAAIA,GAAG,CAACuC,QAAQ,KAAKC,aAAa,CAACC,yBAAyB,EAAE,OAAA;AAE9D,MAAA,IAAI,CAACC,eAAe,CAAC1C,GAAG,EAAE,IAAI,CAAC,CAAA;AAE/B,MAAA,MAAM2C,YAAY,GAAG,IAAI,CAACC,mBAAmB,EAAE,CAAA;MAC/C,IAAID,YAAY,IAAI,CAAC,EAAE,OAAA;MAEvB3C,GAAG,CAACG,cAAc,EAAE,CAAA;MACpB,IAAIwC,YAAY,KAAK,CAAC,IAAI,CAAC3C,GAAG,CAAC6C,MAAM,EAAE;AACrC;AACA,QAAA,IAAI,CAACrF,OAAO,CAACnN,cAAc,CAACvB,WAAW,EAAE;AACvC6R,UAAAA,QAAQ,EAAEX,GAAG;AACbY,UAAAA,OAAO,EAAE,KAAK;AACdC,UAAAA,UAAU,EAAE,IAAA;AACb,SAAA,CAAC,CAAA;AACH,OAAA;KACF,CAAA;AAEO,IAAA,IAAA,CAAAiC,QAAQ,GAAI9C,GAAkB,IAAI;AACxC;AACA,MAAA,IAAIA,GAAG,CAACuC,QAAQ,KAAKC,aAAa,CAACC,yBAAyB,EAAE,OAAA;AAE9D,MAAA,IAAI,CAACC,eAAe,CAAC1C,GAAG,EAAE,KAAK,CAAC,CAAA;AAEhC,MAAA,MAAM2C,YAAY,GAAG,IAAI,CAACC,mBAAmB,EAAE,CAAA;MAC/C,IAAID,YAAY,GAAG,CAAC,EAAE,OAAA;AAEtB,MAAA,IAAI,CAACnF,OAAO,CAACnN,cAAc,CAACtB,SAAS,EAAE;AACrC6R,QAAAA,OAAO,EAAE,KAAK;AACdC,QAAAA,UAAU,EAAE,IAAI;AAChBK,QAAAA,SAAS,EAAE,KAAA;AACZ,OAAA,CAAC,CAAA;KACH,CAAA;IAzHC,IAAI,CAACjB,GAAG,GAAG,IAAI,CAAA;IACf,IAAI,CAAC8C,iBAAiB,EAAE,CAAA;AAC1B,GAAA;EAEO5B,MAAMA,CAACC,OAAoB,EAAA;IAChC,IAAI,IAAI,CAACnB,GAAG,EAAE,OAAA;AAEdmB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAAC5G,QAAQ,EAAE,IAAI,CAACgX,UAAU,CAAC,CAAA;AAClElB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAAC3G,MAAM,EAAE,IAAI,CAACuX,QAAQ,CAAC,CAAA;IAE9D,IAAI,CAAC7C,GAAG,GAAGmB,OAAO,CAAA;IAClB,IAAI,CAAC2B,iBAAiB,EAAE,CAAA;AAC1B,GAAA;AAEO1B,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMD,OAAO,GAAG,IAAI,CAACnB,GAAG,CAAA;IACxB,IAAI,CAACmB,OAAO,EAAE,OAAA;AAEdA,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAAC5G,QAAQ,EAAE,IAAI,CAACgX,UAAU,CAAC,CAAA;AACrElB,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAAC3G,MAAM,EAAE,IAAI,CAACuX,QAAQ,CAAC,CAAA;IAEjE,IAAI,CAAC7C,GAAG,GAAG,IAAI,CAAA;IACf,IAAI,CAAC8C,iBAAiB,EAAE,CAAA;AAC1B,GAAA;AAEOjK,EAAAA,MAAMA,GAAA;AACX,IAAA,MAAMM,KAAK,GAAG,IAAI,CAAC4J,sBAAsB,EAAE,CAAA;IAE3C,IAAI5J,KAAK,CAAC9J,CAAC,KAAK,CAAC,IAAI8J,KAAK,CAACxC,CAAC,KAAK,CAAC,EAAE;AAClC,MAAA,IAAI,CAAC4G,OAAO,CAACnN,cAAc,CAACJ,MAAM,EAAE;QAClCmJ,KAAK;AACLwH,QAAAA,OAAO,EAAE,KAAK;AACdC,QAAAA,UAAU,EAAE,IAAA;AACb,OAAA,CAAC,CAAA;AACH,KAAA;AACH,GAAA;AAEQkC,EAAAA,iBAAiBA,GAAA;AACvB,IAAA,IAAI,CAACV,QAAQ,GAAGnQ,aAAqB,CAAC+Q,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAI;AAC5D,MAAA,OAAAxa,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EACKF,GAAG,CACN,EAAA;AAAA,QAAA,CAACC,OAAO,GAAG,KAAA;AACX,OAAA,CAAA,CAAA;KACH,EAAE,EAA+B,CAAC,CAAA;AACrC,GAAA;AAEQT,EAAAA,eAAeA,CAACW,KAAoB,EAAEC,QAAiB,EAAA;AAC7D,IAAA,MAAMlB,OAAO,GAAG,IAAI,CAACC,QAAQ,CAAA;IAC7B,MAAMkB,WAAW,GAAGF,KAAK,CAACG,OAAO,IAAI,IAAI,GACrCtR,kBAA0B,CAACmR,KAAK,CAACG,OAAO,CAAC,GACzCtR,kBAA0B,CAACmR,KAAK,CAACjO,GAAG,CAAC,CAAA;IAEzC,IAAI,CAACmO,WAAW,EAAE,OAAA;AAElBnB,IAAAA,OAAO,CAACmB,WAAW,CAAC,GAAGD,QAAQ,CAAA;AACjC,GAAA;AAEQV,EAAAA,mBAAmBA,GAAA;AACzB,IAAA,OAAO1Q,aAAqB,CAACuR,MAAM,CAACrO,GAAG,IAAI,IAAI,CAACiN,QAAQ,CAACjN,GAAG,CAAC,CAAC,CAAChB,MAAM,CAAA;AACvE,GAAA;AAEQ4O,EAAAA,sBAAsBA,GAAA;AAC5B,IAAA,MAAMZ,OAAO,GAAG,IAAI,CAACC,QAAQ,CAAA;IAC7B,IAAI/S,CAAC,GAAG,CAAC,CAAA;IACT,IAAIsH,CAAC,GAAG,CAAC,CAAA;IAET,IAAIwL,OAAO,CAAC9U,IAAI,EAAE;AAChBgC,MAAAA,CAAC,IAAI,CAAC,CAAA;AACP,KAAA;IAED,IAAI8S,OAAO,CAAC5U,KAAK,EAAE;AACjB8B,MAAAA,CAAC,IAAI,CAAC,CAAA;AACP,KAAA;IAED,IAAI8S,OAAO,CAAC7U,EAAE,EAAE;AACdqJ,MAAAA,CAAC,IAAI,CAAC,CAAA;AACP,KAAA;IAED,IAAIwL,OAAO,CAAC3U,IAAI,EAAE;AAChBmJ,MAAAA,CAAC,IAAI,CAAC,CAAA;AACP,KAAA;IAED,OAAO;MACLtH,CAAC;AAAEsH,MAAAA,CAAAA;KACJ,CAAA;AACH,GAAA;AAqCD;;ACpJD;;;AAGG;AAmDH;;;;AAIG;AACH,MAAM8M,aAAc,SAAQ/I,SAA8B,CAAA;AAuBxD;;AAEG;EACH,IAAWgJ,OAAOA;IAAK,OAAO,IAAI,CAACC,QAAQ,CAAA;AAAE,GAAA;AAC7C;;AAEG;EACH,IAAWC,aAAaA;IAAK,OAAO,IAAI,CAACC,cAAc,CAAA;AAAE,GAAA;AACzD;;AAEG;EACH,IAAWC,SAASA,GAAA;AAClB,IAAA,OAAO,IAAI,CAACC,cAAc,CAAC7B,MAAM,IAC5B,IAAI,CAAC8B,QAAQ,CAAC7L,SAAS,IACvB,IAAI,CAAC8L,QAAQ,CAAC9L,SAAS,CAAA;AAC9B,GAAA;AACA;;;;;AAKG;EACH,IAAWpC,GAAGA;IAAK,OAAO,IAAI,CAACiO,QAAQ,CAAA;AAAE,GAAA;AACzC;;;;;AAKG;EACH,IAAWhO,KAAKA;IAAK,OAAO,IAAI,CAACiO,QAAQ,CAAA;AAAE,GAAA;AAC3C;;AAEG;EACH,IAAW3C,UAAUA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC4C,WAAW,CAAC5C,UAAU,CAAA;AAAE,GAAA;EAC9D,IAAWA,UAAUA,CAAC7X,GAAY,EAAA;AAChC,IAAA,IAAI,CAACya,WAAW,CAAC5C,UAAU,GAAG7X,GAAG,CAAA;AACnC,GAAA;AAEA;;;;;AAKG;EACH,IAAW0a,YAAYA;IAAK,OAAO,IAAI,CAACC,aAAa,CAAA;AAAE,GAAA;EACvD,IAAWD,YAAYA,CAAC1a,GAAyC,EAAA;IAC/D,IAAI,CAAC2a,aAAa,GAAG3a,GAAG,CAAA;AAC1B,GAAA;AAEA;;;;;AAKG;EACH,IAAW4a,aAAaA;IAAK,OAAO,IAAI,CAACC,cAAc,CAAA;AAAE,GAAA;EACzD,IAAWD,aAAaA,CAAC5a,GAA0C,EAAA;IACjE,IAAI,CAAC6a,cAAc,GAAG7a,GAAG,CAAA;AAC3B,GAAA;AAEA;;;;AAIG;EACH,IAAW4O,QAAQA;IAAK,OAAO,IAAI,CAACC,SAAS,CAAA;AAAE,GAAA;EAC/C,IAAWD,QAAQA,CAAC5O,GAAqC,EAAA;IACvD,IAAI,CAAC6O,SAAS,GAAG7O,GAAG,CAAA;AACpB,IAAA,IAAI,CAACua,QAAQ,CAAC3L,QAAQ,GAAG5O,GAAG,CAAA;AAC5B,IAAA,IAAI,CAACwa,QAAQ,CAAC5L,QAAQ,GAAG5O,GAAG,CAAA;AAC9B,GAAA;AAEA;;;;;AAKG;EACH,IAAWiP,MAAMA;IAAK,OAAO,IAAI,CAACC,OAAO,CAAA;AAAE,GAAA;EAC3C,IAAWD,MAAMA,CAACjP,GAAmC,EAAA;IACnD,IAAI,CAACkP,OAAO,GAAGlP,GAAG,CAAA;AAClB,IAAA,IAAI,CAACua,QAAQ,CAACtL,MAAM,GAAGjP,GAAG,CAAA;AAC1B,IAAA,IAAI,CAACwa,QAAQ,CAACvL,MAAM,GAAGjP,GAAG,CAAA;AAC5B,GAAA;AAEA;;;;AAIG;EACH,IAAW8a,YAAYA;IAAK,OAAO,IAAI,CAACC,aAAa,CAAA;AAAE,GAAA;EACvD,IAAWD,YAAYA,CAAC9a,GAAyC,EAAI;IAAA,IAAI,CAAC+a,aAAa,GAAG/a,GAAG,CAAA;AAAE,GAAA;AAE/F;;;;AAIG;EACH,IAAWgb,UAAUA;IAAK,OAAO,IAAI,CAACC,WAAW,CAAA;AAAE,GAAA;EACnD,IAAWD,UAAUA,CAAChb,GAAuC,EAAI;IAAA,IAAI,CAACib,WAAW,GAAGjb,GAAG,CAAA;AAAE,GAAA;AAEzF;;;;AAIG;EACH,IAAWkb,eAAeA;IAAK,OAAO,IAAI,CAACC,gBAAgB,CAAA;AAAE,GAAA;EAC7D,IAAWD,eAAeA,CAAClb,GAA4C,EAAI;IAAA,IAAI,CAACmb,gBAAgB,GAAGnb,GAAG,CAAA;AAAE,GAAA;AAExG;;;;;;AAMG;AACHlB,EAAAA,WAAAA,CAAmBsc,SAAsB,EAAEjB,aAAsB,EAAE;AACjEvL,IAAAA,QAAQ,GAAG3H,0BAA0B;AACrCgI,IAAAA,MAAM,GAAGjI,cAAc;AACvB0T,IAAAA,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACrBE,IAAAA,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACtBE,IAAAA,YAAY,GAAG,KAAK;AACpBE,IAAAA,UAAU,GAAG,KAAK;AAClBE,IAAAA,eAAe,GAAG,KAAA;MACe,EAAE,EAAA;AACnC,IAAA,KAAK,EAAE,CAAA;AA6ID,IAAA,IAAA,CAAAG,aAAa,GAAI/E,GAAoE,IAAI;MAC/F,IAAI,CAACgF,qBAAqB,GAAG,KAAK,CAAA;MAClC,IAAI,CAACxH,OAAO,CAACnN,cAAc,CAACvB,WAAW,EAClCnG,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EAAApD,GAAG,CACN,EAAA;AAAAiF,QAAAA,SAAS,EAAE,QAAA;SACX,CAAA;KACH,CAAA;AAEO,IAAA,IAAA,CAAAC,SAAS,GAAIlF,GAA+D,IAAI;AACtF,MAAA,MAAM5G,KAAK,GAAG4G,GAAG,CAAC5G,KAAK,CAAA;MACvB,MAAM+L,YAAY,GAAG,CAAC,GAAG,IAAI,CAACC,UAAU,CAAC;AACzC,MAAA,MAAMC,WAAW,GAAG,IAAI,CAACC,YAAY,CAAA;AACrC,MAAA,MAAMhB,aAAa,GAAG,IAAI,CAACC,cAAc,CAAA;AACzC,MAAA,MAAMH,YAAY,GAAG,IAAI,CAACC,aAAa,CAAA;AAEvC,MAAA,IAAIkB,KAAuB,CAAA;MAE3B,IAAIvF,GAAG,CAACa,UAAU,EAAE;AAClB0E,QAAAA,KAAK,GAAG,CACNjB,aAAa,CAAC,CAAC,CAAC,GAAGa,YAAY,EAC/Bb,aAAa,CAAC,CAAC,CAAC,GAAGa,YAAY,CAChC,CAAA;AACF,OAAA,MAAM;QACLI,KAAK,GAAG,CACNnB,YAAY,CAAC,CAAC,CAAC,GAAGiB,WAAW,CAAC,CAAC,CAAC,GAAGF,YAAY,EAC/Cf,YAAY,CAAC,CAAC,CAAC,GAAGiB,WAAW,CAAC,CAAC,CAAC,GAAGF,YAAY,CAChD,CAAA;AACF,OAAA;MAED,MAAMK,OAAO,GAAGpM,KAAK,CAAC9J,CAAC,GAAGiW,KAAK,CAAC,CAAC,CAAC,CAAA;MAClC,MAAME,OAAO,GAAGrM,KAAK,CAACxC,CAAC,GAAG2O,KAAK,CAAC,CAAC,CAAC,CAAA;AAElC,MAAA,IAAI,CAACtB,QAAQ,CAAC5K,gBAAgB,CAACmM,OAAO,CAAC,CAAA;AACvC,MAAA,IAAI,CAACtB,QAAQ,CAAC7K,gBAAgB,CAACoM,OAAO,CAAC,CAAA;MAEvC,IAAI,CAACT,qBAAqB,GAAG,IAAI,CAAA;KAClC,CAAA;AAEO,IAAA,IAAA,CAAAU,WAAW,GAAI1F,GAAkE,IAAI;MAC3F,IAAI,CAACxC,OAAO,CAACnN,cAAc,CAACtB,SAAS,EAChCpG,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EAAApD,GAAG,CACN,EAAA;AAAAiF,QAAAA,SAAS,EAAE,QAAA;SACX,CAAA;AAEF,MAAA,IAAI,CAAC,IAAI,CAACD,qBAAqB,IAAI,CAAChF,GAAG,CAACa,UAAU,IAAI,CAACb,GAAG,CAACkB,SAAS,EAAE;AACpE,QAAA,IAAI,CAAC1D,OAAO,CAACnN,cAAc,CAACpB,YAAY,EAAE;UACxC2R,OAAO,EAAEZ,GAAG,CAACY,OAAAA;AACd,SAAA,CAAC,CAAA;AACH,OAAA;MAED,IAAI,CAACoE,qBAAqB,GAAG,KAAK,CAAA;KACnC,CAAA;IA9LC,IAAI,CAACW,UAAU,GAAGb,SAAS,CAAA;IAC3B,IAAI,CAACT,aAAa,GAAGD,YAAY,CAAA;IACjC,IAAI,CAACG,cAAc,GAAGD,aAAa,CAAA;IACnC,IAAI,CAAC/L,SAAS,GAAGD,QAAQ,CAAA;IACzB,IAAI,CAACM,OAAO,GAAGD,MAAM,CAAA;IACrB,IAAI,CAAC8L,aAAa,GAAGD,YAAY,CAAA;IACjC,IAAI,CAACG,WAAW,GAAGD,UAAU,CAAA;IAC7B,IAAI,CAACG,gBAAgB,GAAGD,eAAe,CAAA;IAEvC,IAAI,CAACd,cAAc,GAAGD,aAAa,CAAA;AACnC,IAAA,IAAI,CAAC+B,WAAW,GAAG,IAAI9F,UAAU,EAAE,CAAA;AACnC,IAAA,IAAI,CAACqE,WAAW,GAAG,IAAI7C,UAAU,EAAE,CAAA;AACnC,IAAA,IAAI,CAAC0C,cAAc,GAAG,IAAI9B,aAAa,EAAE,CAAA;AACzC,IAAA,IAAI,CAAC+B,QAAQ,GAAG,IAAIpM,MAAM,CAAC;MAAES,QAAQ;AAAEpF,MAAAA,KAAK,EAAEtC,cAAc;AAAE+H,MAAAA,MAAAA;AAAM,KAAE,CAAC,CAAA;AACvE,IAAA,IAAI,CAACuL,QAAQ,GAAG,IAAIrM,MAAM,CAAC;MAAES,QAAQ;AAAEpF,MAAAA,KAAK,EAAElC,mBAAmB;AAAE2H,MAAAA,MAAAA;AAAM,KAAE,CAAC,CAAA;AAC5E,IAAA,IAAI,CAAC2M,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IAC1B,IAAI,CAACF,UAAU,GAAG,CAAC,CAAA;IACnB,IAAI,CAACxB,QAAQ,GAAG,KAAK,CAAA;IACrB,IAAI,CAACoB,qBAAqB,GAAG,KAAK,CAAA;IAClC,IAAI,CAACa,WAAW,EAAE,CAAA;AACpB,GAAA;AAEOzJ,EAAAA,OAAOA,GAAA;IACZ,IAAI,CAACiF,OAAO,EAAE,CAAA;AACd,IAAA,IAAI,CAACuE,WAAW,CAACvJ,GAAG,EAAE,CAAA;AACtB,IAAA,IAAI,CAAC8H,WAAW,CAAC9H,GAAG,EAAE,CAAA;AACtB,IAAA,IAAI,CAAC2H,cAAc,CAAC3H,GAAG,EAAE,CAAA;IACzB,IAAI,CAACA,GAAG,EAAE,CAAA;IACV,IAAI,CAAC2I,qBAAqB,GAAG,KAAK,CAAA;AACpC,GAAA;AAEA;;AAEG;EACIlM,MAAMA,CAACM,KAAa,EAAA;AACzB,IAAA,IAAI,CAAC,IAAI,CAACwK,QAAQ,EAAE,OAAA;AAEpB,IAAA,MAAMkC,OAAO,GAAG,IAAI,CAAC7B,QAAQ,CAAA;AAC7B,IAAA,MAAM8B,OAAO,GAAG,IAAI,CAAC7B,QAAQ,CAAA;AAC7B,IAAA,MAAM8B,aAAa,GAAG,IAAI,CAAChC,cAAc,CAAA;AAEzC,IAAA,IAAI,CAAC,IAAI,CAACa,gBAAgB,EAAE;MAC1BmB,aAAa,CAAClN,MAAM,EAAE,CAAA;AACvB,KAAA;AAED,IAAA,IAAI,CAAC,IAAI,CAAC2L,aAAa,EAAE;AACvBsB,MAAAA,OAAO,CAACjN,MAAM,CAACM,KAAK,CAAC,CAAA;AACtB,KAAA;AAED,IAAA,IAAI,CAAC,IAAI,CAACuL,WAAW,EAAE;AACrBmB,MAAAA,OAAO,CAAChN,MAAM,CAACM,KAAK,CAAC,CAAA;AACtB,KAAA;AACH,GAAA;AAEA;;AAEG;AACI6M,EAAAA,WAAWA,CAACxM,MAAc,EAAEc,IAAY,EAAA;AAC7C,IAAA,MAAMQ,QAAQ,GAAGtB,MAAM,CAACqE,WAAW,CAACvD,IAAI,CAAC,CAAA;AACzC,IAAA,MAAMU,UAAU,GAAGxB,MAAM,CAACgF,aAAa,CAAClE,IAAI,CAAC,CAAA;AAE7C,IAAA,IAAI,CAAC0J,QAAQ,CAAC3K,QAAQ,CAACyB,QAAQ,CAAClK,GAAG,EAAEkK,QAAQ,CAAChK,GAAG,CAAC,CAAA;AAClD,IAAA,IAAI,CAACmT,QAAQ,CAAC5K,QAAQ,CAAC2B,UAAU,CAACpK,GAAG,EAAEoK,UAAU,CAAClK,GAAG,CAAC,CAAA;AACxD,GAAA;AAEA;;AAEG;EACImV,YAAYA,CAACxc,GAAW,EAAA;IAC7B,IAAI,CAAC0b,UAAU,GAAG1b,GAAG,CAAA;AACvB,GAAA;AAEA;;;;;;;AAOG;EACI4S,MAAMA,CAAC6J,IAAY,EAAE3R,MAAc,EAAE+H,KAAa,EAAEC,MAAc,EAAA;IACvE,MAAM4J,IAAI,GAAG9R,aAAa,CAAC6R,IAAI,GAAG3V,UAAU,EAAEgE,MAAM,CAAC,GAAG/D,UAAU,CAAA;IAElE,IAAI,CAAC6U,YAAY,CAAC,CAAC,CAAC,GAAGa,IAAI,GAAG5J,KAAK,CAAA;IACnC,IAAI,CAAC+I,YAAY,CAAC,CAAC,CAAC,GAAGc,IAAI,GAAG5J,MAAM,CAAA;AACtC,GAAA;AAEO2E,EAAAA,MAAMA,GAAA;IACX,IAAI,IAAI,CAACyC,QAAQ,EAAE,OAAA;AAEnB,IAAA,MAAMxC,OAAO,GAAG,IAAI,CAACuE,UAAU,CAAA;AAE/B,IAAA,IAAI,CAACC,WAAW,CAACzE,MAAM,CAACC,OAAO,CAAC,CAAA;AAChC,IAAA,IAAI,CAAC+C,WAAW,CAAChD,MAAM,CAACC,OAAO,CAAC,CAAA;AAChC,IAAA,IAAI,CAAC4C,cAAc,CAAC7C,MAAM,CAACC,OAAO,CAAC,CAAA;IAEnC,IAAI,CAACwC,QAAQ,GAAG,IAAI,CAAA;IACpB,IAAI,CAACE,cAAc,GAAG,KAAK,CAAA;AAE3B,IAAA,IAAI,CAACtG,OAAO,CAACnN,cAAc,CAACC,MAAM,EAAE;AAAE+V,MAAAA,OAAO,EAAE,IAAI;AAAEC,MAAAA,YAAY,EAAE,IAAA;AAAI,KAAE,CAAC,CAAA;AAC5E,GAAA;AAEOjF,EAAAA,OAAOA,GAAA;AACZ,IAAA,IAAI,CAAC,IAAI,CAACuC,QAAQ,EAAE,OAAA;AAEpB,IAAA,IAAI,CAACgC,WAAW,CAACvE,OAAO,EAAE,CAAA;AAC1B,IAAA,IAAI,CAAC8C,WAAW,CAAC9C,OAAO,EAAE,CAAA;AAC1B,IAAA,IAAI,CAAC2C,cAAc,CAAC3C,OAAO,EAAE,CAAA;IAE7B,IAAI,CAACuC,QAAQ,GAAG,KAAK,CAAA;AAErB,IAAA,IAAI,CAACpG,OAAO,CAACnN,cAAc,CAACE,OAAO,EAAE;AAAE+V,MAAAA,YAAY,EAAE,IAAA;AAAI,KAAE,CAAC,CAAA;AAC9D,GAAA;EAEOC,IAAIA,CAAC9M,MAAc,EAAA;IACxB,IAAI,CAACwM,WAAW,CAACxM,MAAM,EAAEA,MAAM,CAACc,IAAI,CAAC,CAAA;IAErC,IAAI,CAAC0J,QAAQ,CAACpL,KAAK,CAACY,MAAM,CAACzD,GAAG,CAAC,CAAA;IAC/B,IAAI,CAACkO,QAAQ,CAACrL,KAAK,CAACY,MAAM,CAACxD,KAAK,CAAC,CAAA;AACnC,GAAA;AAEQ4P,EAAAA,WAAWA,GAAA;AACjB,IAAA,MAAMW,UAAU,GAAG,IAAI,CAACZ,WAAW,CAAA;AACnC,IAAA,MAAMa,UAAU,GAAG,IAAI,CAACtC,WAAW,CAAA;AACnC,IAAA,MAAM6B,aAAa,GAAG,IAAI,CAAChC,cAAc,CAAA;IAEzCwC,UAAU,CAACE,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;IAC7DyB,UAAU,CAACE,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAACiV,SAAS,CAAC,CAAA;IACpDsB,UAAU,CAACE,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;IAEzDe,UAAU,CAACC,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;IAC7D0B,UAAU,CAACC,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAACiV,SAAS,CAAC,CAAA;IACpDuB,UAAU,CAACC,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;IAEzDM,aAAa,CAACU,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;IAChEiB,aAAa,CAACU,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAACiV,SAAS,CAAC,CAAA;IACvDc,aAAa,CAACU,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;AAC9D,GAAA;AAsDD;;AChZD;;;AAGG;AAMH,MAAMiB,UAAW,SAAQhM,SAA0C,CAAA;EAMjE,IAAW4G,UAAUA;IAAK,OAAO,IAAI,CAACC,WAAW,CAAA;AAAE,GAAA;EACnD,IAAWD,UAAUA,CAAC7X,GAAY,EAAI;IAAA,IAAI,CAAC8X,WAAW,GAAG9X,GAAG,CAAA;AAAE,GAAA;AAE9DlB,EAAAA,WAAAA,GAAA;AACE,IAAA,KAAK,EAAE,CAAA;AA2BD,IAAA,IAAA,CAAAoe,QAAQ,GAAI5G,GAAe,IAAI;AACrC,MAAA,MAAMuB,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AAEnC,MAAA,IAAIxB,GAAG,CAACgB,MAAM,KAAK,CAAC,IAAIO,UAAU,EAAE,OAAA;MAEpCvB,GAAG,CAACG,cAAc,EAAE,CAAA;MACpBH,GAAG,CAAC6G,eAAe,EAAE,CAAA;AAErB,MAAA,IAAI,IAAI,CAACC,WAAW,GAAG,CAAC,EAAE;AACxB,QAAA,IAAI,CAACtJ,OAAO,CAACnN,cAAc,CAACvB,WAAW,EAAE;AACvC6R,UAAAA,QAAQ,EAAEX,GAAG;AACbY,UAAAA,OAAO,EAAE,KAAK;AACdC,UAAAA,UAAU,EAAE,KAAA;AACb,SAAA,CAAC,CAAA;AACH,OAAA,MAAM;QACL,IAAI,CAACkG,WAAW,EAAE,CAAA;AACnB,OAAA;MAED,MAAM3N,KAAK,GAAG,IAAI,CAAC4N,UAAU,GAAGhH,GAAG,CAACgB,MAAM,CAAA;AAE1C,MAAA,IAAI,CAACxD,OAAO,CAACnN,cAAc,CAACJ,MAAM,EAAE;QAClCmJ,KAAK;AACLwH,QAAAA,OAAO,EAAE,KAAK;AACdC,QAAAA,UAAU,EAAE,KAAA;AACb,OAAA,CAAC,CAAA;AAEF,MAAA,IAAI,CAACiG,WAAW,GAAGxR,MAAM,CAAC2R,UAAU,CAAC,MAAK;AACxC,QAAA,IAAI,CAACzJ,OAAO,CAACnN,cAAc,CAACtB,SAAS,EAAE;AACrC6R,UAAAA,OAAO,EAAE,KAAK;AACdC,UAAAA,UAAU,EAAE,KAAK;AACjBK,UAAAA,SAAS,EAAE,KAAA;AACZ,SAAA,CAAC,CAAA;AACF,QAAA,IAAI,CAAC4F,WAAW,GAAG,CAAC,CAAC,CAAA;OACtB,EAAEnW,0BAA0B,CAAC,CAAA;KAC/B,CAAA;IA3DC,IAAI,CAACsP,GAAG,GAAG,IAAI,CAAA;IACf,IAAI,CAAC+G,UAAU,GAAG,IAAI,CAAA;IACtB,IAAI,CAACxF,WAAW,GAAG,KAAK,CAAA;AACxB,IAAA,IAAI,CAACsF,WAAW,GAAG,CAAC,CAAC,CAAA;AACvB,GAAA;EAEO3F,MAAMA,CAACC,OAAoB,EAAA;IAChC,IAAI,IAAI,CAACnB,GAAG,EAAE,OAAA;AAEdmB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACvH,KAAK,EAAE,IAAI,CAACic,QAAQ,EAAE;AAAE3E,MAAAA,OAAO,EAAE,KAAK;AAAEiF,MAAAA,OAAO,EAAE,KAAA;AAAO,KAAA,CAAC,CAAA;IAEjG,IAAI,CAACjH,GAAG,GAAGmB,OAAO,CAAA;IAClB,IAAI,CAAC2F,WAAW,EAAE,CAAA;AACpB,GAAA;AAEO1F,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMD,OAAO,GAAG,IAAI,CAACnB,GAAG,CAAA;IACxB,IAAI,CAACmB,OAAO,EAAE,OAAA;AAEdA,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACvH,KAAK,EAAE,IAAI,CAACic,QAAQ,EAAE,KAAK,CAAC,CAAA;IAEvE,IAAI,CAAC3G,GAAG,GAAG,IAAI,CAAA;IACf,IAAI,CAAC8G,WAAW,EAAE,CAAA;AACpB,GAAA;AAsCQA,EAAAA,WAAWA,GAAA;AACjBzR,IAAAA,MAAM,CAAC6R,YAAY,CAAC,IAAI,CAACL,WAAW,CAAC,CAAA;AACrC,IAAA,IAAI,CAACA,WAAW,GAAG,CAAC,CAAC,CAAA;AACvB,GAAA;AACD;;ACtFD;;;AAGG;AAMH,MAAMM,UAAW,SAAQzM,SAA0C,CAAA;AAMjEnS,EAAAA,WAAAA,GAAA;AACE,IAAA,KAAK,EAAE,CAAA;AA6BD,IAAA,IAAA,CAAAsZ,YAAY,GAAI9B,GAAe,IAAI;AACzC,MAAA,MAAM0B,OAAO,GAAG1B,GAAG,CAAC0B,OAAO,CAAA;AAC3B,MAAA,IAAIA,OAAO,CAACtN,MAAM,KAAK,CAAC,EAAE,OAAA;AAE1B,MAAA,IAAI,CAAC4L,GAAG,CAAC+B,UAAU,EAAE,OAAA;MAErB/B,GAAG,CAACG,cAAc,EAAE,CAAA;MACpBH,GAAG,CAAC6G,eAAe,EAAE,CAAA;AAErB,MAAA,MAAMQ,YAAY,GAAG,IAAI,CAACC,aAAa,CAAA;AAEvC,MAAA,MAAMC,IAAI,GAAG,CACX7F,OAAO,CAAC,CAAC,CAAC,CAAC8F,KAAK,GAAG9F,OAAO,CAAC,CAAC,CAAC,CAAC8F,KAAK,EACnC9F,OAAO,CAAC,CAAC,CAAC,CAAC+F,KAAK,GAAG/F,OAAO,CAAC,CAAC,CAAC,CAAC+F,KAAK,CACpC,CAAA;AAED,MAAA,MAAMC,QAAQ,GAAGlY,IAAI,CAACoI,IAAI,CAAC2P,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACP,UAAU,CAAA;MACnF,MAAM5N,KAAK,GAAG,IAAI,CAACyI,aAAa,GAC5B,CAAC,GACD6F,QAAQ,GAAGL,YAAY,CAAA;MAE3B,IAAI,IAAI,CAACxF,aAAa,EAAE;AACtB,QAAA,IAAI,CAACrE,OAAO,CAACnN,cAAc,CAACvB,WAAW,EAAE;AACvC6R,UAAAA,QAAQ,EAAEX,GAAG;AACbY,UAAAA,OAAO,EAAE,IAAI;AACbC,UAAAA,UAAU,EAAE,KAAA;AACb,SAAA,CAAC,CAAA;AACH,OAAA;MAED,IAAI,CAACyG,aAAa,GAAGI,QAAQ,CAAA;MAC7B,IAAI,CAAC7F,aAAa,GAAG,KAAK,CAAA;AAE1B,MAAA,IAAI,CAACrE,OAAO,CAACnN,cAAc,CAACJ,MAAM,EAAE;QAClCmJ,KAAK;AACLwH,QAAAA,OAAO,EAAE,IAAI;AACbC,QAAAA,UAAU,EAAE,KAAA;AACb,OAAA,CAAC,CAAA;KACH,CAAA;AAEO,IAAA,IAAA,CAAAmB,WAAW,GAAIhC,GAAe,IAAI;AACxC,MAAA,IAAIA,GAAG,CAAC0B,OAAO,CAACtN,MAAM,KAAK,CAAC,EAAE,OAAA;AAE9B,MAAA,IAAI,CAAC,IAAI,CAACyN,aAAa,EAAE;AACvB,QAAA,IAAI,CAACrE,OAAO,CAACnN,cAAc,CAACtB,SAAS,EAAE;AACrC6R,UAAAA,OAAO,EAAE,IAAI;AACbC,UAAAA,UAAU,EAAE,KAAK;AACjBK,UAAAA,SAAS,EAAE,KAAA;AACZ,SAAA,CAAC,CAAA;AACH,OAAA;AAED,MAAA,IAAI,CAACoG,aAAa,GAAG,CAAC,CAAC,CAAA;MACvB,IAAI,CAACzF,aAAa,GAAG,IAAI,CAAA;KAC1B,CAAA;IA/EC,IAAI,CAAC5B,GAAG,GAAG,IAAI,CAAA;AACf,IAAA,IAAI,CAAC+G,UAAU,GAAG,CAAC,GAAG,CAAA;AACtB,IAAA,IAAI,CAACM,aAAa,GAAG,CAAC,CAAC,CAAA;IACvB,IAAI,CAACzF,aAAa,GAAG,IAAI,CAAA;AAC3B,GAAA;EAEOV,MAAMA,CAACC,OAAoB,EAAA;IAChC,IAAI,IAAI,CAACnB,GAAG,EAAE,OAAA;AAEdmB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACzH,UAAU,EAAE,IAAI,CAACqX,YAAY,EAAE;AAAEG,MAAAA,OAAO,EAAE,KAAK;AAAEiF,MAAAA,OAAO,EAAE,KAAA;AAAO,KAAA,CAAC,CAAA;AAC1G9F,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACxH,SAAS,EAAE,IAAI,CAACsX,WAAW,CAAC,CAAA;IAEpE,IAAI,CAAC/B,GAAG,GAAGmB,OAAO,CAAA;AAClB,IAAA,IAAI,CAACkG,aAAa,GAAG,CAAC,CAAC,CAAA;IACvB,IAAI,CAACzF,aAAa,GAAG,IAAI,CAAA;AAC3B,GAAA;AAEOR,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMD,OAAO,GAAG,IAAI,CAACnB,GAAG,CAAA;IACxB,IAAI,CAACmB,OAAO,EAAE,OAAA;AAEdA,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACzH,UAAU,EAAE,IAAI,CAACqX,YAAY,EAAE,KAAK,CAAC,CAAA;AAChFV,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACxH,SAAS,EAAE,IAAI,CAACsX,WAAW,CAAC,CAAA;IAEvE,IAAI,CAAC/B,GAAG,GAAG,IAAI,CAAA;AACjB,GAAA;AAuDD;;AClGD;;;AAGE;AAqCF;;;;AAIG;AACH,MAAM0H,WAAY,SAAQhN,SAA4B,CAAA;AAYpD;;AAEG;EACH,IAAWgJ,OAAOA;IAAK,OAAO,IAAI,CAACC,QAAQ,CAAA;AAAE,GAAA;AAC7C;;AAEG;EACH,IAAWC,aAAaA;IAAK,OAAO,IAAI,CAACC,cAAc,CAAA;AAAE,GAAA;AACzD;;AAEG;EACH,IAAWC,SAASA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACvK,OAAO,CAACpB,SAAS,CAAA;AAAE,GAAA;AACxD;;;;;AAKG;EACH,IAAWmC,IAAIA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACf,OAAO,CAAC9P,GAAG,CAAA;AAAE,GAAA;AAC7C;;AAEG;EACH,IAAW6X,UAAUA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACqG,WAAW,CAACrG,UAAU,CAAA;AAAE,GAAA;EAC9D,IAAWA,UAAUA,CAAC7X,GAAY,EAAA;AAChC,IAAA,IAAI,CAACke,WAAW,CAACrG,UAAU,GAAG7X,GAAG,CAAA;AACnC,GAAA;AACA;;AAEG;EACH,IAAWwJ,KAAKA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACsG,OAAO,CAACtG,KAAK,CAAA;AAAE,GAAA;AAEhD;;;;;AAKG;EACH,IAAWqS,KAAKA;IAAK,OAAO,IAAI,CAACsC,MAAM,CAAA;AAAE,GAAA;EACzC,IAAWtC,KAAKA,CAAC7b,GAAgC,EAAI;IAAA,IAAI,CAACme,MAAM,GAAGne,GAAG,CAAA;AAAE,GAAA;AAExE;;;;;AAKG;EACH,IAAW4O,QAAQA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACkB,OAAO,CAAClB,QAAQ,CAAA;AAAE,GAAA;AAEtD;;;;;;AAMG;EACH,IAAWK,MAAMA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACa,OAAO,CAACb,MAAM,CAAA;AAAE,GAAA;AAElD;;;;;;AAMG;AACHnQ,EAAAA,WAAAA,CAAmBsc,SAAsB,EAAEjB,aAAsB,EAAE;AACjE0B,IAAAA,KAAK,GAAG,CAAC;AACTjN,IAAAA,QAAQ,GAAG3H,0BAA0B;AACrCgI,IAAAA,MAAM,GAAGjI,cAAAA;MACsB,EAAE,EAAA;AACjC,IAAA,KAAK,EAAE,CAAA;AAgFD,IAAA,IAAA,CAAAqU,aAAa,GAAI/E,GAA2D,IAAI;MACtF,IAAI,CAACxC,OAAO,CAACnN,cAAc,CAACvB,WAAW,EAClCnG,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EAAApD,GAAG,CACN,EAAA;AAAAiF,QAAAA,SAAS,EAAE,MAAA;SACX,CAAA;KACH,CAAA;IAEO,IAAA,CAAAC,SAAS,GAAG,CAAC;AAAE9L,MAAAA,KAAAA;AAAK,KAAqD,KAAI;AACnF,MAAA,MAAMmM,KAAK,GAAG,IAAI,CAACsC,MAAM,CAAA;AACzB,MAAA,MAAMC,WAAW,GAAG1O,KAAK,GAAGmM,KAAK,CAAA;AAEjC,MAAA,IAAI,CAAC/L,OAAO,CAACH,gBAAgB,CAACyO,WAAW,CAAC,CAAA;KAC3C,CAAA;AAEO,IAAA,IAAA,CAAApC,WAAW,GAAI1F,GAAyD,IAAI;MAClF,IAAI,CAACxC,OAAO,CAACnN,cAAc,CAACtB,SAAS,EAChCpG,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EAAApD,GAAG,CACN,EAAA;AAAAiF,QAAAA,SAAS,EAAE,MAAA;SACX,CAAA;KACH,CAAA;IAjGC,IAAI,CAAC4C,MAAM,GAAGtC,KAAK,CAAA;IAEnB,IAAI,CAACI,UAAU,GAAGb,SAAS,CAAA;IAC3B,IAAI,CAAChB,cAAc,GAAGD,aAAa,CAAA;AACnC,IAAA,IAAI,CAAC+D,WAAW,GAAG,IAAIjB,UAAU,EAAE,CAAA;AACnC,IAAA,IAAI,CAACoB,WAAW,GAAG,IAAIX,UAAU,EAAE,CAAA;AACnC,IAAA,IAAI,CAAC5N,OAAO,GAAG,IAAI3B,MAAM,CAAC;MACxBS,QAAQ;MACRK,MAAM;AACNzF,MAAAA,KAAK,EAAEtC,cAAAA;AACR,KAAA,CAAC,CAAA;IACF,IAAI,CAACgT,QAAQ,GAAG,KAAK,CAAA;IAErB,IAAI,CAACiC,WAAW,EAAE,CAAA;AACpB,GAAA;AAEOzJ,EAAAA,OAAOA,GAAA;IACZ,IAAI,CAACiF,OAAO,EAAE,CAAA;AACd,IAAA,IAAI,CAACuG,WAAW,CAACvL,GAAG,EAAE,CAAA;AACtB,IAAA,IAAI,CAAC0L,WAAW,CAAC1L,GAAG,EAAE,CAAA;IACtB,IAAI,CAACA,GAAG,EAAE,CAAA;AACZ,GAAA;AAEA;;AAEG;EACIvD,MAAMA,CAACM,KAAa,EAAA;AACzB,IAAA,IAAI,CAAC,IAAI,CAACwK,QAAQ,EAAE,OAAA;AAEpB,IAAA,MAAMxJ,MAAM,GAAG,IAAI,CAACZ,OAAO,CAAA;AAC3BY,IAAAA,MAAM,CAACtB,MAAM,CAACM,KAAK,CAAC,CAAA;AACtB,GAAA;AAEO+H,EAAAA,MAAMA,GAAA;IACX,IAAI,IAAI,CAACyC,QAAQ,EAAE,OAAA;AAEnB,IAAA,MAAMxC,OAAO,GAAG,IAAI,CAACuE,UAAU,CAAA;AAC/B,IAAA,IAAI,CAACiC,WAAW,CAACzG,MAAM,CAACC,OAAO,CAAC,CAAA;AAChC,IAAA,IAAI,CAAC2G,WAAW,CAAC5G,MAAM,CAACC,OAAO,CAAC,CAAA;IAEhC,IAAI,CAACwC,QAAQ,GAAG,IAAI,CAAA;IACpB,IAAI,CAACE,cAAc,GAAG,KAAK,CAAA;AAE3B,IAAA,IAAI,CAACtG,OAAO,CAACnN,cAAc,CAACC,MAAM,EAAE;AAAE+V,MAAAA,OAAO,EAAE,IAAI;AAAEC,MAAAA,YAAY,EAAE,KAAA;AAAK,KAAE,CAAC,CAAA;AAC7E,GAAA;AAEOjF,EAAAA,OAAOA,GAAA;AACZ,IAAA,IAAI,CAAC,IAAI,CAACuC,QAAQ,EAAE,OAAA;AAEpB,IAAA,IAAI,CAACgE,WAAW,CAACvG,OAAO,EAAE,CAAA;AAC1B,IAAA,IAAI,CAAC0G,WAAW,CAAC1G,OAAO,EAAE,CAAA;IAE1B,IAAI,CAACuC,QAAQ,GAAG,KAAK,CAAA;AAErB,IAAA,IAAI,CAACpG,OAAO,CAACnN,cAAc,CAACE,OAAO,EAAE;AAAE+V,MAAAA,YAAY,EAAE,KAAA;AAAK,KAAE,CAAC,CAAA;AAC/D,GAAA;EAEOC,IAAIA,CAAC9M,MAAc,EAAA;AACxB,IAAA,MAAMW,MAAM,GAAG,IAAI,CAACZ,OAAO,CAAA;AAC3B,IAAA,MAAMtG,KAAK,GAAGuG,MAAM,CAACsF,YAAY,EAAE,CAAA;IAEnC3E,MAAM,CAACd,QAAQ,CAACpG,KAAK,CAACrC,GAAG,EAAEqC,KAAK,CAACnC,GAAG,CAAC,CAAA;AACrCqJ,IAAAA,MAAM,CAACvB,KAAK,CAAC3F,KAAK,CAACkM,OAAO,CAAC,CAAA;AAC7B,GAAA;AAEQyG,EAAAA,WAAWA,GAAA;AACjB,IAAA,MAAMmC,UAAU,GAAG,IAAI,CAACJ,WAAW,CAAA;AACnC,IAAA,MAAMK,UAAU,GAAG,IAAI,CAACF,WAAW,CAAA;IAEnCC,UAAU,CAACtB,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;IAC7DiD,UAAU,CAACtB,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAACiV,SAAS,CAAC,CAAA;IACpD8C,UAAU,CAACtB,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;IAEzDuC,UAAU,CAACvB,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;IAC7DkD,UAAU,CAACvB,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAACiV,SAAS,CAAC,CAAA;IACpD+C,UAAU,CAACvB,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;AAC3D,GAAA;AAsBD;;AClOD;;;AAGG;AAQI,MAAMwC,eAAe,GAAG;AAC7BC,EAAAA,WAAW,EAAE,CAAC;AACdC,EAAAA,iBAAiB,EAAE,CAAC;AACpBC,EAAAA,gBAAgB,EAAE,CAAA;CACV,CAAA;AAEVH,eAAe,CAACA,eAAe,CAACC,WAAW,CAAC,GAAG;AAC7CG,EAAAA,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrBC,EAAAA,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;CACpB,CAAA;AACDL,eAAe,CAACA,eAAe,CAACE,iBAAiB,CAAC,GAAG;AACnDE,EAAAA,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrBC,EAAAA,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;CACpB,CAAA;AACDL,eAAe,CAACA,eAAe,CAACG,gBAAgB,CAAC,GAAG;AAClDC,EAAAA,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrBC,EAAAA,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;CACpB,CAAA;AAED,MAAMC,SAAU,SAAQ7N,SAAuE,CAAA;EAiB7F,IAAWgJ,OAAOA;IAAK,OAAO,IAAI,CAACC,QAAQ,CAAA;AAAE,GAAA;EAC7C,IAAW6E,kBAAkBA;IAAK,OAAO,IAAI,CAACC,mBAAmB,CAAA;AAAE,GAAA;EACnE,IAAWC,UAAUA;IAAK,OAAO,IAAI,CAACC,WAAW,CAAA;AAAE,GAAA;EACnD,IAAWD,UAAUA,CAACjf,GAAY,EAAI;IAAA,IAAI,CAACkf,WAAW,GAAGlf,GAAG,CAAA;AAAE,GAAA;AAE9DlB,EAAAA,WAAAA,GAAA;AACE,IAAA,KAAK,EAAE,CAAA;AA+DD,IAAA,IAAA,CAAAqgB,oBAAoB,GAAI7I,GAA2B,IAAI;AAC7D,MAAA,MAAM8I,eAAe,GAAG,IAAI,CAACC,YAAY,CAAA;MACzC,MAAM;QAAEC,KAAK;QAAEC,IAAI;AAAEC,QAAAA,KAAAA;AAAK,OAAE,GAAGlJ,GAAG,CAAA;MAElC,IACEgJ,KAAK,IAAI,IAAI,IACVC,IAAI,IAAI,IAAI,IACZC,KAAK,IAAI,IAAI,EAChB,OAAA;MAEFJ,eAAe,CAACE,KAAK,GAAGA,KAAK,CAAA;MAC7BF,eAAe,CAACG,IAAI,GAAGA,IAAI,CAAA;MAC3BH,eAAe,CAACI,KAAK,GAAGA,KAAK,CAAA;MAE7B,IAAI,CAACR,mBAAmB,GAAG,IAAI,CAAA;MAE/B,IAAI,IAAI,CAACS,eAAe,EAAE;QACxB,IAAI,CAACA,eAAe,GAAG,KAAK,CAAA;QAC5B,IAAI,CAACC,gBAAgB,EAAE,CAAA;AACxB,OAAA;KACF,CAAA;IAoCO,IAAwB,CAAAC,wBAAA,GAAG,MAAK;AACtC,MAAA,IAAI/T,MAAM,CAACgU,MAAM,IAAIhU,MAAM,CAACgU,MAAM,CAACC,WAAW,IAAIjU,MAAM,CAACgU,MAAM,CAACC,WAAW,CAACC,KAAK,KAAKC,SAAS,EAAE;AAC/F,QAAA,IAAI,CAACC,kBAAkB,GAAGJ,MAAM,CAACC,WAAW,CAACC,KAAK,CAAA;AACnD,OAAA,MAAM,IAAIlU,MAAM,CAACiU,WAAW,KAAKE,SAAS,EAAE;AAC3C,QAAA,IAAI,CAACC,kBAAkB,GAAGpU,MAAM,CAACiU,WAAW,IAAI,CAAC,GAC/CjU,MAAM,CAACiU,WAAW,GAAG,GAAG,GAAGjU,MAAM,CAACiU,WAAW,CAAA;AAChD,OAAA,MAAM;QACL,IAAI,CAACG,kBAAkB,GAAG,CAAC,CAAA;AAC5B,OAAA;KACF,CAAA;AA9HC,IAAA,IAAI,CAAC/S,UAAU,GAAGR,IAAI,CAACmE,MAAM,EAAE,CAAA;IAE/B,IAAI,CAACyO,YAAY,GAAG;AAClBC,MAAAA,KAAK,EAAE,CAAC;AACRC,MAAAA,IAAI,EAAE,EAAE;AACRC,MAAAA,KAAK,EAAE,CAAA;KACR,CAAA;IACD,IAAI,CAACS,UAAU,GAAG,CAAC,CAAA;IACnB,IAAI,CAACC,UAAU,GAAG,CAAC,CAAA;IACnB,IAAI,CAAClB,mBAAmB,GAAG,KAAK,CAAA;IAChC,IAAI,CAACgB,kBAAkB,GAAG,CAAC,CAAA;IAC3B,IAAI,CAACP,eAAe,GAAG,IAAI,CAAA;IAC3B,IAAI,CAACvF,QAAQ,GAAG,KAAK,CAAA;AACvB,GAAA;AAEOzC,EAAAA,MAAMA,GAAA;IACX,IAAI,IAAI,CAACyC,QAAQ,EAAE,OAAA;AAEnBtO,IAAAA,MAAM,CAACkL,gBAAgB,CAACtO,QAAc,CAACnG,kBAAkB,EAAE,IAAI,CAAC8c,oBAAoB,CAAC,CAAA;AACrFvT,IAAAA,MAAM,CAACkL,gBAAgB,CAACtO,QAAc,CAACjG,kBAAkB,EAAE,IAAI,CAACod,wBAAwB,CAAC,CAAA;IAEzF,IAAI,CAACA,wBAAwB,EAAE,CAAA;IAC/B,IAAI,CAACX,mBAAmB,GAAG,KAAK,CAAA;IAChC,IAAI,CAACS,eAAe,GAAG,IAAI,CAAA;IAC3B,IAAI,CAACvF,QAAQ,GAAG,IAAI,CAAA;AACtB,GAAA;AAEOvC,EAAAA,OAAOA,GAAA;AACZ,IAAA,IAAI,CAAC,IAAI,CAACuC,QAAQ,EAAE,OAAA;AAEpBtO,IAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAACnG,kBAAkB,EAAE,IAAI,CAAC8c,oBAAoB,CAAC,CAAA;AACxFvT,IAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAACjG,kBAAkB,EAAE,IAAI,CAACod,wBAAwB,CAAC,CAAA;IAE5F,IAAI,CAACzF,QAAQ,GAAG,KAAK,CAAA;AACvB,GAAA;AAEO9K,EAAAA,MAAMA,GAAA;IACX,IAAI,CAAC+Q,eAAe,EAAE,CAAA;IACtB,IAAI,CAACnB,mBAAmB,GAAG,KAAK,CAAA;AAClC,GAAA;AAEOoB,EAAAA,YAAYA,GAAA;AACjB,IAAA,IAAI,CAAC,IAAI,CAACpB,mBAAmB,EAAE;MAC7B,OAAO;AACLzS,QAAAA,KAAK,EAAE,CAAC;AACRD,QAAAA,GAAG,EAAE,CAAA;OACN,CAAA;AACF,KAAA;IAED,MAAM+T,YAAY,GAAG5T,IAAI,CAAC0G,KAAK,CAAC,IAAI,CAAClG,UAAU,CAAC,CAAA;IAEhD,IAAI,CAACkT,eAAe,EAAE,CAAA;IACtB,IAAI,CAACnB,mBAAmB,GAAG,KAAK,CAAA;IAEhC,OAAO,IAAI,CAACsB,aAAa,CAACD,YAAY,EAAE,IAAI,CAACpT,UAAU,CAAC,CAAA;AAC1D,GAAA;EAEOsT,kBAAkBA,CAACjU,GAAW,EAAA;IACnC,IAAI,CAAC2T,UAAU,GAAG3T,GAAG,CAAA;AACvB,GAAA;AAwBQoT,EAAAA,gBAAgBA,GAAA;AACtB,IAAA,MAAMc,SAAS,GAAG,IAAI,CAACP,UAAU,CAAA;AACjC,IAAA,MAAMtP,QAAQ,GAAG,IAAI,CAAC1D,UAAU,CAAA;IAEhC,IAAI,CAACiT,UAAU,GAAG,CAAC,CAAA;IACnB,IAAI,CAACC,eAAe,EAAE,CAAA;IAEtB,MAAM;AAAE7T,MAAAA,GAAG,EAAEmU,SAAAA;AAAS,KAAE,GAAGzT,WAAW,CAAC2D,QAAQ,CAAC,CAAA;AAChD,IAAA,IAAI,CAACuP,UAAU,GAAGO,SAAS,GAAGD,SAAS,CAAA;IACvC,IAAI,CAACL,eAAe,EAAE,CAAA;IAEtB,IAAI,CAACV,eAAe,GAAG,KAAK,CAAA;AAC9B,GAAA;AAEQU,EAAAA,eAAeA,GAAA;AACrB,IAAA,MAAMxP,QAAQ,GAAG,IAAI,CAAC1D,UAAU,CAAA;IAChC,MAAM;MAAEqS,KAAK;MAAEC,IAAI;AAAEC,MAAAA,KAAAA;KAAO,GAAG,IAAI,CAACH,YAAY,CAAA;AAEhD5S,IAAAA,IAAI,CAACC,QAAQ,CAACiE,QAAQ,CAAC,CAAA;AACvBlE,IAAAA,IAAI,CAACI,OAAO,CAAC8D,QAAQ,EAAEA,QAAQ,EAAE,CAAC2O,KAAK,GAAG,IAAI,CAACY,UAAU,IAAIpZ,UAAU,CAAC,CAAA;IACxE2F,IAAI,CAACK,OAAO,CAAC6D,QAAQ,EAAEA,QAAQ,EAAE4O,IAAI,GAAGzY,UAAU,CAAC,CAAA;IACnD2F,IAAI,CAACM,OAAO,CAAC4D,QAAQ,EAAEA,QAAQ,EAAE,CAAC6O,KAAK,GAAG1Y,UAAU,CAAC,CAAA;AAErD,IAAA,MAAM8Y,MAAM,GAAGnT,IAAI,CAACmE,MAAM,EAAE,CAAA;IAC5B,MAAM8P,WAAW,GAAG,CAAC,IAAI,CAACV,kBAAkB,GAAG,GAAG,GAAGlZ,UAAU,CAAA;IAC/D,MAAM6Z,KAAK,GAAGlU,IAAI,CAACqB,UAAU,CAAC,CAAChI,IAAI,CAACoI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEpI,IAAI,CAACoI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IAEpEzB,IAAI,CAACmU,GAAG,CAAChB,MAAM,EAAE,CAAC,EAAE9Z,IAAI,CAACC,GAAG,CAAC2a,WAAW,CAAC,EAAE,CAAC,EAAE5a,IAAI,CAAC+a,GAAG,CAACH,WAAW,CAAC,CAAC,CAAA;IACpEjU,IAAI,CAACqU,QAAQ,CAACnQ,QAAQ,EAAEA,QAAQ,EAAEiP,MAAM,CAAC,CAAA;IACzCnT,IAAI,CAACqU,QAAQ,CAACnQ,QAAQ,EAAEA,QAAQ,EAAEgQ,KAAK,CAAC,CAAA;AAExClU,IAAAA,IAAI,CAAC+G,SAAS,CAAC7C,QAAQ,EAAEA,QAAQ,CAAC,CAAA;AACpC,GAAA;AAaQ2P,EAAAA,aAAaA,CAACS,QAAc,EAAEC,WAAiB,EAAA;IACrD,OAAO;MACL1U,GAAG,EAAE,IAAI,CAAC2U,YAAY,CAACF,QAAQ,EAAEC,WAAW,CAAC;AAC7CzU,MAAAA,KAAK,EAAE,IAAI,CAAC2U,cAAc,CAACH,QAAQ,EAAEC,WAAW,CAAA;KACjD,CAAA;AACH,GAAA;AAEQC,EAAAA,YAAYA,CAACE,IAAU,EAAEC,IAAU,EAAA;AACzC,IAAA,MAAMC,aAAa,GAAG,IAAI,CAACC,iBAAiB,CAACH,IAAI,EAAEC,IAAI,EAAE5C,eAAe,CAACG,gBAAgB,CAAC,CAAA;IAC1F,MAAM4C,cAAc,GAAG,IAAI,CAACD,iBAAiB,CAACH,IAAI,EAAEC,IAAI,EAAE5C,eAAe,CAACE,iBAAiB,CAAC,GACxF5Y,IAAI,CAACC,GAAG,CAAC,IAAI,CAACyb,qBAAqB,CAACJ,IAAI,CAAC,CAAC,CAAA;IAE9C,OAAOG,cAAc,GAAGF,aAAa,CAAA;AACvC,GAAA;AAEQH,EAAAA,cAAcA,CAACC,IAAU,EAAEC,IAAU,EAAA;IAC3C,OAAO,IAAI,CAACE,iBAAiB,CAACH,IAAI,EAAEC,IAAI,EAAE5C,eAAe,CAACC,WAAW,CAAC,CAAA;AACxE,GAAA;AAEQ6C,EAAAA,iBAAiBA,CAACG,KAAW,EAAEL,IAAU,EAAEM,UAAgE,EAAA;AACjH,IAAA,MAAM9C,UAAU,GAAG/Q,IAAI,CAACC,UAAU,CAChC0Q,eAAe,CAACkD,UAAU,CAAC,CAAC9C,UAAU,CAAC,CAAC,CAAC,EACzCJ,eAAe,CAACkD,UAAU,CAAC,CAAC9C,UAAU,CAAC,CAAC,CAAC,EACzCJ,eAAe,CAACkD,UAAU,CAAC,CAAC9C,UAAU,CAAC,CAAC,CAAC,CAC1C,CAAA;AACD,IAAA,MAAMC,SAAS,GAAGL,eAAe,CAACkD,UAAU,CAAC,CAAC7C,SAAS,CAAA;AAEvD,IAAA,MAAM3L,cAAc,GAAGzG,IAAI,CAAC0G,KAAK,CAACsO,KAAK,CAAC,CAAA;AACxC,IAAA,MAAME,aAAa,GAAGlV,IAAI,CAAC0G,KAAK,CAACiO,IAAI,CAAC,CAAA;AAEtC3U,IAAAA,IAAI,CAAC+G,SAAS,CAACN,cAAc,EAAEA,cAAc,CAAC,CAAA;AAC9CzG,IAAAA,IAAI,CAAC+G,SAAS,CAACmO,aAAa,EAAEA,aAAa,CAAC,CAAA;IAE5C,IAAIC,SAAS,GAAG/T,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACxC,IAAI+T,QAAQ,GAAGhU,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAEvCD,IAAI,CAACG,aAAa,CAAC4T,SAAS,EAAEA,SAAS,EAAE1O,cAAc,CAAC,CAAA;IACxDrF,IAAI,CAACG,aAAa,CAAC6T,QAAQ,EAAEA,QAAQ,EAAEF,aAAa,CAAC,CAAA;IACrD9T,IAAI,CAACG,aAAa,CAAC4Q,UAAU,EAAEA,UAAU,EAAE+C,aAAa,CAAC,CAAA;IAEzD,MAAMG,cAAc,GAAGjU,IAAI,CAACkU,GAAG,CAACnD,UAAU,EAAE/Q,IAAI,CAACmU,KAAK,CAACnU,IAAI,CAAC+C,MAAM,EAAE,EAAEgR,SAAS,EAAEC,QAAQ,CAAC,CAAC,CAAA;IAC3F,MAAMI,eAAe,GAAGH,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AAEnD;AACA;AACA;IACA,MAAMI,UAAU,GAAGrU,IAAI,CAACC,UAAU,CAAC+Q,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;AAE5E,IAAA,IAAIsD,UAAU,CAAA;AAEd,IAAA,IAAIT,UAAU,KAAKlD,eAAe,CAACG,gBAAgB,EAAE;MACnDwD,UAAU,GAAGtU,IAAI,CAACC,UAAU,CAAC,CAAC,EAAEmU,eAAe,EAAE,CAAC,CAAC,CAAA;AACpD,KAAA,MAAM;MACLE,UAAU,GAAGtU,IAAI,CAACC,UAAU,CAACmU,eAAe,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACpD,KAAA;IAEDpU,IAAI,CAACG,aAAa,CAACkU,UAAU,EAAEA,UAAU,EAAEP,aAAa,CAAC,CAAA;IACzD9T,IAAI,CAACG,aAAa,CAACmU,UAAU,EAAEA,UAAU,EAAER,aAAa,CAAC,CAAA;IAEzD,MAAMS,IAAI,GAAGF,UAAU,CAAA;IACvB,MAAMG,IAAI,GAAGF,UAAU,CAAA;AACvB,IAAA,MAAMG,IAAI,GAAGzU,IAAI,CAAC+C,MAAM,EAAE,CAAA;IAE1B/C,IAAI,CAACmU,KAAK,CAACM,IAAI,EAAEF,IAAI,EAAEC,IAAI,CAAC,CAAA;AAC5BxU,IAAAA,IAAI,CAAC2F,SAAS,CAAC8O,IAAI,EAAEA,IAAI,CAAC,CAAA;AAE1B,IAAA,MAAMC,YAAY,GAAGD,IAAI,CAAC,CAAC,CAAC,CAAA;AAC5B,IAAA,MAAME,YAAY,GAAGF,IAAI,CAAC,CAAC,CAAC,CAAA;AAC5B,IAAA,MAAMG,YAAY,GAAGH,IAAI,CAAC,CAAC,CAAC,CAAA;AAE5B;AACAT,IAAAA,QAAQ,GAAGhU,IAAI,CAACC,UAAU,CAAC+Q,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;IACpEhR,IAAI,CAACG,aAAa,CAAC6T,QAAQ,EAAEA,QAAQ,EAAEF,aAAa,CAAC,CAAA;AAErD;AACAC,IAAAA,SAAS,GAAG/T,IAAI,CAACC,UAAU,CAAC+Q,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;IACrEhR,IAAI,CAACG,aAAa,CAAC4T,SAAS,EAAEA,SAAS,EAAE1O,cAAc,CAAC,CAAA;AAExD;IACA,IAAI8K,QAAQ,GAAGlY,IAAI,CAACuE,GAAG,CACrBuX,SAAS,CAAC,CAAC,CAAC,GAAGW,YAAY,GAC3BX,SAAS,CAAC,CAAC,CAAC,GAAGY,YAAY,GAC3BZ,SAAS,CAAC,CAAC,CAAC,GAAGa,YAAY,CAC5B,CAAA;AAED,IAAA,MAAMC,kBAAkB,GAAG7U,IAAI,CAAC+C,MAAM,EAAE,CAAA;IAExC/C,IAAI,CAAC8U,QAAQ,CAACD,kBAAkB,EAAEd,SAAS,EAAE/T,IAAI,CAACgO,KAAK,CAAChO,IAAI,CAAC+C,MAAM,EAAE,EAAE0R,IAAI,EAAEtE,QAAQ,CAAC,CAAC,CAAA;IAEvF,IAAI4E,kBAAkB,GACpB,CAACF,kBAAkB,CAAC,CAAC,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,GACpCa,kBAAkB,CAAC,CAAC,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,GACnCa,kBAAkB,CAAC,CAAC,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,KAClChU,IAAI,CAACnD,MAAM,CAACgY,kBAAkB,CAAC,GAAG7U,IAAI,CAACnD,MAAM,CAACmX,QAAQ,CAAC,CAAC,CAAA;AAE3D;IACA,IAAIe,kBAAkB,GAAG,CAAC,EAAE;AAC1BA,MAAAA,kBAAkB,GAAG,CAAC,CAAA;AACvB,KAAA;AAED,IAAA,MAAM9N,KAAK,GAAGhP,IAAI,CAAC+c,IAAI,CAACD,kBAAkB,CAAC,CAAA;AAE3C,IAAA,MAAME,QAAQ,GAAGjV,IAAI,CAACmU,KAAK,CAACnU,IAAI,CAAC+C,MAAM,EAAE,EAAEiR,QAAQ,EAAEa,kBAAkB,CAAC,CAAA;IAExE1E,QAAQ,GAAGuE,YAAY,GAAGO,QAAQ,CAAC,CAAC,CAAC,GACjCN,YAAY,GAAGM,QAAQ,CAAC,CAAC,CAAC,GAC1BL,YAAY,GAAGK,QAAQ,CAAC,CAAC,CAAC,CAAA;AAE9B,IAAA,IAAIC,cAAsB,CAAA;AAE1B,IAAA,IAAIrB,UAAU,KAAKlD,eAAe,CAACG,gBAAgB,EAAE;MACnDoE,cAAc,GAAG/E,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AACvC,KAAA,MAAM;MACL+E,cAAc,GAAG/E,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AACvC,KAAA;AAED,IAAA,MAAMgF,WAAW,GAAGlO,KAAK,GAAGiO,cAAc,GAAGd,eAAe,CAAA;IAE5D,OAAOe,WAAW,GAAGjc,UAAU,CAAA;AACjC,GAAA;EAEQya,qBAAqBA,CAACvU,UAAgB,EAAA;IAC5C,MAAMgW,KAAK,GAAGpV,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACtCD,IAAI,CAACG,aAAa,CAACiV,KAAK,EAAEA,KAAK,EAAEhW,UAAU,CAAC,CAAA;AAE5C,IAAA,OAAO,CAAC,CAAC,GAAGnH,IAAI,CAAC6H,KAAK,CACpBsV,KAAK,CAAC,CAAC,CAAC,EACRnd,IAAI,CAACoI,IAAI,CAACpI,IAAI,CAACI,GAAG,CAAC+c,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGnd,IAAI,CAACI,GAAG,CAAC+c,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;AAC7D,GAAA;AACD;;AC5RD;;;;AAIG;AACH,MAAMC,WAAY,SAAQjS,SAA4B,CAAA;AAQpD;;AAEG;EACH,IAAWgJ,OAAOA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACkJ,MAAM,CAAClJ,OAAO,CAAA;AAAE,GAAA;AACnD;;AAEG;EACH,IAAWE,aAAaA;IAAK,OAAO,IAAI,CAACC,cAAc,CAAA;AAAE,GAAA;AACzD;;AAEG;EACH,IAAWC,SAASA,GAAA;IAClB,OAAO,IAAI,CAAC8I,MAAM,CAAClJ,OAAO,IAAI,IAAI,CAACkJ,MAAM,CAACpE,kBAAkB,CAAA;AAC9D,GAAA;AAEA;;;;;;;;;;;;;AAaG;EACH,IAAWE,UAAUA;IAAK,OAAO,IAAI,CAACC,WAAW,CAAA;AAAE,GAAA;EACnD,IAAWD,UAAUA,CAACjf,GAAqC,EAAI;IAAA,IAAI,CAACkf,WAAW,GAAGlf,GAAG,CAAA;AAAE,GAAA;AAEvF;;;;;;;;;;;;;AAaG;EACI,OAAaojB,WAAWA,GAAA;;MAC7B,IAAI,CAACtX,iBAAiB,EAAE;AACtB,QAAA,OAAO,KAAK,CAAA;AACb,OAAA;AAED,MAAA,IAAIuX,oBAAsD,CAAA;MAE1D,MAAMC,kBAAkB,GAAGA,MAAM,IAAIhT,OAAO,CAACiT,GAAG,IAAG;QACjDF,oBAAoB,GAAI/M,GAAsB,IAAI;AAChDiN,UAAAA,GAAG,CAACjN,GAAG,CAACkN,YAAY,IAAIlN,GAAG,CAACkN,YAAY,CAAClE,KAAK,IAAI,IAAI,CAAC,CAAA;SACxD,CAAA;QAED1T,MAAM,CAACkL,gBAAgB,CAACtO,QAAc,CAAClG,aAAa,EAAE+gB,oBAAoB,CAAC,CAAA;AAC7E,OAAC,CAAC,CAAA;MAEF,MAAMI,OAAO,GAAGA,MAAM,IAAInT,OAAO,CAACiT,GAAG,IAAG;QACtChG,UAAU,CAAC,MAAMgG,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAA;AACpC,OAAC,CAAC,CAAA;AAEF,MAAA,OAAOjT,OAAO,CAACoT,IAAI,CAAC,CAACJ,kBAAkB,EAAE,EAAEG,OAAO,EAAE,CAAC,CAAC,CACnD5P,IAAI,CAAE8P,SAAkB,IAAI;QAC3B/X,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAAClG,aAAa,EAAE+gB,oBAAoB,CAAC,CAAA;AAE9E,QAAA,OAAOM,SAAS,CAAA;AAClB,OAAC,CAAC,CAAA;AACN,KAAC,CAAA,CAAA;AAAA,GAAA;AAED;;;;;;AAMG;EACI,OAAaC,uBAAuBA,GAAA;;AACzC;MACA,IAAIjY,qBAAqB,EAAE,EAAE;QAC3B,OAAQG,iBAEN,CAAC+X,iBAAiB,EAAE,CAAChQ,IAAI,CAACiQ,eAAe,IAAG;UAC5C,OAAOA,eAAe,KAAK,SAAS,CAAA;AACtC,SAAC,CAAC,CAACC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAA;AACtB,OAAA;AAED,MAAA,OAAO,IAAI,CAAA;AACb,KAAC,CAAA,CAAA;AAAA,GAAA;AAED;;;;;AAKG;EACHjlB,WAAAA,CAAmBqb,aAAsB,EAAE;AACzC8E,IAAAA,UAAU,GAAG,IAAA;MACkB,EAAE,EAAA;AACjC,IAAA,KAAK,EAAE,CAAA;IAEP,IAAI,CAAC7E,cAAc,GAAGD,aAAa,CAAA;IACnC,IAAI,CAAC+E,WAAW,GAAGD,UAAU,CAAA;AAC7B,IAAA,IAAI,CAACkE,MAAM,GAAG,IAAIrE,SAAS,EAAE,CAAA;AAC/B,GAAA;AAEA;;AAEG;AACIpM,EAAAA,OAAOA,GAAA;IACZ,IAAI,CAACiF,OAAO,EAAE,CAAA;AACd,IAAA,IAAI,CAACwL,MAAM,CAACxQ,GAAG,EAAE,CAAA;IACjB,IAAI,CAACA,GAAG,EAAE,CAAA;AACZ,GAAA;AAEA;;AAEG;EACIvD,MAAMA,CAACW,MAAc,EAAEzD,GAAW,EAAEC,KAAa,EAAEsE,IAAY,EAAA;AACpE,IAAA,IAAI,CAAC,IAAI,CAACqO,WAAW,EAAE;AACrB,MAAA,IAAI,CAAC7M,iBAAiB,CAACtC,MAAM,EAAEc,IAAI,CAAC,CAAA;AACrC,KAAA,MAAM;MACL,IAAI,CAACmT,eAAe,CAACjU,MAAM,EAAEzD,GAAG,EAAEC,KAAK,EAAEsE,IAAI,CAAC,CAAA;AAC/C,KAAA;AACH,GAAA;AAEA;;AAEG;AACI4G,EAAAA,MAAMA,GAAA;AACX,IAAA,IAAI,IAAI,CAAC0L,MAAM,CAAClJ,OAAO,EAAE,OAAA;AAEzB,IAAA,IAAI,CAACkJ,MAAM,CAAC1L,MAAM,EAAE,CAAA;IACpB,IAAI,CAAC2C,cAAc,GAAG,KAAK,CAAA;AAC3B,IAAA,IAAI,CAACtG,OAAO,CAACnN,cAAc,CAACC,MAAM,EAAE;AAAE+V,MAAAA,OAAO,EAAE,IAAI;AAAEC,MAAAA,YAAY,EAAE,KAAA;AAAK,KAAE,CAAC,CAAA;AAC7E,GAAA;AAEA;;AAEG;AACIjF,EAAAA,OAAOA,GAAA;AACZ,IAAA,IAAI,CAAC,IAAI,CAACwL,MAAM,CAAClJ,OAAO,EAAE,OAAA;AAE1B,IAAA,IAAI,CAACkJ,MAAM,CAACxL,OAAO,EAAE,CAAA;AACrB,IAAA,IAAI,CAAC7D,OAAO,CAACnN,cAAc,CAACE,OAAO,EAAE;AAAE+V,MAAAA,YAAY,EAAE,KAAA;AAAK,KAAE,CAAC,CAAA;AAC/D,GAAA;AAEA;;AAEG;AACIC,EAAAA,IAAIA,GAAA,EAAW;EAEdmH,eAAeA,CAACjU,MAAc,EAAEzD,GAAW,EAAEC,KAAa,EAAEsE,IAAY,EAAA;AAC9E,IAAA,MAAMoT,KAAK,GAAG,IAAI,CAACd,MAAM,CAAA;AACzB,IAAA,IAAI,CAACc,KAAK,CAAChK,OAAO,EAAE,OAAA;IAEpB,MAAM;AACJ3N,MAAAA,GAAG,EAAE4X,QAAQ;AACb3X,MAAAA,KAAK,EAAE4X,UAAAA;AAAU,KAClB,GAAGF,KAAK,CAAC7D,YAAY,EAAE,CAAA;AAExB9T,IAAAA,GAAG,CAAC1D,GAAG,CAACsb,QAAQ,CAAC,CAAA;AACjB3X,IAAAA,KAAK,CAAC3D,GAAG,CAACub,UAAU,CAAC,CAAA;IAErBpU,MAAM,CAACkD,MAAM,CAAC;MACZ3G,GAAG,EAAEA,GAAG,CAACtM,GAAG;MACZuM,KAAK,EAAEA,KAAK,CAACvM,GAAG;AAChB6Q,MAAAA,IAAAA;AACD,KAAA,CAAC,CAAA;AACJ,GAAA;AAEQwB,EAAAA,iBAAiBA,CAACtC,MAAc,EAAEc,IAAY,EAAA;AACpD,IAAA,MAAMoT,KAAK,GAAG,IAAI,CAACd,MAAM,CAAA;AACzB,IAAA,IAAI,CAACc,KAAK,CAAChK,OAAO,EAAE,OAAA;IAEpBgK,KAAK,CAAC7U,MAAM,EAAE,CAAA;IACdW,MAAM,CAACgB,MAAM,CAACkT,KAAK,CAAChX,UAAU,EAAE4D,IAAI,CAAC,CAAA;AACvC,GAAA;AACD;;AC/JD;;;;AAIG;AACH,MAAMuT,WAAW,CAAA;AAcf;;AAEG;EACH,IAAWC,aAAaA;IAAK,OAAO,IAAI,CAACC,cAAc,CAAA;AAAE,GAAA;EACzD,IAAWD,aAAaA,CAACrkB,GAAwC,EAAA;AAC/D,IAAA,IAAIA,GAAG,KAAK,IAAI,CAACskB,cAAc,EAAE,OAAA;IAEjC,IAAI,CAACA,cAAc,GAAGtkB,GAAG,CAAA;AAEzB,IAAA,IAAIA,GAAG,IAAI,IAAI,CAACka,QAAQ,EAAE;MACxB,IAAI,CAACqK,UAAU,CAAC/b,MAAc,CAACnF,IAAI,CAAC,CAAA;AACrC,KAAA,MAAM,IAAI,CAACrD,GAAG,EAAE;MACf,IAAI,CAACukB,UAAU,CAAC/b,MAAc,CAACjF,IAAI,CAAC,CAAA;AACrC,KAAA;AACH,GAAA;AAEA;;AAEG;EACH,IAAWihB,kBAAkBA;IAAK,OAAO,IAAI,CAACC,mBAAmB,CAAA;AAAE,GAAA;EACnE,IAAWD,kBAAkBA,CAACxkB,GAA6C,EAAA;AACzE,IAAA,IAAIA,GAAG,KAAK,IAAI,CAACykB,mBAAmB,EAAE,OAAA;IAEtC,IAAI,CAACA,mBAAmB,GAAGzkB,GAAG,CAAA;AAE9B,IAAA,IAAIA,GAAG,IAAI,IAAI,CAACka,QAAQ,EAAE;MACxB,IAAI,CAACwK,iBAAiB,EAAE,CAAA;AACzB,KAAA,MAAM,IAAI,CAAC1kB,GAAG,EAAE;MACf,IAAI,CAAC2kB,mBAAmB,EAAE,CAAA;AAC3B,KAAA;AACH,GAAA;AAEA;;AAEG;EACH,IAAW9M,UAAUA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC+M,cAAc,CAAC/M,UAAU,CAAA;AAAE,GAAA;EACjE,IAAWA,UAAUA,CAAC7X,GAAqC,EAAA;AAAI,IAAA,IAAI,CAAC4kB,cAAc,CAAC/M,UAAU,GAAG7X,GAAG,CAAA;AAAE,GAAA;AACrG;;AAEG;EACH,IAAW6kB,eAAeA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACC,YAAY,CAACjN,UAAU,CAAA;AAAE,GAAA;EACpE,IAAWgN,eAAeA,CAAC7kB,GAA0C,EAAA;AAAI,IAAA,IAAI,CAAC8kB,YAAY,CAACjN,UAAU,GAAG7X,GAAG,CAAA;AAAE,GAAA;AAC7G;;;;AAIG;EACH,IAAW+kB,eAAeA;IAAK,OAAO,IAAI,CAACC,gBAAgB,CAAA;AAAE,GAAA;EAC7D,IAAWD,eAAeA,CAAC/kB,GAAY,EAAI;IAAA,IAAI,CAACglB,gBAAgB,GAAGhlB,GAAG,CAAA;AAAE,GAAA;AAExE;;;;;AAKG;EACH,IAAWia,OAAOA;IAAK,OAAO,IAAI,CAACC,QAAQ,CAAA;AAAE,GAAA;AAC7C;;AAEG;EACH,IAAWnJ,MAAMA;IAAK,OAAO,IAAI,CAAC6T,cAAc,CAAA;AAAE,GAAA;AAClD;;AAEG;EACH,IAAW/T,IAAIA;IAAK,OAAO,IAAI,CAACiU,YAAY,CAAA;AAAE,GAAA;AAC9C;;AAEG;EACH,IAAWG,IAAIA;IAAK,OAAO,IAAI,CAACC,YAAY,CAAA;AAAE,GAAA;AAE9C;;;;;AAKG;EACH,IAAW7K,SAASA,GAAA;AAClB,IAAA,OAAO,IAAI,CAACuK,cAAc,CAACvK,SAAS,IAC/B,IAAI,CAACyK,YAAY,CAACzK,SAAS,IAC3B,IAAI,CAAC6K,YAAY,CAAC7K,SAAS,CAAA;AAClC,GAAA;AAEA;;;;;;AAMG;AACHvb,EAAAA,WAAAA,CAAmB4Y,OAAoB,EAAE3H,MAAc,EAAE;IACvDsU,aAAa;IACbxM,UAAU;IACVgN,eAAe;IACfL,kBAAkB;IAClBzT,MAAM;IACNF,IAAI;AACJoU,IAAAA,IAAAA;AACmB,GAAA,EAAA;AA4Jb,IAAA,IAAA,CAAAE,mBAAmB,GAAI7O,GAAe,IAAI;MAChDA,GAAG,CAACG,cAAc,EAAE,CAAA;KACrB,CAAA;AAsBO,IAAA,IAAA,CAAA4E,aAAa,GAAI/E,GAA2D,IAAI;MACtF,IAAI,IAAI,CAACgO,cAAc,IAAI,CAAChO,GAAG,CAACa,UAAU,EAAE;QAC1C,IAAI,CAACoN,UAAU,CAAC/b,MAAc,CAAClF,QAAQ,CAAC,CAAA;AACzC,OAAA;KACF,CAAA;AAEO,IAAA,IAAA,CAAA0Y,WAAW,GAAI1F,GAAyD,IAAI;MAClF,IAAI,IAAI,CAACgO,cAAc,IAAI,CAAChO,GAAG,CAACa,UAAU,EAAE;QAC1C,IAAI,CAACoN,UAAU,CAAC/b,MAAc,CAACnF,IAAI,CAAC,CAAA;AACrC,OAAA;KACF,CAAA;IAEO,IAAS,CAAA+hB,SAAA,GAAG,CAAC;MACnBzI,OAAO;AACPC,MAAAA,YAAAA;AAAY,KAIb,KAAI;AACH,MAAA,IAAIA,YAAY,IAAI,IAAI,CAAC0H,cAAc,EAAE;QACvC,IAAI,CAACC,UAAU,CAAC/b,MAAc,CAACnF,IAAI,CAAC,CAAA;AACrC,OAAA;AAEDsZ,MAAAA,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC3M,OAAO,CAAC,CAAA;KAC3B,CAAA;IAEO,IAAA,CAAAmV,UAAU,GAAG,CAAC;AACpBzI,MAAAA,YAAAA;AAAY,KAGb,KAAI;AACH,MAAA,IAAIA,YAAY,EAAE;QAChB,IAAI,CAAC2H,UAAU,CAAC/b,MAAc,CAACjF,IAAI,CAAC,CAAA;AACrC,OAAA;KACF,CAAA;IAEO,IAAA,CAAA+hB,qBAAqB,GAAG,CAAC;AAAEtT,MAAAA,SAAAA;AAAS,KAAkC,KAAI;AAChFA,MAAAA,SAAS,CAACvB,gBAAgB,EAAE,CAACoD,IAAI,CAAC,MAAK;QACrC,IAAI,CAACgJ,IAAI,EAAE,CAAA;AACb,OAAC,CAAC,CAAA;KACH,CAAA;AA3NC;IACA,IAAI,CAACyH,cAAc,GAAGD,aAAa,CAAA;IACnC,IAAI,CAACI,mBAAmB,GAAGD,kBAAkB,CAAA;AAE7C;IACA,IAAI,CAACtU,OAAO,GAAGH,MAAM,CAAA;IACrB,IAAI,CAACkM,UAAU,GAAGvE,OAAO,CAAA;IACzB,IAAI,CAACsN,gBAAgB,GAAG,KAAK,CAAA;IAC7B,IAAI,CAAC9K,QAAQ,GAAG,KAAK,CAAA;AAErB,IAAA,IAAI,CAAC0K,cAAc,GAAG,IAAI5K,aAAa,CAACtC,OAAO,EAAE,CAAC3G,MAAM,EAAEpG,eAAe,CAACoG,MAAM,CAAC,CAAC,CAAA;AAClF,IAAA,IAAI,CAAC+T,YAAY,GAAG,IAAI7G,WAAW,CAACvG,OAAO,EAAE,CAAC7G,IAAI,EAAElG,eAAe,CAACkG,IAAI,CAAC,CAAC,CAAA;AAC1E,IAAA,IAAI,CAACqU,YAAY,GAAG,IAAIhC,WAAW,CAAC,CAAC+B,IAAI,EAAEta,eAAe,CAACsa,IAAI,CAAC,CAAC,CAAA;AAEjE,IAAA,IAAI,CAACL,cAAc,CAAC/M,UAAU,GAAGA,UAAU,CAAA;AAC3C,IAAA,IAAI,CAACiN,YAAY,CAACjN,UAAU,GAAGgN,eAAe,CAAA;IAE9C,IAAI,CAACU,WAAW,EAAE,CAAA;AACpB,GAAA;AAEA;;;;;;AAMG;AACI7S,EAAAA,OAAOA,GAAA;IACZ,IAAI,CAACiF,OAAO,EAAE,CAAA;AACd,IAAA,IAAI,CAACiN,cAAc,CAAClS,OAAO,EAAE,CAAA;AAC7B,IAAA,IAAI,CAACoS,YAAY,CAACpS,OAAO,EAAE,CAAA;IAC3B,IAAI,CAAC6R,UAAU,CAAC/b,MAAc,CAACjF,IAAI,CAAC,CAAA;AACtC,GAAA;AAEA;;;;;;AAMG;AACIqP,EAAAA,MAAMA,CAACC,KAAa,EAAEC,MAAc,EAAA;AACzC,IAAA,MAAM/C,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAE3B,IAAA,IAAI,CAAC0U,cAAc,CAAChS,MAAM,CAAC7C,MAAM,CAAC9D,GAAG,EAAE8D,MAAM,CAACjF,MAAM,EAAE+H,KAAK,EAAEC,MAAM,CAAC,CAAA;AACtE,GAAA;AAEA;;;;AAIG;AACU2E,EAAAA,MAAMA,GAAA;;MACjB,IAAI,IAAI,CAACyC,QAAQ,EAAE,OAAA;AAEnB,MAAA,IAAI,CAAC,IAAI,CAAC0K,cAAc,CAACzK,aAAa,EAAE;AACtC,QAAA,IAAI,CAACyK,cAAc,CAACnN,MAAM,EAAE,CAAA;AAC7B,OAAA;AAED,MAAA,IAAI,CAAC,IAAI,CAACqN,YAAY,CAAC3K,aAAa,EAAE;AACpC,QAAA,IAAI,CAAC2K,YAAY,CAACrN,MAAM,EAAE,CAAA;AAC3B,OAAA;AAED,MAAA,IAAI,CAAC,IAAI,CAACyN,YAAY,CAAC/K,aAAa,EAAE;AACpC,QAAA,IAAI,MAAM+I,WAAW,CAACE,WAAW,EAAE,EAAE;AACnC,UAAA,IAAI,CAAC8B,YAAY,CAACzN,MAAM,EAAE,CAAA;AAC3B,SAAA;AACF,OAAA;MAED,IAAI,CAACoF,IAAI,EAAE,CAAA;MAEX,IAAI,IAAI,CAAC4H,mBAAmB,EAAE;QAC5B,IAAI,CAACC,iBAAiB,EAAE,CAAA;AACzB,OAAA;MAED,IAAI,CAACxK,QAAQ,GAAG,IAAI,CAAA;AACtB,KAAC,CAAA,CAAA;AAAA,GAAA;AAED;;;;AAIG;AACIvC,EAAAA,OAAOA,GAAA;AACZ,IAAA,IAAI,CAAC,IAAI,CAACuC,QAAQ,EAAE,OAAA;AAEpB,IAAA,IAAI,CAAC0K,cAAc,CAACjN,OAAO,EAAE,CAAA;AAC7B,IAAA,IAAI,CAACmN,YAAY,CAACnN,OAAO,EAAE,CAAA;AAC3B,IAAA,IAAI,CAACuN,YAAY,CAACvN,OAAO,EAAE,CAAA;IAE3B,IAAI,CAACgN,mBAAmB,EAAE,CAAA;IAE1B,IAAI,CAACzK,QAAQ,GAAG,KAAK,CAAA;AACvB,GAAA;AAEA;;;;;;AAMG;EACI9K,MAAMA,CAACM,KAAa,EAAA;AACzB,IAAA,MAAMK,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAC3B,IAAA,MAAMsV,aAAa,GAAG,IAAI,CAACZ,cAAc,CAAA;AACzC,IAAA,MAAMa,WAAW,GAAG,IAAI,CAACX,YAAY,CAAA;AACrC,IAAA,MAAMY,WAAW,GAAG,IAAI,CAACR,YAAY,CAAA;AAErCO,IAAAA,WAAW,CAACrW,MAAM,CAACM,KAAK,CAAC,CAAA;IACzB,MAAMmB,IAAI,GAAG9E,UAAU,CAACgE,MAAM,CAAC9D,GAAG,EAAEwZ,WAAW,CAAC5U,IAAI,CAAC,CAAA;AAErD;AACA,IAAA,MAAM8U,SAAS,GAAG,IAAI,CAACX,gBAAgB,GAAG,CAAC,GAAGlf,IAAI,CAACuB,GAAG,CAACwJ,IAAI,EAAE,CAAC,CAAC,CAAA;AAC/D2U,IAAAA,aAAa,CAAChJ,YAAY,CAACmJ,SAAS,CAAC,CAAA;AACrCH,IAAAA,aAAa,CAACjJ,WAAW,CAACxM,MAAM,EAAEc,IAAI,CAAC,CAAA;AACvC2U,IAAAA,aAAa,CAACpW,MAAM,CAACM,KAAK,CAAC,CAAA;AAE3B,IAAA,MAAMpD,GAAG,GAAGkZ,aAAa,CAAClZ,GAAG,CAAA;AAC7B,IAAA,MAAMC,KAAK,GAAGiZ,aAAa,CAACjZ,KAAK,CAAA;IAEjC,IAAImZ,WAAW,CAACzL,OAAO,EAAE;MACvByL,WAAW,CAACtW,MAAM,CAACW,MAAM,EAAEzD,GAAG,EAAEC,KAAK,EAAEsE,IAAI,CAAC,CAAA;AAC7C,KAAA,MAAM;MACLd,MAAM,CAACkD,MAAM,CAAC;QACZ3G,GAAG,EAAEA,GAAG,CAACtM,GAAG;QACZuM,KAAK,EAAEA,KAAK,CAACvM,GAAG;AAChB6Q,QAAAA,IAAAA;AACD,OAAA,CAAC,CAAA;AACH,KAAA;AACH,GAAA;AAEA;;;;AAIG;AACIgM,EAAAA,IAAIA,GAAA;AACT,IAAA,MAAM9M,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAE3B,IAAA,IAAI,CAAC4U,YAAY,CAACjI,IAAI,CAAC9M,MAAM,CAAC,CAAA;AAC9B,IAAA,IAAI,CAAC6U,cAAc,CAAC/H,IAAI,CAAC9M,MAAM,CAAC,CAAA;AAClC,GAAA;AAEQ2U,EAAAA,iBAAiBA,GAAA;AACvB,IAAA,MAAMjc,EAAE,GAAG,IAAI,CAACwT,UAAU,CAAA;AAE1BxT,IAAAA,EAAE,CAACqO,gBAAgB,CAACtO,QAAc,CAACrH,YAAY,EAAE,IAAI,CAACgkB,mBAAmB,CAAC,CAAA;AAC5E,GAAA;AAEQR,EAAAA,mBAAmBA,GAAA;AACzB,IAAA,MAAMlc,EAAE,GAAG,IAAI,CAACwT,UAAU,CAAA;AAE1BxT,IAAAA,EAAE,CAAC8O,mBAAmB,CAAC/O,QAAc,CAACrH,YAAY,EAAE,IAAI,CAACgkB,mBAAmB,CAAC,CAAA;AAC/E,GAAA;EAMQZ,UAAUA,CAACqB,SAAyC,EAAA;AAC1D,IAAA,IAAI,CAAC,IAAI,CAACtB,cAAc,IAAIsB,SAAS,KAAKpd,MAAc,CAACjF,IAAI,EAAE,OAAA;AAE/D,IAAA,MAAMwF,QAAQ,GAAG,IAAI,CAACkT,UAAU,CAAA;AAChClT,IAAAA,QAAQ,CAAC8c,KAAK,CAACC,MAAM,GAAGF,SAAS,CAAA;AACnC,GAAA;AAEQL,EAAAA,WAAWA,GAAA;AACjB,IAAA,MAAMC,aAAa,GAAG,IAAI,CAACZ,cAAc,CAAA;AACzC,IAAA,MAAMa,WAAW,GAAG,IAAI,CAACX,YAAY,CAAA;IAErCU,aAAa,CAACxI,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;IAChEmK,aAAa,CAACxI,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;IAC5DwJ,aAAa,CAACxI,EAAE,CAACrW,cAAc,CAACC,MAAM,EAAE,IAAI,CAACwe,SAAS,CAAC,CAAA;IACvDI,aAAa,CAACxI,EAAE,CAACrW,cAAc,CAACE,OAAO,EAAE,IAAI,CAACwe,UAAU,CAAC,CAAA;IACzDI,WAAW,CAACzI,EAAE,CAACrW,cAAc,CAACC,MAAM,EAAE,IAAI,CAACwe,SAAS,CAAC,CAAA;IACrDK,WAAW,CAACzI,EAAE,CAACrW,cAAc,CAACE,OAAO,EAAE,IAAI,CAACwe,UAAU,CAAC,CAAA;AACvD,IAAA,IAAI,CAACnV,OAAO,CAAC8M,EAAE,CAAC1W,aAAa,CAACE,aAAa,EAAE,IAAI,CAAC8e,qBAAqB,CAAC,CAAA;AAC1E,GAAA;AA2CD;;ACzYD;;AAEG;AACH,MAAeS,OAAO,CAAA;AAOpBjnB,EAAAA,WAAAA,CAAmB;IACjB+T,KAAK;IACLC,MAAM;AACNkT,IAAAA,KAAAA;AAKD,GAAA,EAAA;IACC,IAAI,CAACnT,KAAK,GAAGA,KAAK,CAAA;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM,CAAA;IACpB,IAAI,CAACkT,KAAK,GAAGA,KAAK,CAAA;AAClB,IAAA,IAAI,CAACC,KAAK,GAAGC,qBAAqB,CAACC,aAAa,CAAA;AAChD,IAAA,IAAI,CAACC,KAAK,GAAGF,qBAAqB,CAACC,aAAa,CAAA;AAClD,GAAA;AAEOzT,EAAAA,OAAOA,GAAA;AACZ;AAAA,GAAA;AAGK2T,EAAAA,OAAOA,GAAA;AACZ,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AAEOC,EAAAA,MAAMA,GAAA;AACX,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACD;;AC5CD;;;AAGG;AAGH;;AAEG;AACH,MAAMC,SAAU,SAAQR,OAAO,CAAA;AAG7BjnB,EAAAA,WAAmBA,CAAA;IACjB0nB,MAAM;IACN3T,KAAK;IACLC,MAAM;AACNkT,IAAAA,KAAAA;AAMD,GAAA,EAAA;AACC,IAAA,KAAK,CAAC;MACJnT,KAAK;MACLC,MAAM;AACNkT,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IAEF,IAAI,CAACQ,MAAM,GAAGA,MAAM,CAAA;AACtB,GAAA;AACD;;AC/BD;;;AAGG;AAGH;;AAEG;AACH,MAAMC,YAAa,SAAQF,SAAS,CAAA;AAG3B7T,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMgU,KAAK,GAAG,IAAI,CAACF,MAAM,CAAA;IAEzBE,KAAK,CAACC,KAAK,EAAE,CAAA;AACbD,IAAAA,KAAK,CAACE,eAAe,CAAC,KAAK,CAAC,CAAA;IAC5BF,KAAK,CAACG,IAAI,EAAE,CAAA;AACd,GAAA;AAEOR,EAAAA,OAAOA,GAA2B;AAAA,IAAA,OAAO,IAAI,CAAA;AAAE,GAAA;AAE/CS,EAAAA,QAAQA,GAAA;AACb,IAAA,MAAMJ,KAAK,GAAG,IAAI,CAACF,MAAM,CAAA;AAEzB,IAAA,OAAOE,KAAK,CAACK,MAAM,IAAIL,KAAK,CAACM,KAAK,IAAIN,KAAK,CAACO,UAAU,IAAI,CAAC,CAAA;AAC7D,GAAA;AAEOC,EAAAA,QAAQA,GAAA;AACb,IAAA,MAAMR,KAAK,GAAG,IAAI,CAACF,MAAa,CAAA;IAEhC,IAAIE,KAAK,CAACS,WAAW,EAAE;AACrB,MAAA,OAAOT,KAAK,CAACS,WAAW,CAACzc,MAAM,GAAG,CAAC,CAAA;AACpC,KAAA;AAED,IAAA,IAAIgc,KAAK,CAACU,2BAA2B,IAAI,IAAI,EAAE;AAC7C,MAAA,OAAOV,KAAK,CAACU,2BAA2B,GAAG,CAAC,CAAA;AAC7C,KAAA;AAED,IAAA,IAAIV,KAAK,CAACW,WAAW,IAAI,IAAI,EAAE;MAC7B,OAAOX,KAAK,CAACW,WAAW,CAAA;AACzB,KAAA;AAED;AACA,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AACD;;AC9CD;;;AAGG;AAGH;;AAEG;AACH,MAAMC,WAAY,SAAQvB,OAAO,CAAA;AAG/BjnB,EAAAA,WAAmBA,CAAA;IACjByoB,OAAO;IACP1U,KAAK;IACLC,MAAM;AACNkT,IAAAA,KAAAA;AAMD,GAAA,EAAA;AACC,IAAA,KAAK,CAAC;MACJnT,KAAK;MACLC,MAAM;AACNkT,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IAEF,IAAI,CAACuB,OAAO,GAAGA,OAAO,CAAA;AACxB,GAAA;AAEOjB,EAAAA,MAAMA,GAA0B;AAAA,IAAA,OAAO,IAAI,CAAA;AAAE,GAAA;AACrD;;ACpBD;;AAEG;AACH,MAAMkB,aAAa,CAAA;AAGjB1oB,EAAAA,WAAAA,GAAA;AACE,IAAA,IAAI,CAAC2oB,YAAY,GAAG,IAAIC,OAAO,EAAE,CAAA;AACnC,GAAA;AAEab,EAAAA,IAAIA,CAACc,GAA6B,EAAEjB,KAAiC,EAAA;;AAChF,MAAA,IAAIA,KAAK,EAAE;QACT,OAAO,IAAI,CAACkB,SAAS,CAACD,GAAG,EAAEhd,eAAe,CAAC+b,KAAK,CAAC,CAAC,CAAA;AACnD,OAAA,MAAM;AACL,QAAA,IAAIhd,KAAK,CAACme,OAAO,CAACF,GAAG,CAAC,IAAIA,GAAG,CAACjd,MAAM,GAAG,CAAC,EAAE;AACxC,UAAA,OAAO,IAAI,CAACod,aAAa,CAACH,GAAG,CAAC,CAAA;AAC/B,SAAA,MAAM;AACL,UAAA,MAAMI,MAAM,GAAGre,KAAK,CAACme,OAAO,CAACF,GAAG,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAA;AAChD,UAAA,OAAO,IAAI,CAACK,SAAS,CAACD,MAAM,CAAC,CAAA;AAC9B,SAAA;AACF,OAAA;AACH,KAAC,CAAA,CAAA;AAAA,GAAA;EAEYC,SAASA,CAACL,GAAyB,EAAA;;AAC9C,MAAA,MAAMM,MAAM,GAAG,IAAI,CAACC,aAAa,CAACP,GAAG,CAAC,CAAA;AAEtC,MAAA,OAAO,IAAI,CAACQ,KAAK,CAACF,MAAM,EAAE1X,OAAO,IAAG;AAClC,QAAA,MAAM6X,KAAK,GAAGH,MAAM,CAAC,CAAC,CAAC,CAAA;QAEvB1X,OAAO,CAAC,IAAIgW,SAAS,CAAC;AACpBC,UAAAA,MAAM,EAAE4B,KAAK;UACbvV,KAAK,EAAEuV,KAAK,CAACC,YAAY;UACzBvV,MAAM,EAAEsV,KAAK,CAACE,aAAa;AAC3BtC,UAAAA,KAAK,EAAE,IAAA;AACR,SAAA,CAAC,CAAC,CAAA;AACL,OAAC,CAAC,CAAA;AACJ,KAAC,CAAA,CAAA;AAAA,GAAA;EAEY8B,aAAaA,CAACH,GAAgC,EAAA;;AACzD,MAAA,MAAMM,MAAM,GAAG,IAAI,CAACC,aAAa,CAACP,GAAG,CAAC,CAAA;AAEtC,MAAA,OAAO,IAAI,CAACQ,KAAK,CAACF,MAAM,EAAE1X,OAAO,IAAG;QAClCA,OAAO,CAAC,IAAI+W,WAAW,CAAC;AACtBC,UAAAA,OAAO,EAAEU,MAAM;AACfpV,UAAAA,KAAK,EAAEoV,MAAM,CAAC,CAAC,CAAC,CAACI,YAAY;AAC7BvV,UAAAA,MAAM,EAAEmV,MAAM,CAAC,CAAC,CAAC,CAACK,aAAa;AAC/BtC,UAAAA,KAAK,EAAE,KAAA;AACR,SAAA,CAAC,CAAC,CAAA;AACL,OAAC,CAAC,CAAA;AACJ,KAAC,CAAA,CAAA;AAAA,GAAA;AAEY4B,EAAAA,SAASA,CAACD,GAA6B,EAAEY,WAAiC,EAAA;;AACrF,MAAA,MAAMC,MAAM;AACVC,QAAAA,QAAQ,EAAE,IAAI;AACdC,QAAAA,KAAK,EAAE,IAAI;AACX5Z,QAAAA,IAAI,EAAE,KAAK;AACX6Z,QAAAA,MAAM,EAAE,CAAA;OACL,EAAAJ,WAAW,CACf,CAAA;MACD,MAAM7B,KAAK,GAAG,IAAI,CAACkC,eAAe,CAACjB,GAAG,EAAEa,MAAM,CAAC,CAAA;MAE/C,OAAO,IAAI,CAACL,KAAK,CAAC,CAACzB,KAAK,CAAC,EAAEnW,OAAO,IAAG;QACnC,MAAM;UAAEkY,QAAQ;AAAEC,UAAAA,KAAAA;AAAO,SAAA,GAAGF,MAAM,CAAA;QAElC9B,KAAK,CAACmC,WAAW,GAAG,CAAC,CAAA;QACrB,IAAIJ,QAAQ,IAAIC,KAAK,EAAE;UACrBhC,KAAK,CAACoC,IAAI,EAAE,CAAC/E,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAA;AACjC,SAAA;QAEDxT,OAAO,CAAC,IAAIkW,YAAY,CAAC;AACvBD,UAAAA,MAAM,EAAEE,KAAK;UACb7T,KAAK,EAAE6T,KAAK,CAACqC,UAAU;UACvBjW,MAAM,EAAE4T,KAAK,CAACsC,WAAW;AACzBhD,UAAAA,KAAK,EAAE,IAAA;AACR,SAAA,CAAC,CAAC,CAAA;AACL,OAAC,CAAC,CAAA;AACJ,KAAC,CAAA,CAAA;AAAA,GAAA;AAEOmC,EAAAA,KAAKA,CAAIc,OAAsB,EAAEC,MAA6C,EAAA;AACpF,IAAA,MAAMC,MAAM,GAAG,IAAI,CAAC1B,YAAY,CAAA;AAEhC,IAAA,OAAO,IAAInX,OAAO,CAAC,CAACC,OAAO,EAAE6Y,MAAM,KAAI;AACrCD,MAAAA,MAAM,CAACE,IAAI,CAAC,OAAO,EAAE/S,GAAG,IAAG;AACzB,QAAA,IAAIA,GAAG,CAACgT,UAAU,GAAG,CAAC,EAAE,OAAA;QAExBJ,MAAM,CAAC3Y,OAAO,CAAC,CAAA;AACjB,OAAC,CAAC,CAAA;AAEF4Y,MAAAA,MAAM,CAACE,IAAI,CAAC,OAAO,EAAED,MAAM,CAAC,CAAA;AAC5BD,MAAAA,MAAM,CAACI,KAAK,CAACN,OAAO,CAAC,CAAA;AACvB,KAAC,CAAC,CAAA;AACJ,GAAA;EAEQf,aAAaA,CAACP,GAA6B,EAAA;AACjD,IAAA,MAAM6B,IAAI,GAAG9f,KAAK,CAACme,OAAO,CAACF,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG,CAAC,CAAA;AAE7C,IAAA,OAAO6B,IAAI,CAACtpB,GAAG,CAACsmB,MAAM,IAAG;AACvB,MAAA,IAAIxe,QAAQ,CAACwe,MAAM,CAAC,EAAE;AACpB,QAAA,MAAMiD,KAAK,GAAG,IAAIC,KAAK,EAAE,CAAA;QAEzBD,KAAK,CAACE,WAAW,GAAG,WAAW,CAAA;QAC/BF,KAAK,CAAC9B,GAAG,GAAGnB,MAAM,CAAA;AAElB,QAAA,OAAOiD,KAAK,CAAA;AACb,OAAA,MAAM;AACL,QAAA,OAAOjD,MAA0B,CAAA;AAClC,OAAA;AACH,KAAC,CAAC,CAAA;AACJ,GAAA;EAEQoC,eAAeA,CAACjB,GAA6B,EAAE;IACrDe,KAAK;IACL5Z,IAAI;AACJ6Z,IAAAA,MAAAA;AACY,GAAA,EAAA;IACZ,IAAIhB,GAAG,YAAYiC,gBAAgB,EAAE;AACnC,MAAA,OAAOjC,GAAG,CAAA;AACX,KAAA;AAED,IAAA,MAAMjB,KAAK,GAAGhe,QAAQ,CAACL,aAAa,CAAC,OAAO,CAAC,CAAA;IAE7Cqe,KAAK,CAACiD,WAAW,GAAG,WAAW,CAAA;IAC/BjD,KAAK,CAACmD,WAAW,GAAG,IAAI,CAAA;AACxBnD,IAAAA,KAAK,CAACoD,YAAY,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAA;IAC5CpD,KAAK,CAACgC,KAAK,GAAGA,KAAK,CAAA;IACnBhC,KAAK,CAACiC,MAAM,GAAGA,MAAM,CAAA;IACrBjC,KAAK,CAAC5X,IAAI,GAAGA,IAAI,CAAA;AAEjB,IAAA,IAAIpF,KAAK,CAACme,OAAO,CAACF,GAAG,CAAC,EAAE;AACtBA,MAAAA,GAAG,CAACoC,OAAO,CAACvD,MAAM,IAAI,IAAI,CAACwD,oBAAoB,CAACtD,KAAK,EAAEF,MAAM,CAAC,CAAC,CAAA;AAChE,KAAA,MAAM;AACL,MAAA,IAAI,CAACwD,oBAAoB,CAACtD,KAAK,EAAEiB,GAAG,CAAC,CAAA;AACtC,KAAA;IAED,MAAMsC,WAAW,GAAGvD,KAAK,CAACwD,gBAAgB,CAAC,QAAQ,CAAC,CAACxf,MAAM,CAAA;IAC3D,IAAIuf,WAAW,GAAG,CAAC,IAAIvD,KAAK,CAACO,UAAU,GAAG,CAAC,EAAE;MAC3CP,KAAK,CAACG,IAAI,EAAE,CAAA;AACb,KAAA;AAED,IAAA,OAAOH,KAAK,CAAA;AACd,GAAA;AAEQsD,EAAAA,oBAAoBA,CAACtD,KAAuB,EAAEiB,GAAyB,EAAA;IAC7E,IAAIA,GAAG,YAAYwC,iBAAiB,EAAE;AACpC,MAAA,OAAOxC,GAAG,CAAA;AACX,KAAA;AAED,IAAA,MAAMyC,QAAQ,GAAG1hB,QAAQ,CAACL,aAAa,CAAC,QAAQ,CAAC,CAAA;IACjD+hB,QAAQ,CAACzC,GAAG,GAAGA,GAAa,CAAA;AAC5BjB,IAAAA,KAAK,CAAC2D,WAAW,CAACD,QAAQ,CAAC,CAAA;AAC7B,GAAA;AACD;;ACpKD;;;AAGG;AAEH;;AAEG;AACH,MAAME,aAAa,CAAA;AAQjB;AACAxrB,EAAAA,WAAmBA,CAAAyrB,YAAoB,EAAEC,OAAA,GAA8B5e,MAAM,EAAA;IAC3E,IAAI,CAAC2e,YAAY,GAAGA,YAAY,CAAA;IAEhC,IAAI,CAACE,QAAQ,GAAGD,OAAO,CAAA;AACvB,IAAA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,CAAA;AAChB,IAAA,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC,CAAA;AACnB,IAAA,IAAI,CAACC,eAAe,GAAG,CAAC,CAAC,CAAA;AAC3B,GAAA;EAEOvc,KAAKA,CAACwc,QAAgD,EAAA;AAC3D,IAAA,MAAML,OAAO,GAAG,IAAI,CAACC,QAAQ,CAAA;AAE7B;AACA,IAAA,IAAI,CAACD,OAAO,IAAI,CAACK,QAAQ,EAAE,OAAA;AAE3B;IACA,IAAI,IAAI,CAACH,MAAM,IAAI,CAAC,IAAI,IAAI,CAACC,SAAS,IAAI,CAAC,EAAE,OAAA;AAE7C,IAAA,MAAM7b,IAAI,GAAGA,CAACgc,KAAa,EAAEC,KAAe,KAAI;AAC9C,MAAA,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE,CAAA;AACvB,MAAA,MAAMxb,KAAK,GAAG5J,IAAI,CAACqB,GAAG,CAAC6jB,IAAI,GAAG,IAAI,CAACJ,eAAe,EAAE,IAAI,CAACL,YAAY,GAAG,IAAI,CAAC,CAAA;AAE7EM,MAAAA,QAAQ,CAACnb,KAAK,EAAEqb,KAAK,CAAC,CAAA;MAEtB,IAAI,CAACH,eAAe,GAAGI,IAAI,CAAA;MAC3B,IAAI,CAACN,MAAM,GAAGF,OAAO,CAACW,qBAAqB,CAACrc,IAAI,CAAC,CAAA;KAClD,CAAA;AAED,IAAA,IAAI,CAAC8b,eAAe,GAAGK,IAAI,CAACC,GAAG,EAAE,CAAA;IACjC,IAAI,CAACR,MAAM,GAAGF,OAAO,CAACW,qBAAqB,CAACrc,IAAI,CAAC,CAAA;AACnD,GAAA;AAEOsc,EAAAA,IAAIA,GAAA;AACT,IAAA,IAAI,IAAI,CAACV,MAAM,IAAI,CAAC,EAAE;MACpB,IAAI,CAACD,QAAQ,CAACY,oBAAoB,CAAC,IAAI,CAACX,MAAM,CAAC,CAAA;AAChD,KAAA;AAED,IAAA,IAAI,IAAI,CAACC,SAAS,IAAI,CAAC,EAAE;AACvBlN,MAAAA,YAAY,CAAC,IAAI,CAACkN,SAAS,CAAC,CAAA;AAC7B,KAAA;AAED,IAAA,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC,CAAA;AAChB,IAAA,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC,CAAA;AACrB,GAAA;EAEOW,aAAaA,CAACd,OAA2B,EAAA;IAC9C,IAAI,CAACY,IAAI,EAAE,CAAA;IACX,IAAI,CAACX,QAAQ,GAAGD,OAAO,CAAA;AACzB,GAAA;AACD;;AClED;;;AAGG;AAGH;;AAEG;AACH,MAAMe,WAAW,CAAA;EAMf,IAAWC,iBAAiBA;IAAK,OAAO,IAAI,CAACC,kBAAkB,CAAA;AAAE,GAAA;AAEjE;;AAEG;EACH,IAAWxR,OAAOA;IAAK,OAAO,IAAI,CAACC,QAAQ,CAAA;AAAE,GAAA;AAE7C;AACApb,EAAAA,WAAmBA,CAAA0sB,iBAA0B,EAAEE,QAAmB,EAAA;AAqDlE;AACQ,IAAA,IAAgB,CAAAC,gBAAA,GAAG,CAAC,MAAK;MAC/B,IAAIC,aAAa,GAAG,IAAI,CAAA;AAExB,MAAA,OAAQ,MAAK;AACX,QAAA,IAAIA,aAAa,EAAE;AACjBA,UAAAA,aAAa,GAAG,KAAK,CAAA;AAErB,UAAA,OAAA;AACD,SAAA;QACD,IAAI,CAACC,SAAS,EAAE,CAAA;OACjB,CAAA;AACH,KAAC,GAAG,CAAA;IAhEF,IAAI,CAACJ,kBAAkB,GAAGD,iBAAiB,CAAA;IAE3C,IAAI,CAACtR,QAAQ,GAAG,KAAK,CAAA;IACrB,IAAI,CAAC4R,eAAe,GAAG,IAAI,CAAA;IAC3B,IAAI,CAACD,SAAS,GAAGH,QAAQ,CAAA;AAC3B,GAAA;AAEA;;AAEG;EACIjU,MAAMA,CAACC,OAAoB,EAAA;IAChC,IAAI,IAAI,CAACwC,QAAQ,EAAE;MACjB,IAAI,CAACvC,OAAO,EAAE,CAAA;AACf,KAAA;IAED,IAAI,IAAI,CAAC8T,kBAAkB,IAAI,CAAC,CAAC7f,MAAM,CAACmgB,cAAc,EAAE;AACtD,MAAA,MAAMC,IAAI,GAAGtU,OAAO,CAACuU,qBAAqB,EAAE,CAAA;AAC5C,MAAA,MAAMC,eAAe,GAAGF,IAAI,CAACnZ,KAAK,KAAK,CAAC,IAAImZ,IAAI,CAAClZ,MAAM,KAAK,CAAC,CAAA;AAE7D,MAAA,MAAMqZ,cAAc,GAAG,IAAIJ,cAAc,CAACG,eAAe,GAAG,IAAI,CAACP,gBAAgB,GAAG,IAAI,CAACE,SAAS,CAAC,CAAA;AAEnGM,MAAAA,cAAc,CAACC,OAAO,CAAC1U,OAAO,CAAC,CAAA;MAE/B,IAAI,CAACoU,eAAe,GAAGK,cAAc,CAAA;AACtC,KAAA,MAAM;AACLvgB,MAAAA,MAAM,CAACkL,gBAAgB,CAACtO,QAAc,CAACtH,MAAM,EAAE,IAAI,CAAC2qB,SAAS,CAAC,CAAA;AAC/D,KAAA;IAED,IAAI,CAAC3R,QAAQ,GAAG,IAAI,CAAA;AAEpB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA;;AAEG;AACIvC,EAAAA,OAAOA,GAAA;AACZ,IAAA,IAAI,CAAC,IAAI,CAACuC,QAAQ,EAAE,OAAO,IAAI,CAAA;AAE/B,IAAA,MAAMiS,cAAc,GAAG,IAAI,CAACL,eAAe,CAAA;AAC3C,IAAA,IAAIK,cAAc,EAAE;MAClBA,cAAc,CAACE,UAAU,EAAE,CAAA;MAC3B,IAAI,CAACP,eAAe,GAAG,IAAI,CAAA;AAC5B,KAAA,MAAM;AACLlgB,MAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAACtH,MAAM,EAAE,IAAI,CAAC2qB,SAAS,CAAC,CAAA;AAClE,KAAA;IAED,IAAI,CAAC3R,QAAQ,GAAG,KAAK,CAAA;AAErB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAeD;;AC9CD;;;;AAIG;AACH,MAAMoS,QAAQ,CAAA;AAmBZ;;;;;AAKG;EACH,IAAWrS,OAAOA;IAAK,OAAO,IAAI,CAACC,QAAQ,CAAA;AAAE,GAAA;AAC7C;;AAEG;EACH,IAAWC,aAAaA;IAAK,OAAO,IAAI,CAACC,cAAc,CAAA;AAAE,GAAA;AACzD;;;;;AAKG;EACH,IAAWmS,OAAOA,GAAA;AAChB,IAAA,OAAO,IAAI,CAACrS,QAAQ,IAAI,CAAC,IAAI,CAACsS,YAAY,CAAA;AAC5C,GAAA;AAEA;;;;;AAKG;EACH,IAAWC,KAAKA;IAAK,OAAO,IAAI,CAACC,MAAM,CAAA;AAAE,GAAA;EACzC,IAAWD,KAAKA,CAACzsB,GAAW,EAAI;IAAA,IAAI,CAAC0sB,MAAM,GAAG1sB,GAAG,CAAA;AAAE,GAAA;AAEnD;;;;;AAKG;EACH,IAAW2sB,iBAAiBA;IAAK,OAAO,IAAI,CAACC,kBAAkB,CAAA;AAAE,GAAA;EACjE,IAAWD,iBAAiBA,CAAC3sB,GAAW,EAAI;IAAA,IAAI,CAAC4sB,kBAAkB,GAAG5sB,GAAG,CAAA;AAAE,GAAA;AAE3E;;;;;AAKG;EACH,IAAW6sB,KAAKA;IAAK,OAAO,IAAI,CAACC,MAAM,CAAA;AAAE,GAAA;EACzC,IAAWD,KAAKA,CAAC7sB,GAAW,EAAI;IAAA,IAAI,CAAC8sB,MAAM,GAAG9sB,GAAG,CAAA;AAAE,GAAA;AAEnD;;;;;AAKG;EACH,IAAW+sB,YAAYA;IAAK,OAAO,IAAI,CAACC,aAAa,CAAA;AAAE,GAAA;EACvD,IAAWD,YAAYA,CAAC/sB,GAAY,EAAI;IAAA,IAAI,CAACgtB,aAAa,GAAGhtB,GAAG,CAAA;AAAE,GAAA;AAElE;;;;;AAKG;EACH,IAAWitB,YAAYA;IAAK,OAAO,IAAI,CAACC,aAAa,CAAA;AAAE,GAAA;EACvD,IAAWD,YAAYA,CAACjtB,GAAY,EAAI;IAAA,IAAI,CAACktB,aAAa,GAAGltB,GAAG,CAAA;AAAE,GAAA;AAElE;;;;;AAKG;EACH,IAAWmtB,kBAAkBA;IAAK,OAAO,IAAI,CAACC,mBAAmB,CAAA;AAAE,GAAA;EACnE,IAAWD,kBAAkBA,CAACntB,GAAY,EAAI;IAAA,IAAI,CAACotB,mBAAmB,GAAGptB,GAAG,CAAA;AAAE,GAAA;AAE9E;;;;;;AAMG;AACHlB,EAAAA,WAAAA,CAAmBuuB,MAAe,EAAE3V,OAAoB,EAAE4V,OAA2C,EAAA;IA6H7F,IAAa,CAAAjS,aAAA,GAAG,MAAK;AAC3B,MAAA,IAAI,CAAC,IAAI,CAAC6R,aAAa,EAAE,OAAA;MAEzB,IAAI,CAACV,YAAY,GAAG,IAAI,CAAA;MACxB,IAAI,CAACe,aAAa,EAAE,CAAA;KACrB,CAAA;IAEO,IAAW,CAAAvR,WAAA,GAAG,MAAK;AACzB,MAAA,IAAI,CAACwR,2BAA2B,CAAC,IAAI,CAACd,MAAM,CAAC,CAAA;KAC9C,CAAA;IAEO,IAAa,CAAAe,aAAA,GAAG,MAAK;MAC3B,IAAI,CAAC9V,OAAO,EAAE,CAAA;KACf,CAAA;IAEO,IAAa,CAAA+V,aAAA,GAAG,MAAK;AAC3B,MAAA,IAAI,CAAC,IAAI,CAACV,aAAa,EAAE,OAAA;MACzB,IAAI,CAACR,YAAY,GAAG,IAAI,CAAA;MACxB,IAAI,CAACmB,SAAS,GAAG,IAAI,CAAA;KACtB,CAAA;IAEO,IAAa,CAAAC,aAAA,GAAG,MAAK;AAC3B,MAAA,IAAI,CAAC,IAAI,CAACZ,aAAa,EAAE,OAAA;MACzB,IAAI,CAACW,SAAS,GAAG,KAAK,CAAA;AACtB,MAAA,IAAI,CAACH,2BAA2B,CAAC,IAAI,CAACZ,kBAAkB,CAAC,CAAA;KAC1D,CAAA;AArJC,IAAA,IAAI,CAAC1c,OAAO,GAAGmd,MAAM,CAACtd,MAAM,CAAA;AAC5B,IAAA,IAAI,CAAC8d,QAAQ,GAAGR,MAAM,CAAC1Q,OAAO,CAAA;IAC9B,IAAI,CAACmR,QAAQ,GAAGpW,OAAO,CAAA;IAEvB,IAAI,CAACwC,QAAQ,GAAG,KAAK,CAAA;IACrB,IAAI,CAACsS,YAAY,GAAG,KAAK,CAAA;AACzB,IAAA,IAAI,CAACuB,kBAAkB,GAAG,CAAC,CAAC,CAAA;IAC5B,IAAI,CAACJ,SAAS,GAAG,KAAK,CAAA;IAEtB,MAAM;AACJlB,MAAAA,KAAK,GAAG,IAAI;AACZE,MAAAA,iBAAiB,GAAG,CAAC;AACrBE,MAAAA,KAAK,GAAG,CAAC;AACTE,MAAAA,YAAY,GAAG,KAAK;AACpBE,MAAAA,YAAY,GAAG,IAAI;AACnBE,MAAAA,kBAAkB,GAAG,KAAA;AAAK,KAC3B,GAAGxiB,eAAe,CAAC2iB,OAAO,CAAC,CAAA;AAE5B,IAAA,IAAI,CAAClT,cAAc,GAAG,CAACkT,OAAO,CAAA;IAC9B,IAAI,CAACZ,MAAM,GAAGD,KAAK,CAAA;IACnB,IAAI,CAACG,kBAAkB,GAAGD,iBAAiB,CAAA;IAC3C,IAAI,CAACG,MAAM,GAAGD,KAAK,CAAA;IACnB,IAAI,CAACG,aAAa,GAAGD,YAAY,CAAA;IACjC,IAAI,CAACG,aAAa,GAAGD,YAAY,CAAA;IACjC,IAAI,CAACG,mBAAmB,GAAGD,kBAAkB,CAAA;AAC/C,GAAA;AAEA;;;;AAIG;AACIza,EAAAA,OAAOA,GAAA;IACZ,IAAI,CAACiF,OAAO,EAAE,CAAA;AAChB,GAAA;AAEA;;;;;AAKG;EACIvI,MAAMA,CAACC,SAAiB,EAAA;AAC7B,IAAA,IAAI,CAAC,IAAI,CAAC6K,QAAQ,EAAE,OAAA;IACpB,IAAI,IAAI,CAACsS,YAAY,EAAE;MACrB,IAAI,IAAI,CAACY,mBAAmB,EAAE;QAC5B,IAAI,CAACzV,OAAO,EAAE,CAAA;AACf,OAAA;AAED,MAAA,OAAA;AACD,KAAA;AAED,IAAA,MAAM5H,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;IAC3B,MAAMR,KAAK,GAAG,CAAC,IAAI,CAACod,MAAM,GAAGzd,SAAS,GAAG,GAAG,CAAA;AAE5CU,IAAAA,MAAM,CAACzD,GAAG,GAAGnC,SAAS,CAAC4F,MAAM,CAACzD,GAAG,GAAGoD,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;AACpD,GAAA;AAEA;;;;AAIG;AACI+H,EAAAA,MAAMA,GAAA;AACX,IAAA,MAAMkF,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;AAC7B,IAAA,MAAMnW,OAAO,GAAG,IAAI,CAACoW,QAAQ,CAAA;IAE7B,IAAI,IAAI,CAAC5T,QAAQ,IAAIyC,OAAO,CAACsI,IAAI,CAAChL,OAAO,EAAE,OAAA;AAE3C0C,IAAAA,OAAO,CAAC5L,MAAM,CAACiM,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;AACjEsB,IAAAA,OAAO,CAAC5L,MAAM,CAACiM,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;AAE7DW,IAAAA,OAAO,CAAC9L,IAAI,CAACmM,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;AAC/DsB,IAAAA,OAAO,CAAC9L,IAAI,CAACmM,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;AAE3DW,IAAAA,OAAO,CAACsI,IAAI,CAACjI,EAAE,CAACrW,cAAc,CAACC,MAAM,EAAE,IAAI,CAAC6mB,aAAa,CAAC,CAAA;AAE1D/V,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACpH,WAAW,EAAE,IAAI,CAACssB,aAAa,EAAE,KAAK,CAAC,CAAA;AAC/EhW,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACnH,WAAW,EAAE,IAAI,CAACusB,aAAa,EAAE,KAAK,CAAC,CAAA;IAE/E,IAAI,CAAC1T,QAAQ,GAAG,IAAI,CAAA;IACpB,IAAI,CAACE,cAAc,GAAG,KAAK,CAAA;AAC7B,GAAA;AAEA;;;;AAIG;AACI4T,EAAAA,gBAAgBA,GAAA;IACrB,IAAI,CAACvW,MAAM,EAAE,CAAA;IACb,IAAI,CAAC+U,YAAY,GAAG,IAAI,CAAA;AACxB,IAAA,IAAI,CAACgB,2BAA2B,CAAC,IAAI,CAACd,MAAM,CAAC,CAAA;AAC/C,GAAA;AAEA;;;;AAIG;AACI/U,EAAAA,OAAOA,GAAA;AACZ,IAAA,IAAI,CAAC,IAAI,CAACuC,QAAQ,EAAE,OAAA;AAEpB,IAAA,MAAMyC,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;AAC7B,IAAA,MAAMnW,OAAO,GAAG,IAAI,CAACoW,QAAQ,CAAA;AAE7BnR,IAAAA,OAAO,CAAC5L,MAAM,CAAC4B,GAAG,CAAChM,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;AAClEsB,IAAAA,OAAO,CAAC5L,MAAM,CAAC4B,GAAG,CAAChM,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;AAE9DW,IAAAA,OAAO,CAAC9L,IAAI,CAAC8B,GAAG,CAAChM,cAAc,CAACvB,WAAW,EAAE,IAAI,CAACiW,aAAa,CAAC,CAAA;AAChEsB,IAAAA,OAAO,CAAC9L,IAAI,CAAC8B,GAAG,CAAChM,cAAc,CAACtB,SAAS,EAAE,IAAI,CAAC2W,WAAW,CAAC,CAAA;AAE5DW,IAAAA,OAAO,CAACsI,IAAI,CAACtS,GAAG,CAAChM,cAAc,CAACC,MAAM,EAAE,IAAI,CAAC6mB,aAAa,CAAC,CAAA;AAE3D/V,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACpH,WAAW,EAAE,IAAI,CAACssB,aAAa,EAAE,KAAK,CAAC,CAAA;AAClFhW,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACnH,WAAW,EAAE,IAAI,CAACusB,aAAa,EAAE,KAAK,CAAC,CAAA;IAElF,IAAI,CAAC1T,QAAQ,GAAG,KAAK,CAAA;IACrB,IAAI,CAACsS,YAAY,GAAG,KAAK,CAAA;IACzB,IAAI,CAACmB,SAAS,GAAG,KAAK,CAAA;IAEtB,IAAI,CAACJ,aAAa,EAAE,CAAA;AACtB,GAAA;EA6BQC,2BAA2BA,CAACf,KAAa,EAAA;IAC/C,IAAI,IAAI,CAACkB,SAAS,EAAE,OAAA;IAEpB,IAAI,CAACJ,aAAa,EAAE,CAAA;IAEpB,IAAId,KAAK,GAAG,CAAC,EAAE;AACb,MAAA,IAAI,CAACsB,kBAAkB,GAAGniB,MAAM,CAAC2R,UAAU,CAAC,MAAK;QAC/C,IAAI,CAACiP,YAAY,GAAG,KAAK,CAAA;AACzB,QAAA,IAAI,CAACuB,kBAAkB,GAAG,CAAC,CAAC,CAAA;OAC7B,EAAEtB,KAAK,CAAC,CAAA;AACV,KAAA,MAAM;MACL,IAAI,CAACD,YAAY,GAAG,KAAK,CAAA;AACzB,MAAA,IAAI,CAACuB,kBAAkB,GAAG,CAAC,CAAC,CAAA;AAC7B,KAAA;AACH,GAAA;AAEQR,EAAAA,aAAaA,GAAA;AACnB,IAAA,IAAI,IAAI,CAACQ,kBAAkB,IAAI,CAAC,EAAE;AAChCniB,MAAAA,MAAM,CAAC6R,YAAY,CAAC,IAAI,CAACsQ,kBAAkB,CAAC,CAAA;AAC5C,MAAA,IAAI,CAACA,kBAAkB,GAAG,CAAC,CAAC,CAAA;AAC7B,KAAA;AACH,GAAA;AACD;;ACvTD;;;;AAIG;AACH,MAAME,SAAU,SAAQhd,SAmBtB,CAAA;AAMA;;;;;AAKG;AACHnS,EAAAA,WAAmBA,CAAAovB,GAAiB,EAAEZ,OAAA,GAA4B,EAAE,EAAA;AAClE,IAAA,KAAK,EAAE,CAAA;AAQT;;;;AAIG;IACI,IAAO,CAAA5a,OAAA,GAAG,MAAK;MACpB,IAAI,CAACyb,IAAI,EAAE,CAAA;MACX,IAAI,CAACxb,GAAG,EAAE,CAAA;KACX,CAAA;IAyHO,IAAa,CAAAyb,aAAA,GAAG,MAAK;MAC3B,IAAI,CAACD,IAAI,EAAE,CAAA;AACX,MAAA,IAAI,CAACra,OAAO,CAACpT,MAAM,CAAC+E,MAAM,CAAC,CAAA;KAC5B,CAAA;IA1IC,IAAI,CAAC4oB,UAAU,GAAG,IAAI,CAAA;IACtB,IAAI,CAACC,WAAW,GAAG,IAAI,CAAA;IACvB,IAAI,CAACC,IAAI,GAAGL,GAAG,CAAA;IACf,IAAI,CAACM,QAAQ,GAAGlB,OAAO,CAAA;AACzB,GAAA;AAYA;;;;AAIG;AACUlK,EAAAA,WAAWA,GAAA;;AACtB;AACA,MAAA,MAAMqL,EAAE,GAAG7iB,MAAM,CAAC8iB,SAAS,CAACD,EAAE,CAAA;AAC9B,MAAA,IAAI,CAACA,EAAE,EAAE,OAAO,KAAK,CAAA;MAErB,OAAOA,EAAE,CAACE,kBAAkB,CAAChnB,UAAU,CAAC,CACrCkM,IAAI,CAAC8P,SAAS,IAAG;AAChB,QAAA,OAAOA,SAAS,CAAA;AAClB,OAAC,CAAC,CAACI,KAAK,CAAC,MAAK;AACZ,QAAA,OAAO,KAAK,CAAA;AACd,OAAC,CAAC,CAAA;AACN,KAAC,CAAA,CAAA;AAAA,GAAA;AAED;;;;AAIG;AACU6K,EAAAA,KAAKA,GAAA;;AAChB,MAAA,MAAMV,GAAG,GAAG,IAAI,CAACK,IAAI,CAAA;AAErB;AACA,MAAA,MAAME,EAAE,GAAG7iB,MAAM,CAAC8iB,SAAS,CAACD,EAAE,CAAA;MAC9B,IAAI,CAACA,EAAE,EAAE,OAAA;MAET,MAAMvL,WAAW,CAACU,uBAAuB,EAAE,CAAA;AAE3C,MAAA,MAAM0J,OAAO,GACRruB,MAAA,CAAAya,MAAA,CAAA;QACDmV,gBAAgB,EAAE,CAACjnB,kBAAkB,CAAA;AACtC,OAAA,EACE,IAAI,CAAC4mB,QAAQ,CACjB,CAAA;MAED,MAAMN,GAAG,CAACY,gBAAgB,EAAE,CAAA;MAE5B,MAAMC,OAAO,GAAG,MAAMN,EAAE,CAACO,cAAc,CAACrnB,UAAU,EAAE2lB,OAAO,CAAC,CAAA;AAC5DY,MAAAA,GAAG,CAACe,WAAW,CAACF,OAAO,CAAC,CAAA;MAExB,MAAMG,QAAQ,GAAG,MAAMH,OAAO,CAACI,qBAAqB,CAACvnB,kBAAkB,CAAC,CAAA;AAExE,MAAA,IAAI,CAACwnB,WAAW,CAACL,OAAO,EAAEG,QAAQ,CAAC,CAAA;AAEnC,MAAA,IAAI,CAACpb,OAAO,CAACpT,MAAM,CAAC8E,QAAQ,EAAE;AAC5BupB,QAAAA,OAAAA;AACD,OAAA,CAAC,CAAA;AACJ,KAAC,CAAA,CAAA;AAAA,GAAA;AAED;;;;AAIG;AACIZ,EAAAA,IAAIA,GAAA;AACT,IAAA,MAAMkB,SAAS,GAAG,IAAI,CAAChB,UAAU,CAAA;AAEjC,IAAA,IAAIgB,SAAS,EAAE;MACbA,SAAS,CAAC5lB,GAAG,EAAE,CACZsa,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAA;AACvB,KAAA;IAED,IAAI,CAACsK,UAAU,GAAG,IAAI,CAAA;IACtB,IAAI,CAACC,WAAW,GAAG,IAAI,CAAA;AACzB,GAAA;AAEA;;AAEG;EACIgB,SAASA,CAACvE,KAAc,EAAA;AAC7B,IAAA,MAAMmE,QAAQ,GAAG,IAAI,CAACZ,WAAW,CAAA;AAEjC,IAAA,IAAI,CAACY,QAAQ,EAAE,OAAO,KAAK,CAAA;AAE3B,IAAA,MAAMK,IAAI,GAAGxE,KAAK,CAACyE,aAAa,CAACN,QAAQ,CAAC,CAAA;IAE1C,OAAO,CAAC,CAACK,IAAI,CAAA;AACf,GAAA;AAEA;;AAEG;EACIE,YAAYA,CAAC1E,KAAc,EAAA;AAKhC,IAAA,MAAMgE,OAAO,GAAGhE,KAAK,CAACgE,OAAO,CAAA;IAC7B,MAAMQ,IAAI,GAAGxE,KAAK,CAACyE,aAAa,CAAC,IAAI,CAAClB,WAAY,CAAC,CAAA;AAEnD,IAAA,IAAI,CAACiB,IAAI,EAAE,OAAO,IAAI,CAAA;AAEtB,IAAA,MAAMG,OAAO,GAAGX,OAAO,CAACY,WAAW,CAACC,SAAS,CAAA;AAE7C,IAAA,IAAI,CAACF,OAAO,EAAE,OAAO,IAAI,CAAA;AAEzB,IAAA,OAAOH,IAAI,CAACM,KAAK,CAAC3vB,GAAG,CAAC0N,IAAI,IAAG;AAC3B,MAAA,MAAMkiB,QAAQ,GAAGJ,OAAO,CAACK,WAAW,CAACniB,IAAI,CAAE,CAAA;MAC3C,MAAMoiB,OAAO,GAAGpiB,IAAI,CAACqiB,SAAS,CAACC,OAAO,CAACC,MAAM,CAAA;MAE7C,OAAO;QACLL,QAAQ;QACRE,OAAO;QACPI,OAAO,EAAExiB,IAAI,CAAC4E,gBAAAA;OACf,CAAA;AACH,KAAC,CAAC,CAAA;AACJ,GAAA;AAEQ4c,EAAAA,WAAWA,CAACL,OAAkB,EAAEG,QAA0B,EAAA;IAChE,IAAI,CAACb,UAAU,GAAGU,OAAO,CAAA;IACzB,IAAI,CAACT,WAAW,GAAGY,QAAQ,CAAA;AAE3BH,IAAAA,OAAO,CAACjY,gBAAgB,CAACtO,QAAc,CAACxF,MAAM,EAAE,IAAI,CAACorB,aAAa,CAAC,CAAA;AACrE,GAAA;AAMD;;ACxLD;;;;AAIG;AACH,MAAMiC,OAAO,CAAA;AAcXvxB,EAAAA,WAAmBA,CAAA4Y,OAAoB,EAAE3F,QAAc,EAAA;IACrD,IAAI,CAAC2F,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAAC3F,QAAQ,GAAGA,QAAQ,CAAA;AAC1B,GAAA;AACD;;AC7BD;;;AAGG;AAyBH;;;;AAIG;AACH,MAAMue,eAAe,CAAA;AASnB;;;;;;AAMG;AACHxxB,EAAAA,WAAmBA,CAAAyxB,MAAmB,EAAEC,QAAuB,EAAE;AAC/D3f,IAAAA,IAAI,GAAG,KAAA;AACiB,GAAA,EAAA;AACxB,IAAA,IAAI,CAAC4f,YAAY,GAAG5nB,kBAAkB,CAAC,CAAA,CAAA,EAAIxE,aAAa,CAACK,iBAAiB,CAAA,CAAE,EAAE6rB,MAAM,CAAC,CAAA;IACrF,IAAI,CAACG,SAAS,GAAGF,QAAQ,CAAA;IACzB,IAAI,CAACG,SAAS,GAAG,EAAE,CAAA;IAEnB,IAAI,CAACC,KAAK,GAAG/f,IAAI,CAAA;AACnB,GAAA;AAEA;;;;AAIG;AACIggB,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMC,SAAS,GAAG,IAAI,CAACL,YAAY,CAAA;IACnC,IAAI,CAACK,SAAS,EAAE,OAAA;AAEhB,IAAA,MAAMC,UAAU,GAAG,EAAE,CAACC,KAAK,CAACrnB,KAAK,CAACmnB,SAAS,CAAC5G,gBAAgB,EAAK7lB,CAAAA,EAAAA,aAAa,CAACM,OAAS,CAAA,CAAA,CAAC,CAAkB,CAAA;AAC3G,IAAA,IAAI,CAACgsB,SAAS,GAAGI,UAAU,CAAC7wB,GAAG,CAACuI,EAAE,IAAI,IAAI,CAACwoB,aAAa,CAACxoB,EAAE,CAAC,CAAC,CAAA;AAC/D,GAAA;AAEA;;;;AAIG;EACIyoB,MAAMA,CAACnhB,MAAc,EAAA;AAC1B,IAAA,MAAMohB,QAAQ,GAAG,IAAI,CAACR,SAAS,CAAA;IAC/B,MAAMS,SAAS,GAAG,IAAI,CAACV,SAAS,CAAC7d,KAAK,GAAG,GAAG,CAAA;IAC5C,MAAMwe,UAAU,GAAG,IAAI,CAACX,SAAS,CAAC5d,MAAM,GAAG,GAAG,CAAA;AAC9C,IAAA,MAAMjC,IAAI,GAAGd,MAAM,CAACc,IAAI,CAAA;IACxB,MAAMygB,eAAe,GAAG,uBAAuB,CAAA;IAC/C,MAAMC,aAAa,GAAG,IAAI,CAACX,KAAK,GAAG,CAAS/f,MAAAA,EAAAA,IAAO,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAExDsgB,IAAAA,QAAQ,CAACpH,OAAO,CAACyH,OAAO,IAAG;AACzB,MAAA,MAAMzf,QAAQ,GAAGyf,OAAO,CAACzf,QAAQ,CAAA;AACjC,MAAA,MAAM0f,MAAM,GAAG5jB,IAAI,CAAC+C,MAAM,EAAE,CAAA;AAE5B/C,MAAAA,IAAI,CAAC6F,IAAI,CAAC+d,MAAM,EAAE1f,QAAQ,CAAC,CAAA;MAC3BlE,IAAI,CAAC6jB,aAAa,CAACD,MAAM,EAAEA,MAAM,EAAE1hB,MAAM,CAACuC,UAAU,CAAC,CAAA;MACrDzE,IAAI,CAAC6jB,aAAa,CAACD,MAAM,EAAEA,MAAM,EAAE1hB,MAAM,CAACyC,gBAAgB,CAAC,CAAA;AAE3D,MAAA,IAAIif,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QAClCD,OAAO,CAAC9Z,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACttB,aAAa,CAACO,eAAe,CAAC,CAAA;AAC/D,QAAA,OAAA;AACD,OAAA;MAED,MAAMgtB,SAAS,GAAGC,IAAI,CAAC/jB,UAAU,CAC/B2jB,MAAM,CAAC,CAAC,CAAC,GAAGL,SAAS,GAAGA,SAAS,EACjC,CAACK,MAAM,CAAC,CAAC,CAAC,GAAGJ,UAAU,GAAGA,UAAU,CACrC,CAAA;MAEDG,OAAO,CAAC9Z,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACvE,aAAa,CAACO,eAAe,CAAC,CAAA;AAC5D4sB,MAAAA,OAAO,CAAC9Z,OAAO,CAACmO,KAAK,CAACoK,SAAS,GAAG,CAChCqB,eAAe,EACF,CAAAM,UAAAA,EAAAA,SAAS,CAAC,CAAC,QAAQA,SAAS,CAAC,CAAC,CAAM,CAAA,GAAA,CAAA,EACjDL,aAAa,CACd,CAACnxB,IAAI,CAAC,GAAG,CAAC,CAAA;AACb,KAAC,CAAC,CAAA;AACJ,GAAA;EAEQ6wB,aAAaA,CAACvZ,OAAoB,EAAA;AACxC,IAAA,MAAMoa,MAAM,GAAGpa,OAAO,CAACqa,OAAO,CAACzlB,GAAG,CAAA;AAClC,IAAA,MAAM0lB,QAAQ,GAAGta,OAAO,CAACqa,OAAO,CAACxlB,KAAK,CAAA;AACtC,IAAA,MAAM0lB,WAAW,GAAGva,OAAO,CAACqa,OAAO,CAAChgB,QAAQ,CAAA;IAE5C,IAAI+f,MAAM,IAAIE,QAAQ,EAAE;MACtB,MAAM1lB,GAAG,GAAGwlB,MAAM,GAAGI,UAAU,CAACJ,MAAM,CAAC,GAAG,CAAC,CAAA;MAC3C,MAAMvlB,KAAK,GAAGylB,QAAQ,GAAGE,UAAU,CAACF,QAAQ,CAAC,GAAG,CAAC,CAAA;MAEjD,MAAMjgB,QAAQ,GAAG,IAAI,CAACogB,eAAe,CAAC7lB,GAAG,EAAEC,KAAK,CAAC,CAAA;AAEjD,MAAA,OAAO,IAAI8jB,OAAO,CAAC3Y,OAAO,EAAE3F,QAAQ,CAAC,CAAA;KACtC,MAAM,IAAIkgB,WAAW,EAAE;AACtB,MAAA,MAAMG,GAAG,GAAaH,WAAW,CAAC5mB,KAAK,CAAC,GAAG,CAAC,CAACnL,GAAG,CAACF,GAAG,IAAIkyB,UAAU,CAAClyB,GAAG,CAAC,CAAC,CAAA;AACxE,MAAA,IAAIoyB,GAAG,CAAC1nB,MAAM,GAAG,CAAC,EAAE;AAClB,QAAA,MAAM,IAAI9L,YAAY,CAACmD,KAAK,CAAChC,QAAQ,CAACD,iBAAiB,CAACmyB,WAAW,EAAE,qCAAqC,CAAC,EAAElwB,KAAK,CAACtB,KAAK,CAACX,iBAAiB,CAAC,CAAA;AAC5I,OAAA;MAED,OAAO,IAAIuwB,OAAO,CAAC3Y,OAAO,EAAE7J,IAAI,CAACC,UAAU,CAACskB,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACrE,KAAA,MAAM;AACL;AACA,MAAA,MAAMC,UAAU,GAAGxkB,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAE5C,MAAA,OAAO,IAAIuiB,OAAO,CAAC3Y,OAAO,EAAE2a,UAAU,CAAC,CAAA;AACxC,KAAA;AACH,GAAA;AAEQF,EAAAA,eAAeA,CAAC7lB,GAAW,EAAEC,KAAa,EAAA;AAChD,IAAA,MAAM+lB,MAAM,GAAGhmB,GAAG,GAAGxF,UAAU,CAAA;AAC/B,IAAA,MAAMyrB,QAAQ,GAAGhmB,KAAK,GAAGzF,UAAU,CAAA;AACnC,IAAA,MAAMiL,QAAQ,GAAGlE,IAAI,CAAC+C,MAAM,EAAE,CAAA;IAE9BmB,QAAQ,CAAC,CAAC,CAAC,GAAGjM,IAAI,CAACC,GAAG,CAACwsB,QAAQ,CAAC,CAAA;IAChCxgB,QAAQ,CAAC,CAAC,CAAC,GAAGjM,IAAI,CAAC+a,GAAG,CAAC0R,QAAQ,CAAC,CAAA;AAEhCxgB,IAAAA,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC,GAAGjM,IAAI,CAACC,GAAG,CAAC,CAACusB,MAAM,CAAC,CAAA;AAC7CvgB,IAAAA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAACA,QAAQ,CAAC,CAAC,CAAC,GAAGjM,IAAI,CAAC+a,GAAG,CAAC,CAACyR,MAAM,CAAC,CAAA;AAE9C,IAAA,OAAOvgB,QAAQ,CAAA;AACjB,GAAA;AACD;;ACjJD;;AAEG;AACH,MAAMygB,iBAAiB,CAAA;EASrB,IAAWC,KAAKA,GAAA;AAAK,IAAA,OAAO,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAACF,KAAK,CAAA;AAAE,GAAA;AAE1D3zB,EAAAA,WAAAA,CAAY0a,GAAe,EAAEkZ,QAAkB,EAAEE,OAAqC,EAAA;IACpF,IAAI,CAACpZ,GAAG,GAAGA,GAAG,CAAA;IACd,IAAI,CAACkZ,QAAQ,GAAGA,QAAQ,CAAA;IACxB,IAAI,CAACE,OAAO,GAAGA,OAAO,CAAA;AACxB,GAAA;AACD;;ACPD;;AAEG;AACH,MAAMC,YAAY,CAAA;EAYhB,IAAWtpB,MAAMA;IAAK,OAAO,IAAI,CAACupB,OAAO,CAAA;AAAE,GAAA;EAC3C,IAAWC,cAAcA;IAAK,OAAO,IAAI,CAACC,eAAe,CAAA;AAAE,GAAA;EAC3D,IAAWC,QAAQA;IAAK,OAAO,IAAI,CAACC,SAAS,CAAA;AAAE,GAAA;EAC/C,IAAWC,UAAUA,GAAK;IAAA,OAAO,IAAI,CAACD,SAAS,IAAI,CAAC,CAAC,IAAI,CAACE,WAAW,CAACC,GAAG,CAAA;AAAE,GAAA;EAC3E,IAAWC,IAAIA;IAAK,OAAO,IAAI,CAACC,YAAY,CAAA;AAAE,GAAA;EAC9C,IAAWC,KAAKA;IAAK,OAAO,IAAI,CAACC,MAAM,CAAA;AAAE,GAAA;AAEzC30B,EAAAA,WAAmBA,CAAAyK,MAAyB,EAAEiqB,KAAc,EAAA;IA4bpD,IAAc,CAAAE,cAAA,GAAG,MAAK;AAC5B,MAAA,MAAMnqB,MAAM,GAAG,IAAI,CAACupB,OAAO,CAAA;MAC3BvpB,MAAM,CAACZ,SAAS,CAACC,GAAG,CAACvE,aAAa,CAACG,QAAQ,CAAC,CAAA;MAC5C,IAAI,CAAC+uB,YAAY,GAAG,IAAI,CAAA;KACzB,CAAA;IAEO,IAAiB,CAAAI,iBAAA,GAAG,MAAK;AAC/B,MAAA,MAAMpqB,MAAM,GAAG,IAAI,CAACupB,OAAO,CAAA;MAC3BvpB,MAAM,CAACZ,SAAS,CAACgpB,MAAM,CAACttB,aAAa,CAACG,QAAQ,CAAC,CAAA;MAC/C,IAAI,CAAC+uB,YAAY,GAAG,KAAK,CAAA;KAC1B,CAAA;IArcC,IAAI,CAACT,OAAO,GAAGvpB,MAAM,CAAA;IACrB,IAAI,CAACgqB,YAAY,GAAG,KAAK,CAAA;IACzB,IAAI,CAACE,MAAM,GAAGD,KAAK,CAAA;IACnB,IAAI,CAACJ,WAAW,GAAG;AACjBC,MAAAA,GAAG,EAAE,IAAI;AACTO,MAAAA,WAAW,EAAE,IAAA;KACd,CAAA;AACH,GAAA;AAEOC,EAAAA,IAAIA,GAAA;AACT,IAAA,MAAMtqB,MAAM,GAAG,IAAI,CAACupB,OAAO,CAAA;IAE3B,MAAM;MAAEgB,EAAE;AAAEb,MAAAA,QAAAA;AAAU,KAAA,GAAG,IAAI,CAACc,WAAW,CAACxqB,MAAM,CAAC,CAAA;IAEjD,IAAI,CAACyqB,GAAG,GAAGF,EAAE,CAAA;IACb,IAAI,CAACd,eAAe,GAAGc,EAAE,CAACG,YAAY,CAACH,EAAE,CAACI,gBAAgB,CAAC,CAAA;IAC3D,IAAI,CAAChB,SAAS,GAAGD,QAAQ,CAAA;AAEzB,IAAA,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACnB,IAAI,CAACE,WAAW,CAACC,GAAG,GAAGS,EAAE,CAACK,YAAY,CAAC,yBAAyB,CAAC,CAAA;AAClE,KAAA;IAED,IAAI,CAACf,WAAW,CAACQ,WAAW,GAAGE,EAAE,CAACK,YAAY,CAAC,oBAAoB,CAAC,CAAA;AAEpE5qB,IAAAA,MAAM,CAACuN,gBAAgB,CAACtO,QAAc,CAACrG,YAAY,EAAE,IAAI,CAACuxB,cAAc,CAAC,CAAA;AACzEnqB,IAAAA,MAAM,CAACuN,gBAAgB,CAACtO,QAAc,CAACpG,gBAAgB,EAAE,IAAI,CAACuxB,iBAAiB,CAAC,CAAA;AAEhF;AACF,GAAA;;AAEOjhB,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMohB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AACnB,IAAA,MAAMzqB,MAAM,GAAG,IAAI,CAACupB,OAAO,CAAA;AAE3B,IAAA,IAAIgB,EAAE,EAAE;AACN;MACAA,EAAE,CAACM,UAAU,CAACN,EAAE,CAACO,YAAY,EAAE,IAAI,CAAC,CAAA;MACpCP,EAAE,CAACM,UAAU,CAACN,EAAE,CAACQ,oBAAoB,EAAE,IAAI,CAAC,CAAA;AAC7C,KAAA;AAED/qB,IAAAA,MAAM,CAACgO,mBAAmB,CAAC/O,QAAc,CAACrG,YAAY,EAAE,IAAI,CAACuxB,cAAc,CAAC,CAAA;AAC5EnqB,IAAAA,MAAM,CAACgO,mBAAmB,CAAC/O,QAAc,CAACpG,gBAAgB,EAAE,IAAI,CAACuxB,iBAAiB,CAAC,CAAA;AACrF,GAAA;AAEOY,EAAAA,gBAAgBA,GAAA;AACrB,IAAA,MAAMC,SAAS,GAAG,IAAI,CAACpB,WAAW,CAACQ,WAAW,CAAA;IAE9C,IAAI,CAACY,SAAS,EAAE,OAAA;IAEhBA,SAAS,CAACZ,WAAW,EAAE,CAAA;AACzB,GAAA;AAEOa,EAAAA,mBAAmBA,GAAA;AACxB,IAAA,MAAMD,SAAS,GAAG,IAAI,CAACpB,WAAW,CAACQ,WAAW,CAAA;IAE9C,IAAI,CAACY,SAAS,EAAE,OAAA;IAEhBA,SAAS,CAACE,cAAc,EAAE,CAAA;AAC5B,GAAA;AAEOC,EAAAA,KAAKA,GAAA;AACV,IAAA,MAAMb,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AAEnBF,IAAAA,EAAE,CAACa,KAAK,CAACb,EAAE,CAACc,gBAAgB,CAAC,CAAA;AAC/B,GAAA;AAEOhiB,EAAAA,MAAMA,GAAA;AACX,IAAA,MAAMkhB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AAEnBF,IAAAA,EAAE,CAAChE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEgE,EAAE,CAACe,kBAAkB,EAAEf,EAAE,CAACgB,mBAAmB,CAAC,CAAA;AAClE,GAAA;EAEOhF,QAAQA,CAAClqB,CAAS,EAAEsH,CAAS,EAAE2F,KAAa,EAAEC,MAAc,EAAA;AACjE,IAAA,MAAMghB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IAEnBF,EAAE,CAAChE,QAAQ,CAAClqB,CAAC,EAAEsH,CAAC,EAAE2F,KAAK,EAAEC,MAAM,CAAC,CAAA;AAClC,GAAA;AAEOiiB,EAAAA,SAASA,CAACrC,QAAkB,EAAEsC,aAA4B,EAAA;AAC/D,IAAA,MAAMC,SAAS,GAAG,IAAI,CAACC,gBAAgB,EAAE,CAAA;IAEzC,MAAM7B,GAAG,GAAG,IAAIb,iBAAiB,CAACyC,SAAS,EAAEvC,QAAQ,EAAE;AACrDC,MAAAA,QAAQ,EAAE,IAAI,CAACwC,aAAa,EAAE;AAC9BpjB,MAAAA,QAAQ,EAAE,IAAI,CAACojB,aAAa,EAAE;MAC9BC,EAAE,EAAE,IAAI,CAACD,aAAa,EAAA;AACvB,KAAA,CAAC,CAAA;AAEF,IAAA,IAAIF,SAAS,EAAE;AACb,MAAA,IAAI,CAACI,cAAc,CAACJ,SAAS,CAAC,CAAA;AAC9B,MAAA,IAAI,CAACK,mBAAmB,CAACjC,GAAG,EAAE2B,aAAa,CAAC,CAAA;AAC5C,MAAA,IAAI,CAACK,cAAc,CAAC,IAAI,CAAC,CAAA;MACzB,IAAI,CAACE,cAAc,EAAE,CAAA;AACtB,KAAA;AAED,IAAA,OAAOlC,GAAG,CAAA;AACZ,GAAA;AAEOmC,EAAAA,IAAIA,CAACnC,GAAsB,EAAE2B,aAA4B,EAAA;AAC9D,IAAA,MAAMlB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IAEnB,IAAIX,GAAG,CAAC7Z,GAAG,EAAE;AACX,MAAA,IAAI,CAAC6b,cAAc,CAAChC,GAAG,CAAC7Z,GAAG,CAAC,CAAA;AAC7B,KAAA,MAAM;AACL,MAAA,IAAI,CAAC8b,mBAAmB,CAACjC,GAAG,EAAE2B,aAAa,CAAC,CAAA;AAC7C,KAAA;AAEDlB,IAAAA,EAAE,CAAC2B,YAAY,CAAC3B,EAAE,CAAC4B,SAAS,EAAErC,GAAG,CAACZ,KAAK,EAAEqB,EAAE,CAAC6B,cAAc,EAAE,CAAC,CAAC,CAAA;IAE9D,IAAItC,GAAG,CAAC7Z,GAAG,EAAE;AACX,MAAA,IAAI,CAAC6b,cAAc,CAAC,IAAI,CAAC,CAAA;AAC1B,KAAA,MAAM;MACL,IAAI,CAACE,cAAc,EAAE,CAAA;AACtB,KAAA;AACH,GAAA;EAEOK,UAAUA,CAACvC,GAAsB,EAAA;IACtC,IAAIA,GAAG,CAAC7Z,GAAG,EAAE;AACX,MAAA,IAAI,CAACqc,gBAAgB,CAACxC,GAAG,CAAC7Z,GAAG,CAAC,CAAA;AAC/B,KAAA;IAED,IAAI,CAACsc,aAAa,CAACzC,GAAG,CAACT,OAAO,CAACD,QAAQ,CAAC,CAAA;IACxC,IAAI,CAACmD,aAAa,CAACzC,GAAG,CAACT,OAAO,CAAC7gB,QAAQ,CAAC,CAAA;IACxC,IAAI,CAAC+jB,aAAa,CAACzC,GAAG,CAACT,OAAO,CAACwC,EAAE,CAAC,CAAA;AACpC,GAAA;AAEOW,EAAAA,mBAAmBA,CAAoCC,OAAqB,EAAEC,QAAW,EAAA;AAC9F,IAAA,MAAMnC,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AAEnB,IAAA,MAAMkC,gBAAgB,GAAGj3B,MAAM,CAACk3B,IAAI,CAACF,QAAQ,CAAC,CAAC1c,MAAM,CAAC,CAAC6c,SAAS,EAAE1qB,GAAG,KAAI;MACvE0qB,SAAS,CAAC1qB,GAAc,CAAC,GAAGooB,EAAE,CAACuC,kBAAkB,CAACL,OAAO,EAAEtqB,GAAG,CAAE,CAAA;AAEhE,MAAA,OAAO0qB,SAAS,CAAA;KACjB,EAAE,EAAyB,CAAC,CAAA;IAE7B,OACKn3B,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC4c,0BAA0B,CAACN,OAAO,CAAC,CAAA,EACxCE,gBAAgB,CACnB,CAAA;AACJ,GAAA;AAEOK,EAAAA,oBAAoBA,CAACC,MAAgB,EAAEzmB,MAAc,EAAEilB,aAA4B,EAAA;AACxF,IAAA,MAAMlB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AAEnB,IAAA,MAAMkC,gBAAgB,GAAGlB,aAAa,CAACkB,gBAAgB,CAAA;AAEvD;AACA;AACA,IAAA,MAAM/F,MAAM,GAAGqG,MAAM,CAACrG,MAAM,CAAA;AAC5B,IAAA,MAAMsG,QAAQ,GAAGlkB,IAAI,CAAC3B,MAAM,EAAE,CAAA;IAC9B2B,IAAI,CAACuO,QAAQ,CAAC2V,QAAQ,EAAE1mB,MAAM,CAACuC,UAAU,EAAE6d,MAAM,CAAC,CAAA;IAElD2D,EAAE,CAAC4C,gBAAgB,CAACR,gBAAgB,CAACS,SAAS,EAAE,KAAK,EAAEF,QAAQ,CAAC,CAAA;AAChE3C,IAAAA,EAAE,CAAC4C,gBAAgB,CAACR,gBAAgB,CAACU,QAAQ,EAAE,KAAK,EAAE7mB,MAAM,CAACyC,gBAAgB,CAAC,CAAA;AAChF,GAAA;EAEOqkB,gBAAgBA,CAAC7B,aAA4B,EAAEyB,QAAc,EAAErG,OAAa,EAAE0G,QAAgB,EAAA;AACnG,IAAA,MAAMhD,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AAEnB,IAAA,MAAMkC,gBAAgB,GAAGlB,aAAa,CAACkB,gBAAgB,CAAA;IAEvDpC,EAAE,CAAC4C,gBAAgB,CAACR,gBAAgB,CAACS,SAAS,EAAE,KAAK,EAAEF,QAAQ,CAAC,CAAA;IAChE3C,EAAE,CAAC4C,gBAAgB,CAACR,gBAAgB,CAACU,QAAQ,EAAE,KAAK,EAAExG,OAAO,CAAC,CAAA;IAE9D,IAAI8F,gBAAgB,CAACa,IAAI,EAAE;MACzBjD,EAAE,CAACkD,SAAS,CAACd,gBAAgB,CAACa,IAAI,EAAED,QAAQ,CAAC,CAAA;AAC9C,KAAA;AACH,GAAA;EAEOG,cAAcA,CAACjC,aAA4B,EAAA;AAChD,IAAA,MAAMlB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AAEnB,IAAA,MAAMiC,QAAQ,GAAGjB,aAAa,CAACiB,QAAQ,CAAA;AACvC,IAAA,MAAMC,gBAAgB,GAAGlB,aAAa,CAACkB,gBAAgB,CAAA;AAEvD,IAAA,KAAK,MAAMxqB,GAAG,IAAIuqB,QAAQ,EAAE;AAC1B,MAAA,MAAMiB,OAAO,GAAGjB,QAAQ,CAACvqB,GAAG,CAAC,CAAA;AAC7B,MAAA,MAAMmN,QAAQ,GAAGqd,gBAAgB,CAACxqB,GAAG,CAAC,CAAA;MAEtC,IAAI,CAACwrB,OAAO,EAAE,SAAA;MAEd,IAAIA,OAAO,CAACC,WAAW,EAAE;QACvBD,OAAO,CAAC9nB,MAAM,CAAC0kB,EAAE,EAAEjb,QAAQ,EAAE,IAAI,CAACqa,SAAS,CAAC,CAAA;AAC7C,OAAA;AACF,KAAA;AACH,GAAA;EAEOkE,sBAAsBA,CAACpC,aAA4B,EAAA;AACxD,IAAA,MAAMlB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AAEnB,IAAA,MAAMiC,QAAQ,GAAGjB,aAAa,CAACiB,QAAQ,CAAA;AAEvC,IAAA,KAAK,MAAMvqB,GAAG,IAAIuqB,QAAQ,EAAE;AAC1B,MAAA,MAAMiB,OAAO,GAAGjB,QAAQ,CAACvqB,GAAG,CAAC,CAAA;MAE7B,IAAI,CAACwrB,OAAO,EAAE,SAAA;MAEd,IAAIA,OAAO,CAACC,WAAW,EAAE;AACvBD,QAAAA,OAAO,CAACxkB,OAAO,CAACohB,EAAE,CAAC,CAAA;AACpB,OAAA;AACF,KAAA;AAEDA,IAAAA,EAAE,CAACuD,aAAa,CAACrC,aAAa,CAACgB,OAAO,CAAC,CAAA;AACzC,GAAA;EAEOsB,UAAUA,CAACtC,aAA4B,EAAA;AAC5C,IAAA,MAAMlB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AAEnBF,IAAAA,EAAE,CAACwD,UAAU,CAACtC,aAAa,CAACgB,OAAO,CAAC,CAAA;AACtC,GAAA;AAEOuB,EAAAA,aAAaA,CAACC,YAAoB,EAAEC,cAAsB,EAAA;AAC/D,IAAA,MAAM3D,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AACnB,IAAA,MAAMgC,OAAO,GAAGlC,EAAE,CAACyD,aAAa,EAAG,CAAA;IAEnC,MAAMG,EAAE,GAAG,IAAI,CAACC,cAAc,CAAC7D,EAAE,CAAC8D,aAAa,EAAEJ,YAAY,CAAC,CAAA;IAC9D,MAAMK,EAAE,GAAG,IAAI,CAACF,cAAc,CAAC7D,EAAE,CAACgE,eAAe,EAAEL,cAAc,CAAC,CAAA;AAElE3D,IAAAA,EAAE,CAACiE,YAAY,CAAC/B,OAAO,EAAE0B,EAAE,CAAC,CAAA;AAC5B5D,IAAAA,EAAE,CAACiE,YAAY,CAAC/B,OAAO,EAAE6B,EAAE,CAAC,CAAA;IAC5B/D,EAAE,CAACkE,kBAAkB,CAAChC,OAAO,EAAE,CAAC,EAAE,UAAU,CAAC,CAAA;IAC7ClC,EAAE,CAACkE,kBAAkB,CAAChC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;AACvClC,IAAAA,EAAE,CAACmE,WAAW,CAACjC,OAAO,CAAC,CAAA;AAEvB,IAAA,IAAI,IAAI,CAACvC,MAAM,IAAI,CAACK,EAAE,CAACoE,mBAAmB,CAAClC,OAAO,EAAElC,EAAE,CAACqE,WAAW,CAAC,EAAE;MACnE,IAAI33B,SAAS,GAAkB,IAAI,CAAA;MAEnC,IAAI,CAACszB,EAAE,CAACsE,kBAAkB,CAACV,EAAE,EAAE5D,EAAE,CAACuE,cAAc,CAAC,EAAE;AACjD73B,QAAAA,SAAS,GAAGszB,EAAE,CAACwE,gBAAgB,CAACZ,EAAE,CAAC,CAAA;AACpC,OAAA,MAAM,IAAI,CAAC5D,EAAE,CAACsE,kBAAkB,CAACP,EAAE,EAAE/D,EAAE,CAACuE,cAAc,CAAC,EAAE;AACxD73B,QAAAA,SAAS,GAAGszB,EAAE,CAACwE,gBAAgB,CAACT,EAAE,CAAC,CAAA;AACpC,OAAA;MAED,MAAM,IAAIj5B,YAAY,CAACmD,KAAK,CAAChC,QAAQ,CAACF,sBAAsB,CAACi0B,EAAE,CAACyE,iBAAiB,CAACvC,OAAO,CAAC,EAAEx1B,SAAS,CAAC,EAAEuB,KAAK,CAACtB,KAAK,CAACZ,sBAAsB,CAAC,CAAA;AAC5I,KAAA;AAEDi0B,IAAAA,EAAE,CAAC0E,YAAY,CAACd,EAAE,CAAC,CAAA;AACnB5D,IAAAA,EAAE,CAAC0E,YAAY,CAACX,EAAE,CAAC,CAAA;AAEnB,IAAA,OAAO7B,OAAO,CAAA;AAChB,GAAA;EAEOyC,kBAAkBA,CAACC,OAAgB,EAAA;AACxC,IAAA,MAAM5E,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AACnB,IAAA,MAAM2E,OAAO,GAAG7E,EAAE,CAAC8E,aAAa,EAAG,CAAA;IAEnC9E,EAAE,CAAC+E,WAAW,CAAC/E,EAAE,CAACgF,UAAU,EAAEH,OAAO,CAAC,CAAA;AACtC7E,IAAAA,EAAE,CAACiF,aAAa,CAACjF,EAAE,CAACgF,UAAU,EAAEhF,EAAE,CAACkF,kBAAkB,EAAElF,EAAE,CAACnuB,MAAM,CAAC,CAAA;AACjEmuB,IAAAA,EAAE,CAACiF,aAAa,CAACjF,EAAE,CAACgF,UAAU,EAAEhF,EAAE,CAACmF,kBAAkB,EAAEnF,EAAE,CAACnuB,MAAM,CAAC,CAAA;AACjEmuB,IAAAA,EAAE,CAACiF,aAAa,CAACjF,EAAE,CAACgF,UAAU,EAAEhF,EAAE,CAACoF,cAAc,EAAER,OAAO,CAACzS,KAAK,CAAC,CAAA;AACjE6N,IAAAA,EAAE,CAACiF,aAAa,CAACjF,EAAE,CAACgF,UAAU,EAAEhF,EAAE,CAACqF,cAAc,EAAET,OAAO,CAACtS,KAAK,CAAC,CAAA;IAEjE,IAAI,CAACsS,OAAO,CAACrS,OAAO,EAAE,IAAI,IAAI,CAAC6M,SAAS,EAAE;MACxC,MAAMkG,GAAG,GAAGtF,EAA4B,CAAA;MAExCsF,GAAG,CAACC,YAAY,CAACD,GAAG,CAACN,UAAU,EAAE,CAAC,EAAEM,GAAG,CAACE,KAAK,EAAEZ,OAAO,CAAC7lB,KAAK,EAAE6lB,OAAO,CAAC5lB,MAAM,CAAC,CAAA;AAC9E,KAAA;AAED,IAAA,OAAO6lB,OAAO,CAAA;AAChB,GAAA;AAEOY,EAAAA,sBAAsBA,CAACb,OAAgB,EAAEtuB,IAAY,EAAA;AAC1D,IAAA,MAAM0pB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AACnB,IAAA,MAAM2E,OAAO,GAAG7E,EAAE,CAAC8E,aAAa,EAAG,CAAA;IAEnC9E,EAAE,CAAC+E,WAAW,CAAC/E,EAAE,CAAC0F,gBAAgB,EAAEb,OAAO,CAAC,CAAA;AAC5C7E,IAAAA,EAAE,CAACiF,aAAa,CAACjF,EAAE,CAAC0F,gBAAgB,EAAE1F,EAAE,CAACkF,kBAAkB,EAAElF,EAAE,CAACnuB,MAAM,CAAC,CAAA;AACvEmuB,IAAAA,EAAE,CAACiF,aAAa,CAACjF,EAAE,CAAC0F,gBAAgB,EAAE1F,EAAE,CAACmF,kBAAkB,EAAEnF,EAAE,CAACnuB,MAAM,CAAC,CAAA;AACvEmuB,IAAAA,EAAE,CAACiF,aAAa,CAACjF,EAAE,CAAC0F,gBAAgB,EAAE1F,EAAE,CAACoF,cAAc,EAAER,OAAO,CAACzS,KAAK,CAAC,CAAA;AACvE6N,IAAAA,EAAE,CAACiF,aAAa,CAACjF,EAAE,CAAC0F,gBAAgB,EAAE1F,EAAE,CAACqF,cAAc,EAAET,OAAO,CAACtS,KAAK,CAAC,CAAA;IAEvE,IAAI,IAAI,CAAC8M,SAAS,EAAE;MAClB,MAAMkG,GAAG,GAAGtF,EAA4B,CAAA;AAExCsF,MAAAA,GAAG,CAACC,YAAY,CAACD,GAAG,CAACI,gBAAgB,EAAE,CAAC,EAAEJ,GAAG,CAACE,KAAK,EAAElvB,IAAI,EAAEA,IAAI,CAAC,CAAA;AACjE,KAAA;AAED,IAAA,OAAOuuB,OAAO,CAAA;AAChB,GAAA;AAEa7J,EAAAA,gBAAgBA,GAAA;;AAC3B,MAAA,MAAMgF,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AACnB,MAAA,MAAMyF,UAAU,GAAG3F,EAAE,CAAC4F,oBAAoB,EAAE,CAAA;AAE5C,MAAA,IAAID,UAAU,IAAIA,UAAU,CAACE,YAAY,KAAK,IAAI,EAAE;QAClD,MAAM7F,EAAE,CAAChF,gBAAgB,EAAE,CAAA;AAC5B,OAAA;AACH,KAAC,CAAA,CAAA;AAAA,GAAA;EAEMG,WAAWA,CAACF,OAAkB,EAAA;AACnC,IAAA,MAAM+E,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IACnB,MAAM4F,OAAO,GAAG,IAAIC,YAAY,CAAC9K,OAAO,EAAE+E,EAAE,CAAC,CAAA;IAC7C/E,OAAO,CAAC+K,iBAAiB,CAAC;AAAElK,MAAAA,SAAS,EAAEgK,OAAAA;AAAS,KAAA,CAAC,CAAA;AACnD,GAAA;EAEOG,WAAWA,CAAChP,KAAc,EAAA;AAC/B,IAAA,MAAM+I,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AACnB,IAAA,MAAMjF,OAAO,GAAGhE,KAAK,CAACgE,OAAO,CAAA;AAC7B,IAAA,MAAMa,SAAS,GAAGb,OAAO,CAACY,WAAW,CAACC,SAAU,CAAA;IAEhDkE,EAAE,CAACkG,eAAe,CAAClG,EAAE,CAACmG,WAAW,EAAErK,SAAS,CAACsK,WAAW,CAAC,CAAA;AAC3D,GAAA;AAEOC,EAAAA,qBAAqBA,GAAA;AAC1B,IAAA,MAAMrG,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IACnBF,EAAE,CAACkG,eAAe,CAAClG,EAAE,CAACmG,WAAW,EAAE,IAAI,CAAC,CAAA;AAC1C,GAAA;AAEQ9E,EAAAA,aAAaA,GAAA;AACnB,IAAA,OAAO,IAAI,CAACnB,GAAG,CAACoG,YAAY,EAAG,CAAA;AACjC,GAAA;EAEQtE,aAAaA,CAACuE,MAAmB,EAAA;AACvC,IAAA,OAAO,IAAI,CAACrG,GAAG,CAACsG,YAAY,CAACD,MAAM,CAAC,CAAA;AACtC,GAAA;AAEQnF,EAAAA,gBAAgBA,GAAA;AACtB,IAAA,MAAMpB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IAEnB,IAAI,IAAI,CAACd,SAAS,EAAE;MAClB,OAAQY,EAA6B,CAACyG,iBAAiB,EAAG,CAAA;AAC3D,KAAA,MAAM;AACL,MAAA,MAAMC,GAAG,GAAG,IAAI,CAACpH,WAAW,CAACC,GAAG,CAAA;AAEhC,MAAA,OAAO,CAAAmH,GAAG,KAAA,IAAA,IAAHA,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAHA,GAAG,CAAEC,oBAAoB,EAAE,KAAI,IAAI,CAAA;AAC3C,KAAA;AACH,GAAA;EAEQpF,cAAcA,CAAChC,GAAkC,EAAA;AACvD,IAAA,MAAMS,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IAEnB,IAAI,IAAI,CAACd,SAAS,EAAE;AACjBY,MAAAA,EAA6B,CAAC4G,eAAe,CAACrH,GAAG,CAAC,CAAA;AACpD,KAAA,MAAM;AACL,MAAA,MAAMmH,GAAG,GAAG,IAAI,CAACpH,WAAW,CAACC,GAAG,CAAA;AAEhCmH,MAAAA,GAAG,KAAA,IAAA,IAAHA,GAAG,KAAH,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,GAAG,CAAEG,kBAAkB,CAACtH,GAAG,CAAC,CAAA;AAC7B,KAAA;AACH,GAAA;EAEQwC,gBAAgBA,CAACxC,GAAkC,EAAA;AACzD,IAAA,MAAMS,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IAEnB,IAAI,IAAI,CAACd,SAAS,EAAE;AACjBY,MAAAA,EAA6B,CAAC8G,iBAAiB,CAACvH,GAAG,CAAC,CAAA;AACtD,KAAA,MAAM;AACL,MAAA,MAAMmH,GAAG,GAAG,IAAI,CAACpH,WAAW,CAACC,GAAG,CAAA;AAEhCmH,MAAAA,GAAG,KAAA,IAAA,IAAHA,GAAG,KAAH,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,GAAG,CAAEK,oBAAoB,CAACxH,GAAG,CAAC,CAAA;AAC/B,KAAA;AACH,GAAA;AAEQiC,EAAAA,mBAAmBA,CAACjC,GAAsB,EAAE2B,aAA4B,EAAA;AAC9E,IAAA,MAAMtC,QAAQ,GAAGW,GAAG,CAACX,QAAQ,CAAA;AAE7B,IAAA,IAAI,CAACoI,mBAAmB,CAACpI,QAAQ,CAACC,QAAQ,EAAEU,GAAG,CAACT,OAAO,CAACD,QAAQ,CAAC,CAAA;AACjE,IAAA,IAAI,CAACoI,oBAAoB,CAACrI,QAAQ,CAACsI,QAAQ,EAAEhG,aAAa,CAACgB,OAAO,EAAE,UAAU,EAAE3C,GAAG,CAACT,OAAO,CAAC7gB,QAAQ,CAAC,CAAA;AACrG,IAAA,IAAI,CAACgpB,oBAAoB,CAACrI,QAAQ,CAACuI,GAAG,EAAEjG,aAAa,CAACgB,OAAO,EAAE,IAAI,EAAE3C,GAAG,CAACT,OAAO,CAACwC,EAAE,CAAC,CAAA;AACtF,GAAA;AAEQG,EAAAA,cAAcA,GAAA;AACpB,IAAA,MAAMzB,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IAEnBF,EAAE,CAACM,UAAU,CAACN,EAAE,CAACQ,oBAAoB,EAAE,IAAI,CAAC,CAAA;IAC5CR,EAAE,CAACM,UAAU,CAACN,EAAE,CAACO,YAAY,EAAE,IAAI,CAAC,CAAA;AACtC,GAAA;AAEQyG,EAAAA,mBAAmBA,CAACnI,QAAiC,EAAE0H,MAAmB,EAAA;AAChF,IAAA,MAAMvG,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IAEnBF,EAAE,CAACM,UAAU,CAACN,EAAE,CAACQ,oBAAoB,EAAE+F,MAAM,CAAC,CAAA;AAC9CvG,IAAAA,EAAE,CAACoH,UAAU,CAACpH,EAAE,CAACQ,oBAAoB,EAAE3B,QAAQ,CAACwI,IAAI,EAAErH,EAAE,CAACsH,WAAW,CAAC,CAAA;AACvE,GAAA;EAEQL,oBAAoBA,CAACM,SAAmC,EAAErF,OAAqB,EAAE52B,IAAY,EAAEi7B,MAAmB,EAAA;AACxH,IAAA,MAAMvG,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IACnB,MAAMsH,cAAc,GAAGxH,EAAE,CAACyH,iBAAiB,CAACvF,OAAO,EAAE52B,IAAI,CAAC,CAAA;AAE1D;IACA,IAAIk8B,cAAc,GAAG,CAAC,EAAE,OAAA;IAExBxH,EAAE,CAACM,UAAU,CAACN,EAAE,CAACO,YAAY,EAAEgG,MAAM,CAAC,CAAA;AACtCvG,IAAAA,EAAE,CAACoH,UAAU,CAACpH,EAAE,CAACO,YAAY,EAAEgH,SAAS,CAACF,IAAI,EAAErH,EAAE,CAACsH,WAAW,CAAC,CAAA;AAC9DtH,IAAAA,EAAE,CAAC0H,mBAAmB,CAACF,cAAc,EAAED,SAAS,CAACI,QAAQ,EAAE3H,EAAE,CAAC4H,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACjF5H,IAAAA,EAAE,CAAC6H,uBAAuB,CAACL,cAAc,CAAC,CAAA;AAC5C,GAAA;AAEQ3D,EAAAA,cAAcA,CAACx3B,IAAY,EAAEwnB,GAAW,EAAA;AAC9C,IAAA,MAAMmM,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;AACnB,IAAA,MAAM4H,MAAM,GAAG9H,EAAE,CAAC+H,YAAY,CAAC17B,IAAI,CAAE,CAAA;AAErC2zB,IAAAA,EAAE,CAACgI,YAAY,CAACF,MAAM,EAAEjU,GAAG,CAAC,CAAA;AAC5BmM,IAAAA,EAAE,CAACiI,aAAa,CAACH,MAAM,CAAC,CAAA;AAExB,IAAA,OAAOA,MAAM,CAAA;AACf,GAAA;EAEQtF,0BAA0BA,CAACN,OAAqB,EAAA;AACtD,IAAA,MAAMlC,EAAE,GAAG,IAAI,CAACE,GAAG,CAAA;IAEnB,OAAO;MACL2C,SAAS,EAAE7C,EAAE,CAACuC,kBAAkB,CAACL,OAAO,EAAE,WAAW,CAAE;AACvDY,MAAAA,QAAQ,EAAE9C,EAAE,CAACuC,kBAAkB,CAACL,OAAO,EAAE,UAAU,CAAA;KACpD,CAAA;AACH,GAAA;EAEQjC,WAAWA,CAACxqB,MAAyB,EAAA;AAI3C,IAAA,MAAMyyB,gBAAgB,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,oBAAoB,EAAE,WAAW,EAAE,WAAW,CAAC,CAAA;IAC5F,IAAIxR,OAAO,GAAiC,IAAI,CAAA;IAChD,IAAIyI,QAAQ,GAAG,KAAK,CAAA;AACpB,IAAA,MAAMgJ,iBAAiB,GAAG;AACxBC,MAAAA,qBAAqB,EAAE,KAAK;AAC5BC,MAAAA,SAAS,EAAE,KAAA;KACZ,CAAA;AAED,IAAA,MAAMC,2BAA2B,GAAGC,CAAC,IAAIA,CAAC,CAACC,aAAa,CAAA;IAExD/yB,MAAM,CAACuN,gBAAgB,CAACtO,QAAc,CAACtG,oBAAoB,EAAEk6B,2BAA2B,CAAC,CAAA;AAEzF,IAAA,KAAK,MAAMG,UAAU,IAAIP,gBAAgB,EAAE;MACzC,IAAI;QACFxR,OAAO,GAAGjhB,MAAM,CAACizB,UAAU,CAACD,UAAU,EAAEN,iBAAiB,CAA0B,CAAA;QACnFhJ,QAAQ,GAAGsJ,UAAU,KAAK,QAAQ,CAAA;AACnC,OAAA,CAAC,OAAOryB,CAAC,EAAE,EAAE;AACd,MAAA,IAAIsgB,OAAO,EAAE;AACX,QAAA,MAAA;AACD,OAAA;AACF,KAAA;IAEDjhB,MAAM,CAACgO,mBAAmB,CAAC/O,QAAc,CAACtG,oBAAoB,EAAEk6B,2BAA2B,CAAC,CAAA;IAE5F,IAAI,CAAC5R,OAAO,EAAE;AACZ,MAAA,MAAM,IAAI5rB,YAAY,CAACmD,KAAK,CAAChC,QAAQ,CAACL,mBAAmB,EAAEqC,KAAK,CAACtB,KAAK,CAACf,mBAAmB,CAAC,CAAA;AAC5F,KAAA;IAED,OAAO;AACLo0B,MAAAA,EAAE,EAAEtJ,OAAO;AACXyI,MAAAA,QAAAA;KACD,CAAA;AACH,GAAA;AAaD;;AChfD;;;AAGG;AAOH;;;;AAIG;AACH,MAAMwJ,aAAa,CAAA;AAOjB;;;;AAIG;EACH,IAAWlzB,MAAMA;IAAK,OAAO,IAAI,CAACupB,OAAO,CAAA;AAAE,GAAA;AAC3C;;;;AAIG;EACH,IAAWjgB,KAAKA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC6pB,YAAY,CAAC92B,CAAC,CAAA;AAAE,GAAA;AACjD;;;;AAIG;EACH,IAAWkN,MAAMA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC4pB,YAAY,CAACxvB,CAAC,CAAA;AAAE,GAAA;AAClD;;;;;;;;AAQG;EACH,IAAWyvB,UAAUA;IAAK,OAAO,IAAI,CAACC,WAAW,CAAA;AAAE,GAAA;AACnD;;;;;;;;;AASG;EACH,IAAW9xB,MAAMA,GAAK;IAAA,OAAO,IAAI,CAAC4xB,YAAY,CAAC92B,CAAC,GAAG,IAAI,CAAC82B,YAAY,CAACxvB,CAAC,CAAA;AAAE,GAAA;AAExE;;;;;AAKG;AACHpO,EAAAA,WAAmBA,CAAAyK,MAAyB,EAAEiqB,KAAc,EAAA;IAC1D,IAAI,CAACV,OAAO,GAAGvpB,MAAM,CAAA;IACrB,IAAI,CAACmzB,YAAY,GAAG;AAAE92B,MAAAA,CAAC,EAAE,CAAC;AAAEsH,MAAAA,CAAC,EAAE,CAAA;KAAG,CAAA;IAClC,IAAI,CAAC0vB,WAAW,GAAG,CAAC,CAAA;IACpB,IAAI,CAAC1O,GAAG,GAAG,IAAI2E,YAAY,CAACtpB,MAAM,EAAEiqB,KAAK,CAAC,CAAA;AAC5C,GAAA;AAEA;;;;AAIG;AACI9gB,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMnJ,MAAM,GAAG,IAAI,CAACupB,OAAO,CAAA;AAE3B,IAAA,IAAI,CAAC5E,GAAG,CAACxb,OAAO,EAAE,CAAA;IAClBnJ,MAAM,CAACsJ,KAAK,GAAG,CAAC,CAAA;IAChBtJ,MAAM,CAACuJ,MAAM,GAAG,CAAC,CAAA;AACnB,GAAA;AAEA;;;;AAIG;AACIF,EAAAA,MAAMA,GAAA;AACX,IAAA,MAAMrJ,MAAM,GAAG,IAAI,CAACupB,OAAO,CAAA;AAC3B,IAAA,MAAM+J,UAAU,GAAG,IAAI,CAACH,YAAY,CAAA;AACpC,IAAA,MAAMI,gBAAgB,GAAGlxB,MAAM,CAACkxB,gBAAgB,CAAA;AAEhDD,IAAAA,UAAU,CAACj3B,CAAC,GAAG2D,MAAM,CAACwzB,WAAW,CAAA;AACjCF,IAAAA,UAAU,CAAC3vB,CAAC,GAAG3D,MAAM,CAACyzB,YAAY,CAAA;AAElCzzB,IAAAA,MAAM,CAACsJ,KAAK,GAAGgqB,UAAU,CAACj3B,CAAC,GAAGk3B,gBAAgB,CAAA;AAC9CvzB,IAAAA,MAAM,CAACuJ,MAAM,GAAG+pB,UAAU,CAAC3vB,CAAC,GAAG4vB,gBAAgB,CAAA;IAE/C,IAAI,CAACF,WAAW,GAAGE,gBAAgB,CAAA;AACnC,IAAA,IAAI,CAAC5O,GAAG,CAACtb,MAAM,EAAE,CAAA;AACnB,GAAA;AAEA;;;;;;AAMG;AACIse,EAAAA,MAAMA,CAAC+L,IAAkB,EAAEltB,MAAc,EAAA;AAC9C,IAAA,MAAMme,GAAG,GAAG,IAAI,CAACA,GAAG,CAAA;IACpB,IAAIA,GAAG,CAACoF,IAAI,EAAE,OAAA;IAEdpF,GAAG,CAACyG,KAAK,EAAE,CAAA;AACXzG,IAAAA,GAAG,CAACoJ,UAAU,CAAC2F,IAAI,CAACjH,OAAO,CAAC,CAAA;IAC5B9H,GAAG,CAACqI,oBAAoB,CAAC0G,IAAI,EAAEltB,MAAM,EAAEktB,IAAI,CAACjH,OAAO,CAAC,CAAA;IACpDiH,IAAI,CAAC7tB,MAAM,CAAC;AAAEW,MAAAA,MAAAA;AAAM,KAAE,CAAC,CAAA;AACvBme,IAAAA,GAAG,CAAC+I,cAAc,CAACgG,IAAI,CAACjH,OAAO,CAAC,CAAA;IAChC9H,GAAG,CAACsH,IAAI,CAACyH,IAAI,CAAC5J,GAAG,EAAE4J,IAAI,CAACjH,OAAO,CAAC,CAAA;AAClC,GAAA;AAEA;;;;;;;;AAQG;AACIkH,EAAAA,QAAQA,CAACD,IAAkB,EAAEE,EAAa,EAAEpS,KAAc,EAAA;AAC/D,IAAA,MAAMmD,GAAG,GAAG,IAAI,CAACA,GAAG,CAAA;AACpB,IAAA,MAAMkP,SAAS,GAAGD,EAAE,CAAC1N,YAAY,CAAC1E,KAAK,CAAC,CAAA;AAExC,IAAA,IAAI,CAACqS,SAAS,IAAI,CAACH,IAAI,EAAE,OAAA;AAEzB/O,IAAAA,GAAG,CAAC6L,WAAW,CAAChP,KAAK,CAAC,CAAA;AACtBmD,IAAAA,GAAG,CAACoJ,UAAU,CAAC2F,IAAI,CAACjH,OAAO,CAAC,CAAA;AAC5B9H,IAAAA,GAAG,CAAC+I,cAAc,CAACgG,IAAI,CAACjH,OAAO,CAAC,CAAA;AAEhCoH,IAAAA,SAAS,CAACrT,OAAO,CAAC,CAACsT,GAAG,EAAEvG,QAAQ,KAAI;AAClC,MAAA,MAAMhH,QAAQ,GAAGuN,GAAG,CAACvN,QAAQ,CAAA;AAC7B;AACA;AACA,MAAA,MAAM2G,QAAQ,GAAGlkB,IAAI,CAACuO,QAAQ,CAACvO,IAAI,CAAC3B,MAAM,EAAE,EAAEysB,GAAG,CAACrN,OAAO,EAAEiN,IAAI,CAAC9M,MAAM,CAAC,CAAA;AAEvEjC,MAAAA,GAAG,CAAC4B,QAAQ,CAACA,QAAQ,CAAClqB,CAAC,EAAEkqB,QAAQ,CAAC5iB,CAAC,EAAE4iB,QAAQ,CAACjd,KAAK,EAAEid,QAAQ,CAAChd,MAAM,CAAC,CAAA;AACrEob,MAAAA,GAAG,CAAC2I,gBAAgB,CAACoG,IAAI,CAACjH,OAAO,EAAES,QAAQ,EAAE4G,GAAG,CAACjN,OAAO,EAAE0G,QAAQ,CAAC,CAAA;MACnE5I,GAAG,CAACsH,IAAI,CAACyH,IAAI,CAAC5J,GAAG,EAAE4J,IAAI,CAACjH,OAAO,CAAC,CAAA;AAClC,KAAC,CAAC,CAAA;AACJ,GAAA;AACD;;ACxFD;;;;;;AAMG;AACH,MAAMsH,OAAQ,SAAQrsB,SAAwB,CAAA;AAmC5C;;;;;;;;;;;;;;;;;AAiBG;EACH,IAAWsf,MAAMA;IAAK,OAAO,IAAI,CAACgN,OAAO,CAAA;AAAE,GAAA;AAC3C;;;;;AAKG;EACH,IAAW/M,QAAQA;IAAK,OAAO,IAAI,CAACE,SAAS,CAAA;AAAE,GAAA;AAC/C;;;;;AAKG;EACH,IAAW3gB,MAAMA;IAAK,OAAO,IAAI,CAACG,OAAO,CAAA;AAAE,GAAA;AAC3C;;;;;AAKG;EACH,IAAWyM,OAAOA;IAAK,OAAO,IAAI,CAACkR,QAAQ,CAAA;AAAE,GAAA;AAC7C;;;;;;;;;;;AAWG;EACH,IAAWsP,EAAEA;IAAK,OAAO,IAAI,CAACK,GAAG,CAAA;AAAE,GAAA;AACnC;;;;;;;AAOG;EACH,IAAWhM,OAAOA;IAAK,OAAO,IAAI,CAACiM,QAAQ,CAAA;AAAE,GAAA;AAC7C;;;;;;;;;;;;;;;AAeG;EACH,IAAWC,OAAOA;IAAK,OAAO,IAAI,CAACC,QAAQ,CAAA;AAAE,GAAA;AAC7C;;;;;;;;;;AAUG;EACH,IAAWC,UAAUA;IAAK,OAAO,IAAI,CAACC,WAAW,CAAA;AAAE,GAAA;EACnD,IAAWD,UAAUA,CAAC59B,GAAiC,EAAA;AACrD,IAAA,IAAI,IAAI,CAAC89B,YAAY,IAAI99B,GAAG,EAAE;AAC5B,MAAA,IAAI,CAAC6mB,IAAI,CAAC7mB,GAAG,CAAC,CAAA;AACf,KAAA,MAAM;MACL,IAAI,CAAC69B,WAAW,GAAG79B,GAAG,CAAA;AACvB,KAAA;AACH,GAAA;AACA;;;;;;AAMG;EACH,IAAWi9B,IAAIA;IAAK,OAAO,IAAI,CAACc,KAAK,CAAA;AAAE,GAAA;AACvC;;;;;;;;;;;;;;;AAeG;EACH,IAAWC,WAAWA;IAAK,OAAO,IAAI,CAACF,YAAY,CAAA;AAAE,GAAA;AACrD;;;;;;;;;;;;AAYG;EACH,IAAWrV,QAAQA;IAAK,OAAO,IAAI,CAACwV,SAAS,CAAA;AAAE,GAAA;AAC/C;;;;;;;;;;;;;;;;;;;;;;AAsBG;EACH,IAAWC,QAAQA;IAAK,OAAO,IAAI,CAACC,SAAS,CAAA;AAAE,GAAA;AAC/C;;;;;;;;;;;;;;;;AAgBG;EACH,IAAWC,UAAUA;IAAK,OAAO,IAAI,CAACC,WAAW,CAAA;AAAE,GAAA;AACnD;;;;;;;;;;;;;;;;;;;;;AAqBG;EACH,IAAWC,cAAcA;IAAK,OAAO,IAAI,CAACC,eAAe,CAAA;AAAE,GAAA;AAC3D;;;;;AAKG;EACH,IAAW/S,iBAAiBA;IAAK,OAAO,IAAI,CAACC,kBAAkB,CAAA;AAAE,GAAA;AACjE;;;;;;;;;;;;;;;;;;;;;;;AAuBG;EACH,IAAW+S,QAAQA;IAAK,OAAO,IAAI,CAACC,SAAS,CAAA;AAAE,GAAA;EAC/C,IAAWD,QAAQA,CAACx+B,GAA+B,EAAA;AACjD,IAAA,MAAMuJ,MAAM,GAAG,IAAI,CAACmnB,SAAS,CAACnnB,MAAM,CAAA;IACpC,IAAI,CAACk1B,SAAS,GAAGz+B,GAAG,CAAA;IAEpB,IAAIA,GAAG,IAAI,IAAI,EAAE;MACfuJ,MAAM,CAACi1B,QAAQ,GAAGx+B,GAAG,CAAA;AACtB,KAAA,MAAM;AACLuJ,MAAAA,MAAM,CAACqd,eAAe,CAAC,UAAU,CAAC,CAAA;AACnC,KAAA;AACH,GAAA;AACA;;;;;;;AAOG;EACH,IAAW2D,YAAYA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACmU,SAAS,CAACnU,YAAY,CAAA;AAAE,GAAA;EAChE,IAAWA,YAAYA,CAACvqB,GAAmC,EAAA;AAAI,IAAA,IAAI,CAAC0+B,SAAS,CAACnU,YAAY,GAAGvqB,GAAG,CAAA;AAAE,GAAA;AAClG;;;;;;AAMG;EACH,IAAWwzB,KAAKA;IAAK,OAAO,IAAI,CAACC,MAAM,CAAA;AAAE,GAAA;EACzC,IAAWD,KAAKA,CAACxzB,GAA4B,EAAI;IAAA,IAAI,CAACyzB,MAAM,GAAGzzB,GAAG,CAAA;AAAE,GAAA;AAEpE;AACA;;;;;;;;;;;;;;;;;AAiBG;EACH,IAAW2R,UAAUA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACzB,OAAO,CAACyB,UAAU,CAAA;AAAE,GAAA;EAC1D,IAAWA,UAAUA,CAAC3R,GAAiC,EAAA;AAAI,IAAA,IAAI,CAACkQ,OAAO,CAACyB,UAAU,GAAG3R,GAAG,CAAA;AAAE,GAAA;AAC1F;;;;;;;;;;;;;;;;;AAiBG;EACH,IAAW4R,YAAYA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC1B,OAAO,CAAC0B,YAAY,CAAA;AAAE,GAAA;EAC9D,IAAWA,YAAYA,CAAC5R,GAAmC,EAAA;AAAI,IAAA,IAAI,CAACkQ,OAAO,CAAC0B,YAAY,GAAG5R,GAAG,CAAA;AAAE,GAAA;AAChG;;;;;;;;;;;;;;;;;AAiBG;EACH,IAAW6R,WAAWA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC3B,OAAO,CAAC2B,WAAW,CAAA;AAAE,GAAA;EAC5D,IAAWA,WAAWA,CAAC7R,GAAkC,EAAA;AAAI,IAAA,IAAI,CAACkQ,OAAO,CAAC2B,WAAW,GAAG7R,GAAG,CAAA;AAAE,GAAA;AAC7F;;;;;;;;;;;;;;;;AAgBG;EACH,IAAWqR,QAAQA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACnB,OAAO,CAACmB,QAAQ,CAAA;AAAE,GAAA;EACtD,IAAWA,QAAQA,CAACrR,GAA+B,EAAA;AACjD,IAAA,IAAI,CAACkQ,OAAO,CAACmB,QAAQ,GAAGrR,GAAG,CAAA;AAC3B,IAAA,IAAI,IAAI,CAAC69B,WAAW,EAAE,IAAI,CAACA,WAAW,CAACc,YAAY,CAAC,IAAI,CAACzuB,OAAO,CAAC,CAAA;AACnE,GAAA;AACA;;;;;;;;;;;;;;;;;AAiBG;EACH,IAAWqB,UAAUA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACrB,OAAO,CAACqB,UAAU,CAAA;AAAE,GAAA;EAC1D,IAAWA,UAAUA,CAACvR,GAAiC,EAAA;AACrD,IAAA,IAAI,CAACkQ,OAAO,CAACqB,UAAU,GAAGvR,GAAG,CAAA;AAC7B,IAAA,IAAI,IAAI,CAAC69B,WAAW,EAAE,IAAI,CAACA,WAAW,CAACc,YAAY,CAAC,IAAI,CAACzuB,OAAO,CAAC,CAAA;AACnE,GAAA;AACA;;;;;;;;;;;;;;;;;;;AAmBG;EACH,IAAWuB,SAASA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACvB,OAAO,CAACuB,SAAS,CAAA;AAAE,GAAA;EACxD,IAAWA,SAASA,CAACzR,GAAgC,EAAA;AACnD,IAAA,IAAI,CAACkQ,OAAO,CAACuB,SAAS,GAAGzR,GAAG,CAAA;AAC5B,IAAA,IAAI,IAAI,CAAC69B,WAAW,EAAE,IAAI,CAACA,WAAW,CAACc,YAAY,CAAC,IAAI,CAACzuB,OAAO,CAAC,CAAA;AACnE,GAAA;AACA;;;;;;;;;;;;;AAaG;EACH,IAAWjE,GAAGA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACiE,OAAO,CAACjE,GAAG,CAAA;AAAE,GAAA;EAC5C,IAAWA,GAAGA,CAACjM,GAA0B,EAAA;AACvC,IAAA,MAAM+P,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAC3B,IAAA,MAAMyM,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;IAE7B9d,MAAM,CAAC9D,GAAG,GAAGjM,GAAG,CAAA;IAChB+P,MAAM,CAACiD,YAAY,EAAE,CAAA;IACrB2J,OAAO,CAACE,IAAI,EAAE,CAAA;AAChB,GAAA;AAEA;AACA;;;;;;;AAOG;EACH,IAAW9L,MAAMA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC8c,QAAQ,CAAC9c,MAAM,CAAA;AAAE,GAAA;AACnD;;;;;;;AAOG;EACH,IAAWF,IAAIA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACgd,QAAQ,CAAChd,IAAI,CAAA;AAAE,GAAA;AAC/C;;;;;;;AAOG;EACH,IAAWoU,IAAIA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC4I,QAAQ,CAAC5I,IAAI,CAAA;AAAE,GAAA;AAC/C;;;;;;;AAOG;EACH,IAAWZ,aAAaA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACwJ,QAAQ,CAACxJ,aAAa,CAAA;AAAE,GAAA;EACjE,IAAWA,aAAaA,CAACrkB,GAAoC,EAAA;AAAI,IAAA,IAAI,CAAC6tB,QAAQ,CAACxJ,aAAa,GAAGrkB,GAAG,CAAA;AAAE,GAAA;AACpG;;;;;AAKG;EACH,IAAWwkB,kBAAkBA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACqJ,QAAQ,CAACrJ,kBAAkB,CAAA;AAAE,GAAA;EAC3E,IAAWA,kBAAkBA,CAACxkB,GAAyC,EAAA;AAAI,IAAA,IAAI,CAAC6tB,QAAQ,CAACrJ,kBAAkB,GAAGxkB,GAAG,CAAA;AAAE,GAAA;AACnH;;;;;;;;;;;AAWG;EACH,IAAW6X,UAAUA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACgW,QAAQ,CAAChW,UAAU,CAAA;AAAE,GAAA;EAC3D,IAAWA,UAAUA,CAAC7X,GAAiC,EAAA;AAAI,IAAA,IAAI,CAAC6tB,QAAQ,CAAChW,UAAU,GAAG7X,GAAG,CAAA;AAAE,GAAA;AAC3F;;;;;;;;;;;AAWG;EACH,IAAW6kB,eAAeA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACgJ,QAAQ,CAAChJ,eAAe,CAAA;AAAE,GAAA;EACrE,IAAWA,eAAeA,CAAC7kB,GAAsC,EAAA;AAAI,IAAA,IAAI,CAAC6tB,QAAQ,CAAChJ,eAAe,GAAG7kB,GAAG,CAAA;AAAE,GAAA;AAE1G;;;;;;;;;;;;;;;;;;;AAmBG;EACHlB,WAAmBA,CAAAuK,IAA0B,EAAE;AAC7Cu0B,IAAAA,UAAU,GAAG,IAAI;AACjBjsB,IAAAA,UAAU,GAAG,CAAC;AACdC,IAAAA,YAAY,GAAG,CAAC;AAChBC,IAAAA,WAAW,GAAG,CAAC;AACfR,IAAAA,QAAQ,GAAG,IAAI;AACfE,IAAAA,UAAU,GAAG,IAAI;AACjBE,IAAAA,SAAS,GAAG,IAAI;AAChBxF,IAAAA,GAAG,GAAG,EAAE;AACRoY,IAAAA,aAAa,GAAG,IAAI;AACpBG,IAAAA,kBAAkB,GAAG,KAAK;AAC1BzT,IAAAA,MAAM,GAAG,IAAI;AACbF,IAAAA,IAAI,GAAG,IAAI;AACXoU,IAAAA,IAAI,GAAG,KAAK;AACZpN,IAAAA,UAAU,GAAG,IAAI;AACjBgN,IAAAA,eAAe,GAAG,KAAK;AACvB4D,IAAAA,QAAQ,GAAG,KAAK;IAChB+I,OAAO,GAAG,EAAE;AACZ0M,IAAAA,QAAQ,GAAG,IAAI;AACfE,IAAAA,UAAU,GAAG,IAAI;AACjBE,IAAAA,cAAc,GAAG,QAAQ;AACzB9S,IAAAA,iBAAiB,GAAG,IAAI;IACxBxO,EAAE,GAAG,EAAE;AACP0gB,IAAAA,OAAO,GAAG,EAAE;IACZnT,YAAY,GAAG,CAAC,GAAG,EAAE;AACrBiU,IAAAA,QAAQ,GAAG,CAAC;AACZhL,IAAAA,KAAK,GAAG,KAAA;GAAK,GACc,EAAE,EAAA;AAC7B,IAAA,KAAK,EAAE,CAAA;AAiOT;;;;;;;;;AASG;AACI,IAAA,IAAA,CAAAoL,WAAW,GAAIlvB,KAAa,IAAI;AACrC,MAAA,MAAMK,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAC3B,MAAA,MAAMsgB,QAAQ,GAAG,IAAI,CAACE,SAAS,CAAA;AAC/B,MAAA,MAAM/T,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;AAC7B,MAAA,MAAM2D,OAAO,GAAG,IAAI,CAACiM,QAAQ,CAAA;AAC7B,MAAA,MAAMoB,UAAU,GAAG,IAAI,CAACZ,SAAS,CAAA;AACjC,MAAA,MAAMhB,IAAI,GAAG,IAAI,CAACc,KAAK,CAAA;MAEvB,IAAI,CAACd,IAAI,EAAE,OAAA;AAEX,MAAA,IAAI,CAAC6B,KAAK,CAACp+B,MAAM,CAACwE,aAAa,CAAC,CAAA;MAEhC,IAAI25B,UAAU,CAACtS,OAAO,EAAE;AACtBsS,QAAAA,UAAU,CAACzvB,MAAM,CAACM,KAAK,CAAC,CAAA;QACxBiN,OAAO,CAACE,IAAI,EAAE,CAAA;AACf,OAAA;MAED,IAAI9M,MAAM,CAACiC,SAAS,EAAE;AACpBjC,QAAAA,MAAM,CAACiC,SAAS,CAAC5C,MAAM,CAACM,KAAK,CAAC,CAAA;AAC/B,OAAA,MAAM;AACLiN,QAAAA,OAAO,CAACvN,MAAM,CAACM,KAAK,CAAC,CAAA;AACtB,OAAA;AAED8gB,MAAAA,QAAQ,CAACU,MAAM,CAAC+L,IAAI,EAAEltB,MAAM,CAAC,CAAA;AAC7ByhB,MAAAA,OAAO,CAACN,MAAM,CAACnhB,MAAM,CAAC,CAAA;MAEtB,IAAIA,MAAM,CAACoB,OAAO,EAAE;AAClB,QAAA,IAAI,CAAC2tB,KAAK,CAACp+B,MAAM,CAAC4E,WAAW,EAAE;UAC7BgH,GAAG,EAAEyD,MAAM,CAACzD,GAAG;UACfC,KAAK,EAAEwD,MAAM,CAACxD,KAAK;UACnBsE,IAAI,EAAEd,MAAM,CAACc,IAAI;AACjB5D,UAAAA,UAAU,EAAE,CACV8C,MAAM,CAAC9C,UAAU,CAAC,CAAC,CAAC,EACpB8C,MAAM,CAAC9C,UAAU,CAAC,CAAC,CAAC,EACpB8C,MAAM,CAAC9C,UAAU,CAAC,CAAC,CAAC,EACpB8C,MAAM,CAAC9C,UAAU,CAAC,CAAC,CAAC,CAAA;AAEvB,SAAA,CAAC,CAAA;AACH,OAAA;MACD8C,MAAM,CAACoG,aAAa,EAAE,CAAA;AAEtB,MAAA,IAAI,CAAC2oB,KAAK,CAACp+B,MAAM,CAACyE,MAAM,CAAC,CAAA;KAC1B,CAAA;AAYO,IAAA,IAAA,CAAA45B,oBAAoB,GAAIrvB,KAAa,IAAI;AAC/C,MAAA,MAAMK,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAC3B,MAAA,MAAMyM,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;AAC7B,MAAA,MAAMpF,QAAQ,GAAG,IAAI,CAACwV,SAAS,CAAA;AAC/B,MAAA,MAAMhB,IAAI,GAAG,IAAI,CAACc,KAAK,CAAA;AACvB,MAAA,MAAMpF,OAAO,GAAGsE,IAAI,KAAJ,IAAA,IAAAA,IAAI,uBAAJA,IAAI,CAAE+B,UAAU,EAAE,CAAA;AAElC,MAAA,IAAI,CAAC,IAAI,CAAClB,YAAY,IAAI,CAACnF,OAAO,EAAE,OAAA;MACpC,IACE,CAAC5oB,MAAM,CAACiC,SAAS,IACd,CAAC2K,OAAO,CAACtC,SAAS,IAClB,CAACoO,QAAQ,CAAC8D,OAAO,IACjB,CAACoM,OAAO,CAACtS,OAAO,EAAE,EACrB,OAAA;AAEF,MAAA,IAAI,CAACuY,WAAW,CAAClvB,KAAK,CAAC,CAAA;KACxB,CAAA;AAEO,IAAA,IAAA,CAAAuvB,cAAc,GAAG,CAACC,MAAc,EAAEnU,KAAc,KAAI;AAC1D,MAAA,MAAMoS,EAAE,GAAG,IAAI,CAACK,GAAG,CAAA;AACnB,MAAA,MAAMP,IAAI,GAAG,IAAI,CAACc,KAAK,CAAA;AACvB,MAAA,MAAMvN,QAAQ,GAAG,IAAI,CAACE,SAAS,CAAA;MAE/B,IAAI,CAACuM,IAAI,EAAE,OAAA;AAEX,MAAA,IAAI,CAAC6B,KAAK,CAACp+B,MAAM,CAACwE,aAAa,CAAC,CAAA;MAEhCsrB,QAAQ,CAAC0M,QAAQ,CAACD,IAAI,EAAEE,EAAE,EAAEpS,KAAK,CAAC,CAAA;AAElC,MAAA,IAAI,CAAC+T,KAAK,CAACp+B,MAAM,CAACyE,MAAM,CAAC,CAAA;KAC1B,CAAA;AA7TC,IAAA,IAAI,CAACo4B,OAAO,GAAGp0B,UAAU,CAACE,IAAI,CAAC,CAAA;IAC/B,IAAI,CAACs0B,QAAQ,GAAGD,OAAO,CAAA;IACvB,IAAI,CAACI,YAAY,GAAG,KAAK,CAAA;AAEzB;IACA,IAAI,CAACK,SAAS,GAAGD,QAAQ,CAAA;IACzB,IAAI,CAACG,WAAW,GAAGD,UAAU,CAAA;IAC7B,IAAI,CAACG,eAAe,GAAGD,cAAc,CAAA;IACrC,IAAI,CAAC7S,kBAAkB,GAAGD,iBAAiB,CAAA;IAC3C,IAAI,CAACiT,SAAS,GAAGD,QAAQ,CAAA;IACzB,IAAI,CAAC/K,MAAM,GAAGD,KAAK,CAAA;AAEnB;IACA,MAAMjqB,MAAM,GAAGH,UAAU,CAAC,IAAI,CAACm0B,OAAO,EAAEe,cAAc,CAAC,CAAA;IACvD,IAAI,CAAC5N,SAAS,GAAG,IAAI+L,aAAa,CAAClzB,MAAM,EAAEiqB,KAAK,CAAC,CAAA;AACjD,IAAA,IAAI,CAACtjB,OAAO,GAAG,IAAIc,MAAM,CAAC;MACxBW,UAAU;MACVC,YAAY;MACZC,WAAW;MACX5F,GAAG;MACHoF,QAAQ;MACRE,UAAU;AACVE,MAAAA,SAAAA;AACD,KAAA,CAAC,CAAA;IACF,IAAI,CAACoc,QAAQ,GAAG,IAAIzJ,WAAW,CAAC7a,MAAM,EAAE,IAAI,CAAC2G,OAAO,EAAE;MACpDmU,aAAa;MACbxM,UAAU;MACVgN,eAAe;MACfL,kBAAkB;MAClBzT,MAAM;MACNF,IAAI;AACJoU,MAAAA,IAAAA;AACD,KAAA,CAAC,CAAA;AACF,IAAA,IAAI,CAACyZ,SAAS,GAAG,IAAIpU,aAAa,CAACC,YAAY,CAAC,CAAA;IAChD,IAAI,CAAC0T,SAAS,GAAG,IAAI3R,QAAQ,CAAC,IAAI,EAAE/iB,MAAM,EAAEkf,QAAQ,CAAC,CAAA;IACrD,IAAI,CAACoV,WAAW,GAAGD,UAAU,CAAA;IAC7B,IAAI,CAACG,KAAK,GAAG,IAAI,CAAA;AACjB,IAAA,IAAI,CAACoB,YAAY,GAAG,IAAI5T,WAAW,CAACC,iBAAiB,EAAE,MAAM,IAAI,CAAC5Y,MAAM,EAAE,CAAC,CAAA;IAC3E,IAAI,CAAC4qB,GAAG,GAAG,IAAIvP,SAAS,CAAC,IAAI,CAACyC,SAAS,CAACxC,GAAG,CAAC,CAAA;AAC5C,IAAA,IAAI,CAACuP,QAAQ,GAAG,IAAInN,eAAe,CAAC,IAAI,CAACiN,OAAO,EAAE,IAAI,CAAC7M,SAAS,EAAEc,OAAO,CAAC,CAAA;AAE1E,IAAA,IAAI,CAAC4N,iBAAiB,CAACpiB,EAAE,CAAC,CAAA;IAE1B,IAAI4gB,UAAU,IAAIM,QAAQ,EAAE;MAC1B,IAAI,CAACrK,IAAI,EAAE,CAAA;AACZ,KAAA;AACH,GAAA;AAEA;;;;AAIG;AACInhB,EAAAA,OAAOA,GAAA;AACZ,IAAA,IAAI,CAACxC,OAAO,CAACwC,OAAO,EAAE,CAAA;AACtB,IAAA,IAAI,CAACgsB,SAAS,CAACtT,IAAI,EAAE,CAAA;AACrB,IAAA,IAAI,CAACsF,SAAS,CAAChe,OAAO,EAAE,CAAA;AACxB,IAAA,IAAI,CAACmb,QAAQ,CAACnb,OAAO,EAAE,CAAA;AACvB,IAAA,IAAI,CAACysB,YAAY,CAACxnB,OAAO,EAAE,CAAA;IAE3B,IAAI,IAAI,CAAComB,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAACrrB,OAAO,CAAC,IAAI,CAACge,SAAS,CAACxC,GAAG,CAAC,CAAA;MACtC,IAAI,CAAC6P,KAAK,GAAG,IAAI,CAAA;AAClB,KAAA;AAED,IAAA,IAAI,CAACJ,QAAQ,CAAC5T,OAAO,CAACsV,MAAM,IAAIA,MAAM,CAAC3sB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;IAErD,IAAI,CAACorB,YAAY,GAAG,KAAK,CAAA;AAC3B,GAAA;AAEA;;;;AAIG;AACUjK,EAAAA,IAAIA,GAAA;;AACf,MAAA,IAAI,CAAC,IAAI,CAACgK,WAAW,EAAE;AACrB,QAAA,MAAM,IAAIj/B,YAAY,CAACmD,KAAK,CAAChC,QAAQ,CAACH,wBAAwB,EAAEmC,KAAK,CAACtB,KAAK,CAACb,wBAAwB,CAAC,CAAA;AACtG,OAAA;AAED,MAAA,MAAM4wB,QAAQ,GAAG,IAAI,CAACE,SAAS,CAAA;AAC/B,MAAA,MAAM3gB,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAC3B,MAAA,MAAMyM,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;AAC7B,MAAA,MAAMyR,QAAQ,GAAG,IAAI,CAACZ,SAAS,CAAA;AAC/B,MAAA,MAAMlN,OAAO,GAAG,IAAI,CAACiM,QAAQ,CAAA;AAC7B,MAAA,MAAMG,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AACnC,MAAA,MAAMt0B,MAAM,GAAGinB,QAAQ,CAACjnB,MAAM,CAAA;MAE9B,IAAI,CAACg2B,oBAAoB,EAAE,CAAA;AAC3B/O,MAAAA,QAAQ,CAACtC,GAAG,CAAC2F,IAAI,EAAE,CAAA;MACnB,IAAI,CAAC2L,iBAAiB,EAAE,CAAA;MACxBzvB,MAAM,CAACiD,YAAY,EAAE,CAAA;MAErB,IAAI,IAAI,CAACqrB,WAAW,EAAE;AACpB,QAAA,IAAI,CAACc,YAAY,CAAC1nB,MAAM,CAAClO,MAAM,CAAC,CAAA;AACjC,OAAA;AAED,MAAA,IAAI,CAAC,IAAI,CAAC00B,SAAS,CAAC9jB,aAAa,EAAE;AACjC,QAAA,IAAI,CAAC8jB,SAAS,CAACxmB,MAAM,EAAE,CAAA;AACxB,OAAA;AAED,MAAA,IAAI,CAACkmB,QAAQ,CAAC5T,OAAO,CAACsV,MAAM,IAAG;AAC7BA,QAAAA,MAAM,CAACxL,IAAI,CAAC,IAAI,CAAC,CAAA;AACnB,OAAC,CAAC,CAAA;MAEF,MAAM8E,OAAO,GAAG,MAAM,IAAI,CAAC8G,YAAY,CAAC7B,UAAU,CAAC,CAAA;AACnD,MAAA,IAAI,CAAC8B,gBAAgB,CAAC9B,UAAU,EAAEjF,OAAO,CAAC,CAAA;MAC1CnH,OAAO,CAACX,OAAO,EAAE,CAAA;AACjByO,MAAAA,QAAQ,CAACjxB,KAAK,CAAC,IAAI,CAAC0wB,oBAAoB,CAAC,CAAA;MACzC,MAAMpiB,OAAO,CAAClF,MAAM,EAAE,CAAA;AAEtB,MAAA,IAAI,IAAI,CAACgnB,SAAS,IAAI,IAAI,IAAI,CAACl1B,MAAM,CAACo2B,YAAY,CAAC,UAAU,CAAC,EAAE;AAC9Dp2B,QAAAA,MAAM,CAACi1B,QAAQ,GAAG,IAAI,CAACC,SAAS,CAAA;AACjC,OAAA;MAED,IAAI,CAACX,YAAY,GAAG,IAAI,CAAA;AACxB,MAAA,IAAI,CAACc,WAAW,CAAC,CAAC,CAAC,CAAA;AAEnB,MAAA,IAAI,CAACE,KAAK,CAACp+B,MAAM,CAACqE,KAAK,CAAC,CAAA;AAC1B,KAAC,CAAA,CAAA;AAAA,GAAA;AAED;;;;;;;;;;;;;;;;AAgBG;EACU8hB,IAAIA,CAAC+W,UAAsB,EAAA;;AACtC,MAAA,IAAI,CAACA,UAAU,EAAE,OAAO,KAAK,CAAA;MAE7B,IAAI,IAAI,CAACE,YAAY,EAAE;QACrB,MAAMnF,OAAO,GAAG,MAAM,IAAI,CAAC8G,YAAY,CAAC7B,UAAU,CAAC,CAAA;AACnD,QAAA,IAAI,CAAC8B,gBAAgB,CAAC9B,UAAU,EAAEjF,OAAO,CAAC,CAAA;AAC1C,QAAA,IAAI,CAACiG,WAAW,CAAC,CAAC,CAAC,CAAA;AACpB,OAAA,MAAM;AACL;QACA,IAAI,CAACf,WAAW,GAAGD,UAAU,CAAA;QAC7B,IAAI,CAAC/J,IAAI,EAAE,CAAA;AACZ,OAAA;AAED,MAAA,OAAO,IAAI,CAAA;AACb,KAAC,CAAA,CAAA;AAAA,GAAA;AAED;;;;AAIG;AACIjhB,EAAAA,MAAMA,GAAA;AACX,IAAA,IAAI,CAAC,IAAI,CAACkrB,YAAY,EAAE,OAAA;IAExB,IAAI,CAAC0B,iBAAiB,EAAE,CAAA;AAExB;AACA,IAAA,IAAI,CAACZ,WAAW,CAAC,CAAC,CAAC,CAAA;IAEnB,MAAM;MAAE/rB,KAAK;AAAEC,MAAAA,MAAAA;KAAQ,GAAG,IAAI,CAAC4d,SAAS,CAAA;AAExC,IAAA,IAAI,CAACoO,KAAK,CAACp+B,MAAM,CAACQ,MAAM,EAAE;MACxB2R,KAAK;AACLC,MAAAA,MAAAA;AACD,KAAA,CAAC,CAAA;AACJ,GAAA;AAEA;;;;;;;;;;;;;;AAcG;EACI8sB,UAAUA,CAAC,GAAGlC,OAAwB,EAAA;IAC3C,IAAI,IAAI,CAACI,YAAY,EAAE;AACrBJ,MAAAA,OAAO,CAAC3T,OAAO,CAACsV,MAAM,IAAM;AAAAA,QAAAA,MAAM,CAACxL,IAAI,CAAC,IAAI,CAAC,CAAA;AAAE,OAAC,CAAC,CAAA;AAClD,KAAA;AAED,IAAA,IAAI,CAAC8J,QAAQ,CAACkC,IAAI,CAAC,GAAGnC,OAAO,CAAC,CAAA;AAChC,GAAA;AAEA;;;;;;;;;;;;;AAaG;EACIoC,aAAaA,CAAC,GAAGpC,OAAwB,EAAA;AAC9CA,IAAAA,OAAO,CAAC3T,OAAO,CAACsV,MAAM,IAAG;MACvB,MAAMU,SAAS,GAAG,IAAI,CAACpC,QAAQ,CAACpyB,OAAO,CAAC8zB,MAAM,CAAC,CAAA;MAE/C,IAAIU,SAAS,GAAG,CAAC,EAAE,OAAA;AAEnBV,MAAAA,MAAM,CAAC3sB,OAAO,CAAC,IAAI,CAAC,CAAA;MACpB,IAAI,CAACirB,QAAQ,CAACqC,MAAM,CAACD,SAAS,EAAE,CAAC,CAAC,CAAA;AACpC,KAAC,CAAC,CAAA;AACJ,GAAA;AAwDQjB,EAAAA,KAAKA,CAAgCmB,SAAY,EAAE,GAAGC,MAAqC,EAAA;IACjG,MAAMC,SAAS,GAAGD,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;IAEzC,IAAI,CAACpsB,OAAO,CAACmsB,SAAgB;AAC3B9/B,MAAAA,IAAI,EAAE8/B,SAAS;AACfG,MAAAA,MAAM,EAAE,IAAA;KACL,EAAAD,SAAS,EACZ,CAAA;AACJ,GAAA;AAkCQT,EAAAA,gBAAgBA,CAAC9B,UAAsB,EAAEjF,OAAgB,EAAA;AAC/D,IAAA,MAAM5oB,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAC3B,IAAA,MAAMyM,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;AAC7B,IAAA,MAAM2C,QAAQ,GAAG,IAAI,CAACE,SAAS,CAAA;AAC/B,IAAA,MAAMuM,IAAI,GAAG,IAAI,CAACc,KAAK,CAAA;AAEvB;AACA,IAAA,IAAId,IAAI,EAAE;AACRA,MAAAA,IAAI,CAACvqB,OAAO,CAAC8d,QAAQ,CAACtC,GAAG,CAAC,CAAA;AAC3B,KAAA;IAED,MAAMmS,OAAO,GAAGzC,UAAU,CAAC0C,UAAU,CAAC9P,QAAQ,CAACtC,GAAG,EAAEyK,OAAO,CAAC,CAAA;AAC5DiF,IAAAA,UAAU,CAACe,YAAY,CAAC5uB,MAAM,CAAC,CAAA;AAC/B6tB,IAAAA,UAAU,CAAC2C,aAAa,CAAC5jB,OAAO,CAAC,CAAA;IAEjC,IAAI,CAACohB,KAAK,GAAGsC,OAAO,CAAA;AACpB,IAAA,IAAI,CAACvB,KAAK,CAACp+B,MAAM,CAACuE,iBAAiB,EAAE;AACnC24B,MAAAA,UAAAA;AACD,KAAA,CAAC,CAAA;AACJ,GAAA;EAEc6B,YAAYA,CAAC7B,UAAsB,EAAA;;AAC/C,MAAA,MAAM4C,aAAa,GAAG,IAAIhZ,aAAa,EAAE,CAAA;MACzC,MAAM;QAAEG,GAAG;AAAEjB,QAAAA,KAAAA;AAAO,OAAA,GAAGkX,UAAU,CAAA;AAEjC,MAAA,IAAI,CAACkB,KAAK,CAACp+B,MAAM,CAACsE,UAAU,EAAE;QAC5B2iB,GAAG;AACHjB,QAAAA,KAAAA;AACD,OAAA,CAAC,CAAA;MAEF,MAAMiS,OAAO,GAAG,MAAM6H,aAAa,CAAC3Z,IAAI,CAACc,GAAG,EAAEjB,KAAK,CAAC,CAAA;AAEpD,MAAA,IAAI,CAACoY,KAAK,CAACp+B,MAAM,CAACoB,IAAI,EAAE;QACtB6lB,GAAG;AACHjB,QAAAA,KAAAA;AACD,OAAA,CAAC,CAAA;AAEF,MAAA,OAAOiS,OAAO,CAAA;AAChB,KAAC,CAAA,CAAA;AAAA,GAAA;AAEO6G,EAAAA,iBAAiBA,GAAA;AACvB,IAAA,MAAMhP,QAAQ,GAAG,IAAI,CAACE,SAAS,CAAA;AAC/B,IAAA,MAAM3gB,MAAM,GAAG,IAAI,CAACG,OAAO,CAAA;AAC3B,IAAA,MAAMyM,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;IAE7B2C,QAAQ,CAAC5d,MAAM,EAAE,CAAA;IACjB7C,MAAM,CAAC6C,MAAM,CAAC4d,QAAQ,CAAC3d,KAAK,EAAE2d,QAAQ,CAAC1d,MAAM,CAAC,CAAA;IAC9C6J,OAAO,CAAC/J,MAAM,CAAC4d,QAAQ,CAAC3d,KAAK,EAAE2d,QAAQ,CAAC1d,MAAM,CAAC,CAAA;AACjD,GAAA;EAEQssB,iBAAiBA,CAACqB,MAA4B,EAAA;AACpD;IACAxhC,MAAM,CAACk3B,IAAI,CAACsK,MAAM,CAAC,CAAC1W,OAAO,CAAE2W,OAAiC,IAAI;MAChE,IAAI,CAAC1jB,EAAE,CAAC0jB,OAAO,EAAED,MAAM,CAACC,OAAO,CAAC,CAAC,CAAA;AACnC,KAAC,CAAC,CAAA;AACJ,GAAA;AAEQnB,EAAAA,oBAAoBA,GAAA;AAC1B;AACA,IAAA,MAAMl2B,IAAI,GAAG,IAAI,CAACk0B,OAAO,CAAA;AACzB,IAAA,MAAM5gB,OAAO,GAAG,IAAI,CAACkR,QAAQ,CAAA;AAC7B,IAAA,MAAMyR,QAAQ,GAAG,IAAI,CAACZ,SAAS,CAAA;AAC/B,IAAA,MAAMlO,QAAQ,GAAG,IAAI,CAACE,SAAS,CAAA;AAC/B,IAAA,MAAMyM,EAAE,GAAG,IAAI,CAACK,GAAG,CAAA;AAEnB,IAAA,MAAMmD,wBAAwB,GAAG,CAC/Bh6B,cAAc,CAACpB,YAAY,EAC3BoB,cAAc,CAACvB,WAAW,EAC1BuB,cAAc,CAACtB,SAAS,CACzB,CAAA;AAEDs7B,IAAAA,wBAAwB,CAAC5W,OAAO,CAAC2W,OAAO,IAAG;MACzC/jB,OAAO,CAAC5L,MAAM,CAACiM,EAAE,CAAC0jB,OAAO,EAAEpqB,GAAG,IAAG;AAC/B,QAAA,IAAI,CAACwoB,KAAK,CAAC4B,OAAO,EAAEpqB,GAAG,CAAC,CAAA;AAC1B,OAAC,CAAC,CAAA;MAEFqG,OAAO,CAAC9L,IAAI,CAACmM,EAAE,CAAC0jB,OAAO,EAAEpqB,GAAG,IAAG;AAC7B,QAAA,IAAI,CAACwoB,KAAK,CAAC4B,OAAO,EAAEpqB,GAAG,CAAC,CAAA;AAC1B,OAAC,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;IAEF6mB,EAAE,CAACngB,EAAE,CAACtc,MAAM,CAAC8E,QAAQ,EAAE8Q,GAAG,IAAG;MAC3BjN,IAAI,CAACV,SAAS,CAACC,GAAG,CAACvE,aAAa,CAACI,KAAK,CAAC,CAAA;AAEvC66B,MAAAA,QAAQ,CAAChU,aAAa,CAAChV,GAAG,CAACyY,OAAO,CAAC,CAAA;AACnCuQ,MAAAA,QAAQ,CAACjxB,KAAK,CAAC,IAAI,CAAC4wB,cAAc,CAAC,CAAA;AAEnC,MAAA,IAAI,CAACH,KAAK,CAACp+B,MAAM,CAAC8E,QAAQ,CAAC,CAAA;AAC7B,KAAC,CAAC,CAAA;AAEF23B,IAAAA,EAAE,CAACngB,EAAE,CAACtc,MAAM,CAAC+E,MAAM,EAAE,MAAK;MACxB4D,IAAI,CAACV,SAAS,CAACgpB,MAAM,CAACttB,aAAa,CAACI,KAAK,CAAC,CAAA;AAE1C+rB,MAAAA,QAAQ,CAACtC,GAAG,CAACiM,qBAAqB,EAAE,CAAA;AACpCmF,MAAAA,QAAQ,CAAChU,aAAa,CAAC1f,MAAM,CAAC,CAAA;AAC9B0zB,MAAAA,QAAQ,CAACjxB,KAAK,CAAC,IAAI,CAAC0wB,oBAAoB,CAAC,CAAA;MAEzC,IAAI,CAACnsB,MAAM,EAAE,CAAA;AAEb,MAAA,IAAI,CAACksB,KAAK,CAACp+B,MAAM,CAAC+E,MAAM,CAAC,CAAA;AAC3B,KAAC,CAAC,CAAA;AACJ,GAAA;;AAt+BA;;;;;;;;;;AAUG;AACoB63B,OAAO,CAAAsD,OAAA,GAAG,cAAe;;ACxFlD;;;AAGG;AAcH;;;;;AAKG;AACH,MAAMC,QAAS,SAAQ5vB,SAIrB,CAAA;AA0BA;;;AAGG;AACHnS,EAAAA,WAAAA,GAAA;AACE,IAAA,KAAK,EAAE,CAAA;AAEP,IAAA,IAAI,CAACqxB,MAAM,GAAG5d,IAAI,CAAC3B,MAAM,EAAE,CAAA;AAC3B,IAAA,IAAI,CAACD,QAAQ,GAAGlE,IAAI,CAACmE,MAAM,EAAE,CAAA;AAC7B,IAAA,IAAI,CAACmB,QAAQ,GAAGlE,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACxC,IAAA,IAAI,CAAC+N,KAAK,GAAGhO,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACvC,GAAA;AAEA;;;;AAIG;AACIkF,EAAAA,YAAYA,GAAA;AACjBT,IAAAA,IAAI,CAACuuB,4BAA4B,CAAC,IAAI,CAAC3Q,MAAM,EAAE,IAAI,CAACxf,QAAQ,EAAE,IAAI,CAACoB,QAAQ,EAAE,IAAI,CAAC8J,KAAK,CAAC,CAAA;AAC1F,GAAA;EAEOzM,MAAMA,CAAC8e,GAAwB,EAAA;IACpC,IAAI,CAACpa,OAAO,CAACrN,gBAAgB,CAACC,MAAM,EAAEwnB,GAAG,CAAC,CAAA;AAC5C,GAAA;AACD;;ACrDD;;;;;AAKG;AACH,MAAM6S,cAAc,CAAA;AA8BlB;;;AAGG;AACHjiC,EAAAA,WAAAA,CAAmB;AACjBwJ,IAAAA,SAAS,GAAG,EAAA;MACsB,EAAE,EAAA;IAc9B,IAAa,CAAA04B,aAAA,GAAG,CAAC;AAAEZ,MAAAA,MAAM,EAAE/S,MAAAA;AAAM,KAAkB,KAAI;MAC7DA,MAAM,CAACkD,MAAM,CAAClG,WAAW,CAAC,IAAI,CAAC4W,UAAU,CAAC,CAAA;MAE1C,IAAI5T,MAAM,CAAC2Q,WAAW,EAAE;QACtB3Q,MAAM,CAAChE,IAAI,CAAC3oB,MAAM,CAACoB,IAAI,EAAE,IAAI,CAACo/B,eAAe,CAAC,CAAA;AAC/C,OAAA,MAAM;QACL7T,MAAM,CAAChE,IAAI,CAAC3oB,MAAM,CAACqE,KAAK,EAAE,IAAI,CAACm8B,eAAe,CAAC,CAAA;AAChD,OAAA;KACF,CAAA;IAEO,IAAe,CAAAA,eAAA,GAAG,CAAC;AAAEd,MAAAA,MAAM,EAAE/S,MAAAA;AAAM,KAAuB,KAAI;AACpE,MAAA,MAAMyD,SAAS,GAAG,IAAI,CAACmQ,UAAU,CAAA;MACjC,IAAI,CAACnQ,SAAS,EAAE,OAAA;AAEhB,MAAA,IAAIA,SAAS,CAACqQ,aAAa,KAAK9T,MAAM,CAACkD,MAAM,EAAE;AAC7ClD,QAAAA,MAAM,CAACkD,MAAM,CAAC6Q,WAAW,CAACtQ,SAAS,CAAC,CAAA;AACrC,OAAA;KACF,CAAA;IA9BC,IAAI,CAACxoB,SAAS,GAAGA,SAAS,CAAA;AAC1B,IAAA,IAAI,CAAC24B,UAAU,GAAG,IAAI,CAACI,eAAe,EAAE,CAAA;AAC1C,GAAA;EAEOxN,IAAIA,CAACxG,MAAe,EAAA;IACzBA,MAAM,CAACrQ,EAAE,CAACtc,MAAM,CAACsE,UAAU,EAAE,IAAI,CAACg8B,aAAa,CAAC,CAAA;AAClD,GAAA;EAEOtuB,OAAOA,CAAC2a,MAAe,EAAA;IAC5BA,MAAM,CAAC1a,GAAG,CAACjS,MAAM,CAACsE,UAAU,EAAE,IAAI,CAACg8B,aAAa,CAAC,CAAA;IACjD,IAAI,CAACE,eAAe,CAAC;AAAEd,MAAAA,MAAM,EAAE/S,MAAAA;AAAQ,KAAA,CAAC,CAAA;AAC1C,GAAA;AAqBQgU,EAAAA,eAAeA,GAAA;IACrB,MAAM/4B,SAAS,GACVrJ,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EAAA,IAAI,CAACpR,SAAS,GACdy4B,cAAc,CAAC18B,aAAa,CAChC,CAAA;AAED,IAAA,MAAMysB,SAAS,GAAGzoB,aAAa,CAACC,SAAS,CAAChE,SAAS,CAAC,CAAA;AACpD,IAAA,MAAMg9B,IAAI,GAAGj5B,aAAa,CAACC,SAAS,CAACi5B,IAAI,CAAC,CAAA;AAE1CzQ,IAAAA,SAAS,CAACzG,WAAW,CAACiX,IAAI,CAAC,CAAA;AAE3B,IAAA,OAAOxQ,SAAS,CAAA;AAClB,GAAA;;AAhFA;;;;AAIG;AACoBiQ,cAAA,CAAA18B,aAAa,GAAG;AACrC;;;;AAIG;AACHC,EAAAA,SAAS,EAAE,iBAAiB;AAC5B;;;;AAIG;AACHi9B,EAAAA,IAAI,EAAE,sBAAA;CACE;;ACxBZ;;;;;;AAMG;AACH,MAAeC,cAAc,CAAA;AAsB3B;;;;AAIG;EACH1iC,WAAAA,CAAmBwuB,OAA8B,EAAA;AAC/C,IAAA,IAAI,CAACvb,QAAQ,GAAGub,OAAO,CAACvb,QAAQ,CAAA;AAChC,IAAA,IAAI,CAAC5G,KAAK,GAAGmiB,OAAO,CAACniB,KAAK,CAAA;AAC5B,GAAA;AAkBD;;ACjFM,MAAMs2B,yBAAyB,GAAG;AACvCC,EAAAA,aAAa,EAAE,kBAAkB;AACjCC,EAAAA,WAAW,EAAE,6BAA6B;AAC1CC,EAAAA,aAAa,EAAE,uBAAuB;AACtCC,EAAAA,YAAY,EAAE,sBAAsB;AACpCC,EAAAA,eAAe,EAAE,yBAAyB;AAC1CC,EAAAA,YAAY,EAAE,sBAAsB;AACpCC,EAAAA,aAAa,EAAE,uBAAuB;AACtCC,EAAAA,cAAc,EAAE,wBAAwB;AACxCC,EAAAA,mBAAmB,EAAE,6BAA6B;AAClDC,EAAAA,oBAAoB,EAAE,8BAA8B;AACpDC,EAAAA,eAAe,EAAE,yBAAyB;AAC1CC,EAAAA,aAAa,EAAE,2BAA2B;AAC1CC,EAAAA,WAAW,EAAE,yBAAyB;AACtCC,EAAAA,UAAU,EAAE,eAAe;AAC3BC,EAAAA,WAAW,EAAE,qBAAqB;AAClCC,EAAAA,WAAW,EAAE,qBAAqB;AAClCC,EAAAA,YAAY,EAAE,sBAAsB;AACpCC,EAAAA,WAAW,EAAE,uBAAuB;AACpCC,EAAAA,YAAY,EAAE,wBAAwB;AACtCC,EAAAA,cAAc,EAAE,0BAA0B;AAC1CC,EAAAA,YAAY,EAAE,wBAAwB;AACtCC,EAAAA,iBAAiB,EAAE,6BAA6B;AAChDC,EAAAA,sBAAsB,EAAE,kCAAkC;AAC1DC,EAAAA,SAAS,EAAE,qBAAqB;AAChCC,EAAAA,YAAY,EAAE,+BAA+B;AAC7CC,EAAAA,aAAa,EAAE,gCAAgC;AAC/CC,EAAAA,kBAAkB,EAAE,uBAAuB;AAC3CC,EAAAA,YAAY,EAAE,sBAAsB;AACpCC,EAAAA,KAAK,EAAE,wBAAwB;AAC/BC,EAAAA,WAAW,EAAE,8BAA8B;AAC3CC,EAAAA,MAAM,EAAE,yBAAA;CACA,CAAA;AAEH,MAAMC,yBAAyB,GAAG;AACvC;;;;AAIG;AACHC,EAAAA,QAAQ,EAAE,UAAU;AACpB;;;;AAIG;AACHC,EAAAA,SAAS,EAAE,WAAW;AACtB;;;;AAIG;AACHC,EAAAA,QAAQ,EAAE,UAAU;AACpB;;;;AAIG;AACHC,EAAAA,WAAW,EAAE,aAAa;AAC1B;;;;AAIG;AACHC,EAAAA,SAAS,EAAE,WAAW;AACtB;;;;AAIG;AACHC,EAAAA,UAAU,EAAE,YAAA;CACJ;;ACvEV;;;AAGG;AAYH,MAAMC,YAAa,SAAQ/yB,SAIzB,CAAA;AAYA;;AAEG;AACHnS,EAAAA,WAAAA,GAAA;AACE,IAAA,KAAK,EAAE,CAAA;IAsFD,IAAO,CAAAmlC,OAAA,GAAG,CAAC;MAAEhtB,QAAQ;AAAEC,MAAAA,OAAAA;AAAO,KAA4E,KAAI;;AACpH,MAAA,MAAM8U,IAAI,GAAG,IAAI,CAACkY,KAAK,CAAA;MACvB,IAAI,CAAClY,IAAI,EAAE,OAAA;AAEX,MAAA,MAAMpmB,CAAC,GAAGsR,OAAO,GACZD,QAAuB,CAACe,OAAO,CAAC,CAAC,CAAC,CAAC8F,KAAK,GACxC7G,QAAuB,CAAC6G,KAAK,CAAA;MAClC,MAAMqmB,GAAG,GAAGnY,IAAI,CAACpmB,CAAC,IAAI,CAAAkC,EAAA,GAAA8D,MAAM,CAACw4B,OAAO,MAAI,IAAA,IAAAt8B,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAA8D,MAAM,CAACy4B,WAAW,CAAC,CAAA;AAE3D,MAAA,MAAMC,QAAQ,GAAGx6B,KAAK,CAAClE,CAAC,EAAEu+B,GAAG,EAAEA,GAAG,GAAGnY,IAAI,CAACnZ,KAAK,CAAC,CAAA;MAChD,MAAMrE,QAAQ,GAAG,CAAC81B,QAAQ,GAAGH,GAAG,IAAInY,IAAI,CAACnZ,KAAK,CAAA;AAE9C,MAAA,IAAI,CAAC/C,OAAO,CAACX,KAAK,CAACm1B,QAAQ,CAAC,CAAA;MAC5B,IAAI,CAACC,OAAO,CAAC57B,SAAS,CAACC,GAAG,CAAC,IAAI,CAAC47B,WAAW,CAAC,CAAA;MAE5C,IAAI,CAAC1wB,OAAO,CAACnN,cAAc,CAACvB,WAAW,EAAEoJ,QAAQ,CAAC,CAAA;KACnD,CAAA;IAEO,IAAA,CAAAgN,SAAS,GAAG,CAAC;AAAE9L,MAAAA,KAAAA;AAAK,KAAuE,KAAI;;AACrG,MAAA,MAAMgB,MAAM,GAAG,IAAI,CAACZ,OAAO,CAAA;AAC3B,MAAA,MAAMkc,IAAI,GAAG,IAAI,CAACkY,KAAK,CAAA;MACvB,IAAI,CAAClY,IAAI,EAAE,OAAA;AAEXtb,MAAAA,MAAM,CAACf,gBAAgB,CAACD,KAAK,CAAC9J,CAAC,CAAC,CAAA;AAChC8K,MAAAA,MAAM,CAACtB,MAAM,CAAC,CAAC,CAAC,CAAA;MAEhB,MAAM+0B,GAAG,GAAGnY,IAAI,CAACpmB,CAAC,IAAI,CAAAkC,EAAA,GAAA8D,MAAM,CAACw4B,OAAO,MAAI,IAAA,IAAAt8B,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAA8D,MAAM,CAACy4B,WAAW,CAAC,CAAA;AAC3D,MAAA,MAAMI,QAAQ,GAAG36B,KAAK,CAAC4G,MAAM,CAAC1Q,GAAG,EAAEmkC,GAAG,EAAEA,GAAG,GAAGnY,IAAI,CAACnZ,KAAK,CAAC,CAAA;MACzD,MAAMrE,QAAQ,GAAG,CAACi2B,QAAQ,GAAGN,GAAG,IAAInY,IAAI,CAACnZ,KAAK,CAAA;MAE9C,IAAI,CAACiB,OAAO,CAACnN,cAAc,CAACJ,MAAM,EAAEiI,QAAQ,CAAC,CAAA;KAC9C,CAAA;IAEO,IAAU,CAAAk2B,UAAA,GAAG,MAAK;AACxB,MAAA,MAAM1Y,IAAI,GAAG,IAAI,CAACkY,KAAK,CAAA;MACvB,IAAI,CAAClY,IAAI,EAAE,OAAA;MAEX,IAAI,CAACuY,OAAO,CAAC57B,SAAS,CAACgpB,MAAM,CAAC,IAAI,CAAC6S,WAAW,CAAC,CAAA;AAE/C,MAAA,IAAI,CAAC1wB,OAAO,CAACnN,cAAc,CAACtB,SAAS,CAAC,CAAA;KACvC,CAAA;AA5HC,IAAA,MAAMgE,IAAI,GAAGX,QAAQ,CAACL,aAAa,CAACpF,MAAM,CAAC,CAAA;AAC3C,IAAA,MAAM0hC,KAAK,GAAGj8B,QAAQ,CAACL,aAAa,CAACpF,MAAM,CAAC,CAAA;AAC5C,IAAA,MAAM2hC,KAAK,GAAGl8B,QAAQ,CAACL,aAAa,CAACpF,MAAM,CAAC,CAAA;AAC5C,IAAA,MAAM4hC,MAAM,GAAGn8B,QAAQ,CAACL,aAAa,CAACpF,MAAM,CAAC,CAAA;IAE7CoG,IAAI,CAACy7B,SAAS,GAAG,KAAK,CAAA;AAEtBH,IAAAA,KAAK,CAACta,WAAW,CAACwa,MAAM,CAAC,CAAA;AACzBF,IAAAA,KAAK,CAACta,WAAW,CAACua,KAAK,CAAC,CAAA;AACxBv7B,IAAAA,IAAI,CAACghB,WAAW,CAACsa,KAAK,CAAC,CAAA;IAEvB,IAAI,CAACpU,MAAM,GAAGlnB,IAAI,CAAA;IAClB,IAAI,CAAC07B,OAAO,GAAGJ,KAAK,CAAA;IACpB,IAAI,CAACJ,OAAO,GAAGK,KAAK,CAAA;IACpB,IAAI,CAACI,QAAQ,GAAGH,MAAM,CAAA;AAEtB,IAAA,IAAI,CAAC3oB,WAAW,GAAG,IAAI9F,UAAU,EAAE,CAAA;AACnC,IAAA,IAAI,CAACqE,WAAW,GAAG,IAAI7C,UAAU,EAAE,CAAA;AACnC,IAAA,IAAI,CAAC9H,OAAO,GAAG,IAAI3B,MAAM,CAAC;AAAES,MAAAA,QAAQ,EAAE,CAAC;AAAEpF,MAAAA,KAAK,EAAEtC,cAAc;MAAE+H,MAAM,EAAErJ,CAAC,IAAIA,CAAAA;AAAG,KAAA,CAAC,CAAA;IACjF,IAAI,CAACs+B,KAAK,GAAG;AACXt+B,MAAAA,CAAC,EAAE,CAAC;AACJsH,MAAAA,CAAC,EAAE,CAAC;AACJ2F,MAAAA,KAAK,EAAE,CAAC;AACRC,MAAAA,MAAM,EAAE,CAAC;AACTmyB,MAAAA,IAAI,EAAE,CAAC;AACPC,MAAAA,KAAK,EAAE,CAAC;AACRC,MAAAA,MAAM,EAAE,CAAC;AACTC,MAAAA,GAAG,EAAE,CAAA;KACK,CAAA;AACZ,IAAA,IAAI,CAACZ,WAAW,GAAG/C,yBAAyB,CAAC6B,KAAK,CAAA;AACpD,GAAA;EAEOzP,IAAIA,CAACvrB,SAAmD,EAAA;AAC7D,IAAA,MAAMwU,UAAU,GAAG,IAAI,CAACZ,WAAW,CAAA;AACnC,IAAA,MAAMa,UAAU,GAAG,IAAI,CAACtC,WAAW,CAAA;IAEnC,IAAI,CAAC8V,MAAM,CAAC5nB,SAAS,CAACC,GAAG,CAACN,SAAS,CAACi6B,UAAU,CAAC,CAAA;IAC/C,IAAI,CAACwC,OAAO,CAACp8B,SAAS,CAACC,GAAG,CAACN,SAAS,CAACk6B,WAAW,CAAC,CAAA;IACjD,IAAI,CAAC+B,OAAO,CAAC57B,SAAS,CAACC,GAAG,CAACN,SAAS,CAACm6B,WAAW,CAAC,CAAA;IACjD,IAAI,CAACuC,QAAQ,CAACr8B,SAAS,CAACC,GAAG,CAACN,SAAS,CAACo6B,YAAY,CAAC,CAAA;AACnD,IAAA,IAAI,CAAC8B,WAAW,GAAGl8B,SAAS,CAACg7B,KAAK,CAAA;IAElCxmB,UAAU,CAACE,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAAC6+B,OAAO,CAAC,CAAA;IACvDlnB,UAAU,CAACC,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAAC6+B,OAAO,CAAC,CAAA;IAEvDnnB,UAAU,CAACE,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAACq/B,UAAU,CAAC,CAAA;IACxD3nB,UAAU,CAACC,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAACq/B,UAAU,CAAC,CAAA;IAExD5nB,UAAU,CAACE,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAACiV,SAAS,CAAC,CAAA;IACpDuB,UAAU,CAACC,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAACiV,SAAS,CAAC,CAAA;AAEpDsB,IAAAA,UAAU,CAACrF,MAAM,CAAC,IAAI,CAAC8Y,MAAM,CAAC,CAAA;AAC9BxT,IAAAA,UAAU,CAACtF,MAAM,CAAC,IAAI,CAAC8Y,MAAM,CAAC,CAAA;IAE9B,IAAI,CAAC3d,MAAM,EAAE,CAAA;AACf,GAAA;AAEOF,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMoK,UAAU,GAAG,IAAI,CAACZ,WAAW,CAAA;AACnC,IAAA,MAAMa,UAAU,GAAG,IAAI,CAACtC,WAAW,CAAA;AAEnC,IAAA,IAAI,CAAC8V,MAAM,CAACjoB,SAAS,GAAG,EAAE,CAAA;AAC1B,IAAA,IAAI,CAACy8B,OAAO,CAACz8B,SAAS,GAAG,EAAE,CAAA;AAC3B,IAAA,IAAI,CAACi8B,OAAO,CAACj8B,SAAS,GAAG,EAAE,CAAA;AAC3B,IAAA,IAAI,CAAC08B,QAAQ,CAAC18B,SAAS,GAAG,EAAE,CAAA;IAE5BwU,UAAU,CAACnK,GAAG,EAAE,CAAA;IAChBoK,UAAU,CAACpK,GAAG,EAAE,CAAA;IAChBmK,UAAU,CAACnF,OAAO,EAAE,CAAA;IACpBoF,UAAU,CAACpF,OAAO,EAAE,CAAA;AACtB,GAAA;AAEO/E,EAAAA,MAAMA,GAAA;IACX,IAAI,CAACsxB,KAAK,GAAG,IAAI,CAACa,OAAO,CAAC9Y,qBAAqB,EAAE,CAAA;AACnD,GAAA;EAEOoZ,WAAWA,CAAC72B,QAAgB,EAAA;AACjC,IAAA,MAAMqE,KAAK,GAAG,IAAI,CAACqxB,KAAK,CAACrxB,KAAK,CAAA;IAC9B,MAAMyyB,eAAe,GAAGx7B,KAAK,CAAC0E,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAE7C,IAAI,CAACw2B,QAAQ,CAACnf,KAAK,CAAChT,KAAK,GAAG,CAAGyyB,EAAAA,eAAe,GAAG,GAAG,CAAG,CAAA,CAAA,CAAA;IACvD,IAAI,CAACf,OAAO,CAAC1e,KAAK,CAACoK,SAAS,GAAG,CAAcqV,WAAAA,EAAAA,eAAe,GAAGzyB,KAAK,CAAK,GAAA,CAAA,CAAA;AAC3E,GAAA;AA2CD;;ACpJD;;;;;;AAMG;AACH,MAAM0yB,WAAY,SAAQ/D,cAAc,CAAA;EACtC,IAAW9pB,OAAOA,GAAK;AAAA,IAAA,OAAO,IAAI,CAAC8tB,aAAa,CAACjV,MAAM,CAAA;AAAE,GAAA;AAWzD;;;;AAIG;AACHzxB,EAAAA,WAAmBA,CAAA;IACjBiT,QAAQ,GAAG0xB,yBAAyB,CAACG,QAAQ;AAC7Cz4B,IAAAA,KAAK,GAAG,IAAA;GAAI,GACsB,EAAE,EAAA;AACpC,IAAA,KAAK,CAAC;MACJ4G,QAAQ;AACR5G,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IA6DI,IAAS,CAAA0gB,SAAA,GAAG,MAAK;AACvB,MAAA,IAAI,CAAC2Z,aAAa,CAAC5yB,MAAM,EAAE,CAAA;KAC5B,CAAA;IAEO,IAAa,CAAA6yB,aAAA,GAAG,MAAK;AAC3B,MAAA,MAAM/e,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,EAAE,OAAA;AAEZ,MAAA,IAAI,CAACif,YAAY,GAAGjf,KAAK,CAACF,MAAM,CAACqC,WAAW,CAAA;AAC5C,MAAA,IAAI,CAAC2c,aAAa,CAACH,WAAW,CAAC,IAAI,CAACM,YAAY,GAAG,IAAI,CAAC92B,SAAS,CAAC,CAAA;KACnE,CAAA;IAEO,IAAiB,CAAA+2B,iBAAA,GAAG,MAAK;AAC/B,MAAA,MAAMlf,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,EAAE,OAAA;AAEZ,MAAA,IAAI,CAAC7X,SAAS,GAAG6X,KAAK,CAACF,MAAM,CAAC5X,QAAQ,CAAA;AACtC,MAAA,IAAI,CAAC42B,aAAa,CAACH,WAAW,CAAC,IAAI,CAACM,YAAY,GAAG,IAAI,CAAC92B,SAAS,CAAC,CAAA;KACnE,CAAA;AAEO,IAAA,IAAA,CAAAo1B,OAAO,GAAIz1B,QAAgB,IAAI;AACrC,MAAA,MAAMkY,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;AACzB,MAAA,MAAMG,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AACnC,MAAA,IAAI,CAACpf,KAAK,IAAI,CAACmf,UAAU,EAAE,OAAA;AAE3B,MAAA,MAAM9e,MAAM,GAAGL,KAAK,CAACI,QAAQ,EAAE,CAAA;AAE/BJ,MAAAA,KAAK,CAACF,MAAM,CAACG,KAAK,EAAE,CAAA;MAEpB,MAAMqE,IAAI,GAAGtE,KAAK,CAACF,MAAM,CAAC5X,QAAQ,GAAGJ,QAAQ,CAAA;AAC7CkY,MAAAA,KAAK,CAACF,MAAM,CAACqC,WAAW,GAAGmC,IAAI,CAAA;MAC/BtE,KAAK,CAACF,MAAM,CAACuf,aAAa,CAAC,IAAIC,WAAW,CAACv+B,uBAAuB,EAAE;AAAEw+B,QAAAA,MAAM,EAAE;AAAEjb,UAAAA,IAAAA;;AAAO,OAAA,CAAC,CAAC,CAAA;AAEzF6a,MAAAA,UAAU,CAACtV,MAAM,CAAC5nB,SAAS,CAACC,GAAG,CAACi9B,UAAU,CAACv9B,SAAS,CAACg7B,KAAK,CAAC,CAAA;MAC3D,IAAI,CAAC4C,UAAU,GAAG,CAAC,IAAI,CAACC,YAAY,IAAIpf,MAAM,CAAA;KAC/C,CAAA;AAEO,IAAA,IAAA,CAAAqf,UAAU,GAAI53B,QAAgB,IAAI;AACxC,MAAA,MAAMkY,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,EAAE,OAAA;MAEZ,MAAMsE,IAAI,GAAGtE,KAAK,CAACF,MAAM,CAAC5X,QAAQ,GAAGJ,QAAQ,CAAA;AAC7CkY,MAAAA,KAAK,CAACF,MAAM,CAACqC,WAAW,GAAGmC,IAAI,CAAA;MAC/BtE,KAAK,CAACF,MAAM,CAACuf,aAAa,CAAC,IAAIC,WAAW,CAACv+B,uBAAuB,EAAE;AAAEw+B,QAAAA,MAAM,EAAE;AAAEjb,UAAAA,IAAAA;;AAAO,OAAA,CAAC,CAAC,CAAA;KAC1F,CAAA;IAEO,IAAU,CAAA0Z,UAAA,GAAG,MAAK;AACxB,MAAA,MAAMhe,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;AACzB,MAAA,MAAMG,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;MAEnC,IAAIpf,KAAK,IAAImf,UAAU,EAAE;QACvB,IAAI,CAAC,IAAI,CAACK,UAAU,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;AAC1C,UAAA,IAAI,CAACA,YAAY,GAAGzf,KAAK,CAACF,MAAM,CAACsC,IAAI,EAAE,CACpC/E,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAA;AAEtB;AACA,UAAA,IAAI,CAACoiB,YAAY,CAACtyB,IAAI,CAAC,MAAK;YAC1B,IAAI,CAACsyB,YAAY,GAAG,IAAI,CAAA;AAC1B,WAAC,CAAC,CAAA;AAEFN,UAAAA,UAAU,CAACtV,MAAM,CAAC5nB,SAAS,CAACgpB,MAAM,CAACkU,UAAU,CAACv9B,SAAS,CAACg7B,KAAK,CAAC,CAAA;AAC/D,SAAA;AACF,OAAA;MAED,IAAI,CAAC4C,UAAU,GAAG,KAAK,CAAA;KACxB,CAAA;IA5HC,IAAI,CAACn0B,QAAQ,GAAGA,QAAQ,CAAA;IACxB,IAAI,CAAC5G,KAAK,GAAGA,KAAK,CAAA;IAElB,IAAI,CAAC26B,WAAW,GAAG,IAAI,CAAA;AACvB,IAAA,IAAI,CAACN,aAAa,GAAG,IAAIxB,YAAY,EAAE,CAAA;IAEvC,IAAI,CAAC0B,MAAM,GAAG,IAAI,CAAA;IAClB,IAAI,CAACQ,UAAU,GAAG,KAAK,CAAA;IACvB,IAAI,CAACP,YAAY,GAAG,CAAC,CAAA;IACrB,IAAI,CAAC92B,SAAS,GAAG,CAAC,CAAA;IAClB,IAAI,CAACs3B,YAAY,GAAG,IAAI,CAAA;AAC1B,GAAA;AAEOtS,EAAAA,IAAIA,CAACxG,MAAe,EAAEwY,UAAsB,EAAA;;IACjD,MAAMnf,KAAK,GAAG,CAAA5e,EAAA,GAAAulB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAn1B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEk3B,UAAU,EAAE,CAAA;AACvC,IAAA,MAAMtnB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,IAAA,MAAM2uB,YAAY,GAAG,IAAI,CAACb,aAAa,CAAA;AACvC,IAAA,MAAMc,gBAAgB,GAAGT,UAAU,CAACv9B,SAAS,CAACi7B,WAAW,CAAA;IAEzD,IAAI,CAAC7c,KAAK,IAAI,CAACA,KAAK,CAACL,OAAO,EAAE,EAAE;AAC9B3O,MAAAA,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAAC09B,gBAAgB,CAAC,CAAA;AACvC,MAAA,OAAA;AACD,KAAA;AAED5uB,IAAAA,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAAC2U,gBAAgB,CAAC,CAAA;IAC1C5uB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACi9B,UAAU,CAACv9B,SAAS,CAAC+5B,aAAa,CAAC,CAAA;IACzDhV,MAAM,CAACrQ,EAAE,CAACtc,MAAM,CAACQ,MAAM,EAAE,IAAI,CAAC2qB,SAAS,CAAC,CAAA;AACxCnF,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC5F,iBAAiB,EAAE,IAAI,CAAC6iC,aAAa,CAAC,CAAA;AACnF/e,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC3F,qBAAqB,EAAE,IAAI,CAAC+iC,iBAAiB,CAAC,CAAA;IAC3Flf,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACrP,uBAAuB,EAAE,IAAI,CAACg+B,aAAa,CAAC,CAAA;AAC1EY,IAAAA,YAAY,CAACxS,IAAI,CAACgS,UAAU,CAACv9B,SAAS,CAAC,CAAA;IACvC+9B,YAAY,CAACrpB,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAAC6+B,OAAO,CAAC,CAAA;IACzDoC,YAAY,CAACrpB,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAAC6/B,UAAU,CAAC,CAAA;IACvDC,YAAY,CAACrpB,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAACq/B,UAAU,CAAC,CAAA;IAE1D,IAAI,CAACgB,MAAM,GAAGhf,KAAK,CAAA;AACnB,IAAA,IAAI,CAACif,YAAY,GAAGjf,KAAK,CAACF,MAAM,CAACqC,WAAW,CAAA;AAC5C,IAAA,IAAI,CAACha,SAAS,GAAG6X,KAAK,CAACF,MAAM,CAAC5X,QAAQ,CAAA;IACtC,IAAI,CAACk3B,WAAW,GAAGD,UAAU,CAAA;IAE7BQ,YAAY,CAAChB,WAAW,CAAC,IAAI,CAACM,YAAY,GAAG,IAAI,CAAC92B,SAAS,CAAC,CAAA;AAC9D,GAAA;EAEO6D,OAAOA,CAAC2a,MAAe,EAAA;AAC5B,IAAA,MAAM3G,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;IAEzBrY,MAAM,CAAC1a,GAAG,CAACjS,MAAM,CAACQ,MAAM,EAAE,IAAI,CAAC2qB,SAAS,CAAC,CAAA;AAEzC,IAAA,IAAInF,KAAK,EAAE;AACTA,MAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC5F,iBAAiB,EAAE,IAAI,CAAC6iC,aAAa,CAAC,CAAA;AACtF/e,MAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC3F,qBAAqB,EAAE,IAAI,CAAC+iC,iBAAiB,CAAC,CAAA;MAC9Flf,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC9P,uBAAuB,EAAE,IAAI,CAACg+B,aAAa,CAAC,CAAA;AAC9E,KAAA;AAED,IAAA,IAAI,CAACD,aAAa,CAAC9yB,OAAO,EAAE,CAAA;IAC5B,IAAI,CAACgzB,MAAM,GAAG,IAAI,CAAA;IAClB,IAAI,CAACS,YAAY,GAAG,IAAI,CAAA;AAC1B,GAAA;AAoED;;ACjKD;;;;;;AAMG;AACH,MAAMI,UAAW,SAAQ/E,cAAc,CAAA;AAMrC;;;;AAIG;AACH1iC,EAAAA,WAAmBA,CAAA;IACjBiT,QAAQ,GAAG0xB,yBAAyB,CAACK,SAAS;AAC9C34B,IAAAA,KAAK,GAAG,IAAA;GAAI,GACsB,EAAE,EAAA;AACpC,IAAA,KAAK,CAAC;MACJ4G,QAAQ;AACR5G,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IAuDI,IAAQ,CAAAq7B,QAAA,GAAG,MAAK;AACtB,MAAA,MAAM9f,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,EAAE,OAAA;MAEZ,IAAI,IAAI,CAAC+f,OAAO,EAAE;AAChB/f,QAAAA,KAAK,CAACF,MAAM,CAACsC,IAAI,EAAE,CAAA;AACpB,OAAA,MAAM;AACLpC,QAAAA,KAAK,CAACF,MAAM,CAACG,KAAK,EAAE,CAAA;AACrB,OAAA;KACF,CAAA;IAEO,IAAO,CAAA+f,OAAA,GAAG,MAAK;AACrB,MAAA,IAAI,CAAC,IAAI,CAACZ,WAAW,EAAE,OAAA;AAEvB,MAAA,MAAMpuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,MAAA,MAAMpP,SAAS,GAAG,IAAI,CAACw9B,WAAW,CAACx9B,SAAS,CAAA;MAE5CoP,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAACs6B,YAAY,CAAC,CAAA;MAC7ClrB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACq6B,WAAW,CAAC,CAAA;MAC/CjrB,OAAO,CAACivB,KAAK,GAAG,aAAa,CAAA;MAE7B,IAAI,CAACF,OAAO,GAAG,KAAK,CAAA;KACrB,CAAA;IAEO,IAAQ,CAAAG,QAAA,GAAG,MAAK;AACtB,MAAA,IAAI,CAAC,IAAI,CAACd,WAAW,EAAE,OAAA;AAEvB,MAAA,MAAMpuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,MAAA,MAAMpP,SAAS,GAAG,IAAI,CAACw9B,WAAW,CAACx9B,SAAS,CAAA;MAE5CoP,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAACq6B,WAAW,CAAC,CAAA;MAC5CjrB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACs6B,YAAY,CAAC,CAAA;MAChDlrB,OAAO,CAACivB,KAAK,GAAG,YAAY,CAAA;MAE5B,IAAI,CAACF,OAAO,GAAG,IAAI,CAAA;KACpB,CAAA;IAxFC,IAAI,CAAC/uB,OAAO,GAAGhP,QAAQ,CAACL,aAAa,CAACG,SAAiB,CAAC,CAAA;IAExD,IAAI,CAACk9B,MAAM,GAAG,IAAI,CAAA;IAClB,IAAI,CAACe,OAAO,GAAG,IAAI,CAAA;IACnB,IAAI,CAACX,WAAW,GAAG,IAAI,CAAA;AACzB,GAAA;AAEOjS,EAAAA,IAAIA,CAACxG,MAAe,EAAEwY,UAAsB,EAAA;;AACjD,IAAA,MAAMnuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;IAC5B,MAAMgP,KAAK,GAAG,CAAA5e,EAAA,GAAAulB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAn1B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEk3B,UAAU,EAAE,CAAA;AACvC,IAAA,MAAM12B,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;AACtC,IAAA,MAAMg+B,gBAAgB,GAAGh+B,SAAS,CAACi7B,WAAW,CAAA;IAE9C,IAAI,CAAC7c,KAAK,IAAI,CAACA,KAAK,CAACL,OAAO,EAAE,EAAE;AAC9B3O,MAAAA,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAAC09B,gBAAgB,CAAC,CAAA;AACvC,MAAA,OAAA;AACD,KAAA;IAED5uB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC85B,eAAe,CAAC,CAAA;AAChD1qB,IAAAA,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAAC2U,gBAAgB,CAAC,CAAA;AAE1C,IAAA,MAAMvf,MAAM,GAAGL,KAAK,CAACI,QAAQ,EAAE,CAAA;IAC/B,IAAI,CAAC4e,MAAM,GAAGhf,KAAK,CAAA;IACnB,IAAI,CAAC+f,OAAO,GAAG1f,MAAM,CAAA;IACrB,IAAI,CAAC+e,WAAW,GAAGD,UAAU,CAAA;AAE7B,IAAA,IAAI9e,MAAM,EAAE;MACV,IAAI,CAAC6f,QAAQ,EAAE,CAAA;AAChB,KAAA,MAAM;MACL,IAAI,CAACF,OAAO,EAAE,CAAA;AACf,KAAA;AAEDhvB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;AAC7D9f,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAChG,UAAU,EAAE,IAAI,CAACkkC,OAAO,CAAC,CAAA;AACtEhgB,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC/F,WAAW,EAAE,IAAI,CAACmkC,QAAQ,CAAC,CAAA;AAC1E,GAAA;AAEOl0B,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMgU,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;AACzB,IAAA,MAAMhuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;IAE5B,IAAI,CAACgP,KAAK,EAAE,OAAA;IAEZhP,OAAO,CAACpP,SAAS,GAAG,EAAE,CAAA;AACtBoP,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;AAChE9f,IAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAChG,UAAU,EAAE,IAAI,CAACkkC,OAAO,CAAC,CAAA;AACzEhgB,IAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC/F,WAAW,EAAE,IAAI,CAACmkC,QAAQ,CAAC,CAAA;IAE3E,IAAI,CAAClB,MAAM,GAAG,IAAI,CAAA;IAClB,IAAI,CAACe,OAAO,GAAG,IAAI,CAAA;IACnB,IAAI,CAACX,WAAW,GAAG,IAAI,CAAA;AACzB,GAAA;AAsCD;;ACjHD;;;;;;AAMG;AACH,MAAMe,aAAc,SAAQrF,cAAc,CAAA;EACxC,IAAW9pB,OAAOA;IAAK,OAAO,IAAI,CAAC6lB,OAAO,CAAA;AAAE,GAAA;AAQ5C;;;;AAIG;AACHz+B,EAAAA,WAAmBA,CAAA;IACjBiT,QAAQ,GAAG0xB,yBAAyB,CAACM,UAAU;AAC/C54B,IAAAA,KAAK,GAAG,IAAA;GAAI,GACsB,EAAE,EAAA;AACpC,IAAA,KAAK,CAAC;MACJ4G,QAAQ;AACR5G,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IA2EI,IAAS,CAAA0gB,SAAA,GAAG,MAAK;AACvB,MAAA,IAAI,CAAC2Z,aAAa,CAAC5yB,MAAM,EAAE,CAAA;MAC3B,IAAI,CAACk0B,cAAc,EAAE,CAAA;KACtB,CAAA;IAEO,IAAQ,CAAAN,QAAA,GAAG,MAAK;AACtB,MAAA,MAAM9f,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,IAAI,IAAI,CAAC6W,OAAO,CAACwJ,QAAQ,EAAE,OAAA;MAErCrgB,KAAK,CAACF,MAAM,CAACkC,KAAK,GAAG,CAAChC,KAAK,CAACF,MAAM,CAACkC,KAAK,CAAA;KACzC,CAAA;IAEO,IAAe,CAAAse,eAAA,GAAG,MAAK;AAC7B,MAAA,MAAMxwB,MAAM,GAAG,IAAI,CAACywB,SAAS,CAAA;AAC7B,MAAA,MAAMvgB,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;AACzB,MAAA,MAAMG,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AAEnC,MAAA,IAAI,CAACpf,KAAK,IAAI,CAACmf,UAAU,EAAE,OAAA;AAE3B,MAAA,MAAMv9B,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;AAEtC,MAAA,IAAIoe,KAAK,CAACF,MAAM,CAACkC,KAAK,IAAIhC,KAAK,CAACF,MAAM,CAACmC,MAAM,KAAK,CAAC,EAAE;QACnDnS,MAAM,CAAC7N,SAAS,CAACC,GAAG,CAACN,SAAS,CAACw6B,YAAY,CAAC,CAAA;QAC5CtsB,MAAM,CAAC7N,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACu6B,cAAc,CAAC,CAAA;AAClD,OAAA,MAAM;QACLrsB,MAAM,CAAC7N,SAAS,CAACC,GAAG,CAACN,SAAS,CAACu6B,cAAc,CAAC,CAAA;QAC9CrsB,MAAM,CAAC7N,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACw6B,YAAY,CAAC,CAAA;AAChD,OAAA;MAED,IAAI,CAACgE,cAAc,EAAE,CAAA;KACtB,CAAA;AAcO,IAAA,IAAA,CAAA7C,OAAO,GAAIz1B,QAAgB,IAAI;AACrC,MAAA,MAAMkY,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;AACzB,MAAA,MAAMG,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AAEnC,MAAA,IAAI,CAACpf,KAAK,IAAI,CAACmf,UAAU,EAAE,OAAA;AAE3B,MAAA,MAAMv9B,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;AAEtCoe,MAAAA,KAAK,CAACF,MAAM,CAACmC,MAAM,GAAGna,QAAQ,CAAA;MAE9B,IAAI,CAAC+uB,OAAO,CAAC50B,SAAS,CAACC,GAAG,CAACN,SAAS,CAACg7B,KAAK,CAAC,CAAA;MAC3CuC,UAAU,CAACqB,WAAW,CAACv+B,SAAS,CAACC,GAAG,CAACN,SAAS,CAACg7B,KAAK,CAAC,CAAA;MAErD,IAAI,CAACwD,cAAc,EAAE,CAAA;KACtB,CAAA;AAEO,IAAA,IAAA,CAAAtrB,SAAS,GAAIhN,QAAgB,IAAI;AACvC,MAAA,MAAMkY,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,EAAE,OAAA;AAEZA,MAAAA,KAAK,CAACF,MAAM,CAACmC,MAAM,GAAGna,QAAQ,CAAA;MAC9B,IAAIA,QAAQ,GAAG,CAAC,EAAE;AAChBkY,QAAAA,KAAK,CAACF,MAAM,CAACkC,KAAK,GAAG,KAAK,CAAA;AAC3B,OAAA,MAAM;AACLhC,QAAAA,KAAK,CAACF,MAAM,CAACkC,KAAK,GAAG,IAAI,CAAA;AAC1B,OAAA;MAED,IAAI,CAACoe,cAAc,EAAE,CAAA;KACtB,CAAA;IAEO,IAAU,CAAApC,UAAA,GAAG,MAAK;AACxB,MAAA,MAAMmB,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;MACnC,IAAI,CAACD,UAAU,EAAE,OAAA;AAEjB,MAAA,MAAMv9B,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;MAEtC,IAAI,CAACi1B,OAAO,CAAC50B,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACg7B,KAAK,CAAC,CAAA;MAC9CuC,UAAU,CAACqB,WAAW,CAACv+B,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACg7B,KAAK,CAAC,CAAA;KACzD,CAAA;IAEO,IAAc,CAAAwD,cAAA,GAAG,MAAK;AAC5B,MAAA,MAAMpgB,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;AACzB,MAAA,MAAMr8B,IAAI,GAAG,IAAI,CAACk0B,OAAO,CAAA;MACzB,IAAI,CAAC7W,KAAK,EAAE,OAAA;AAEZ,MAAA,IAAI,CAACA,KAAK,CAACQ,QAAQ,EAAE,EAAE;QACrB7d,IAAI,CAAC09B,QAAQ,GAAG,IAAI,CAAA;AACpB,QAAA,OAAA;AACD,OAAA;MAED19B,IAAI,CAAC09B,QAAQ,GAAG,KAAK,CAAA;AAErB,MAAA,MAAMpe,MAAM,GAAGjC,KAAK,CAACF,MAAM,CAACkC,KAAK,GAAG,CAAC,GAAGhC,KAAK,CAACF,MAAM,CAACmC,MAAM,CAAA;AAE3D,MAAA,IAAI,CAAC6c,aAAa,CAACH,WAAW,CAAC1c,MAAM,CAAC,CAAA;KACvC,CAAA;IA5KC,IAAI,CAACmd,WAAW,GAAG,IAAI,CAAA;AACvB,IAAA,IAAI,CAACN,aAAa,GAAG,IAAIxB,YAAY,EAAE,CAAA;IACvC,IAAI,CAAC3C,eAAe,EAAE,CAAA;IAEtB,IAAI,CAACqE,MAAM,GAAG,IAAI,CAAA;AACpB,GAAA;AAEO7R,EAAAA,IAAIA,CAACxG,MAAe,EAAEwY,UAAsB,EAAA;;IACjD,MAAMnf,KAAK,GAAG,CAAA5e,EAAA,GAAAulB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAn1B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEk3B,UAAU,EAAE,CAAA;AACvC,IAAA,MAAM31B,IAAI,GAAG,IAAI,CAACk0B,OAAO,CAAA;AACzB,IAAA,MAAM/mB,MAAM,GAAG,IAAI,CAACywB,SAAS,CAAA;AAC7B,IAAA,MAAMZ,YAAY,GAAG,IAAI,CAACb,aAAa,CAAA;AACvC,IAAA,MAAMl9B,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;AACtC,IAAA,MAAMg+B,gBAAgB,GAAGh+B,SAAS,CAACi7B,WAAW,CAAA;IAE9C,IAAI,CAAC7c,KAAK,IAAI,CAACA,KAAK,CAACL,OAAO,EAAE,EAAE;AAC9Bhd,MAAAA,IAAI,CAACV,SAAS,CAACC,GAAG,CAAC09B,gBAAgB,CAAC,CAAA;AACpC,MAAA,OAAA;AACD,KAAA;AAEDj9B,IAAAA,IAAI,CAACV,SAAS,CAACgpB,MAAM,CAAC2U,gBAAgB,CAAC,CAAA;IACvCj9B,IAAI,CAACV,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC85B,eAAe,CAAC,CAAA;IAC7C/4B,IAAI,CAACV,SAAS,CAACC,GAAG,CAACN,SAAS,CAACg6B,WAAW,CAAC,CAAA;IACzC9rB,MAAM,CAAC7N,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC85B,eAAe,CAAC,CAAA;AAE/C,IAAA,IAAI1b,KAAK,CAACF,MAAM,CAACkC,KAAK,EAAE;MACtBlS,MAAM,CAAC7N,SAAS,CAACC,GAAG,CAACN,SAAS,CAACw6B,YAAY,CAAC,CAAA;AAC7C,KAAA,MAAM;MACLtsB,MAAM,CAAC7N,SAAS,CAACC,GAAG,CAACN,SAAS,CAACu6B,cAAc,CAAC,CAAA;AAC/C,KAAA;IAEDxV,MAAM,CAACrQ,EAAE,CAACtc,MAAM,CAACQ,MAAM,EAAE,IAAI,CAAC2qB,SAAS,CAAC,CAAA;AACxCxiB,IAAAA,IAAI,CAACyN,gBAAgB,CAACtO,QAAc,CAACzF,cAAc,EAAE,IAAI,CAAC8oB,SAAS,CAAC,CAAA;AACpErV,IAAAA,MAAM,CAACM,gBAAgB,CAACtO,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;AAE5D9f,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC7F,mBAAmB,EAAE,IAAI,CAACqkC,eAAe,CAAC,CAAA;AACvFtgB,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC9F,iBAAiB,EAAE,IAAI,CAACokC,cAAc,CAAC,CAAA;AACpFpgB,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC1F,qBAAqB,EAAE,IAAI,CAACgkC,cAAc,CAAC,CAAA;AAExFT,IAAAA,YAAY,CAACxS,IAAI,CAACvrB,SAAS,CAAC,CAAA;IAC5B+9B,YAAY,CAACrpB,EAAE,CAACrW,cAAc,CAACvB,WAAW,EAAE,IAAI,CAAC6+B,OAAO,CAAC,CAAA;IACzDoC,YAAY,CAACrpB,EAAE,CAACrW,cAAc,CAACJ,MAAM,EAAE,IAAI,CAACiV,SAAS,CAAC,CAAA;IACtD6qB,YAAY,CAACrpB,EAAE,CAACrW,cAAc,CAACtB,SAAS,EAAE,IAAI,CAACq/B,UAAU,CAAC,CAAA;IAE1D,IAAI,CAACoB,WAAW,GAAGD,UAAU,CAAA;IAC7B,IAAI,CAACH,MAAM,GAAGhf,KAAK,CAAA;IAEnB,IAAI,CAACogB,cAAc,EAAE,CAAA;AACvB,GAAA;EAEOp0B,OAAOA,CAAC2a,MAAe,EAAA;AAC5B,IAAA,MAAM3G,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;AACzB,IAAA,MAAMlvB,MAAM,GAAG,IAAI,CAACywB,SAAS,CAAA;AAC7B,IAAA,MAAM59B,IAAI,GAAG,IAAI,CAACk0B,OAAO,CAAA;IAEzBl0B,IAAI,CAACf,SAAS,GAAG,EAAE,CAAA;IACnBkO,MAAM,CAAClO,SAAS,GAAG,EAAE,CAAA;IAErB+kB,MAAM,CAAC1a,GAAG,CAACjS,MAAM,CAACQ,MAAM,EAAE,IAAI,CAAC2qB,SAAS,CAAC,CAAA;AACzCxiB,IAAAA,IAAI,CAACkO,mBAAmB,CAAC/O,QAAc,CAACzF,cAAc,EAAE,IAAI,CAAC8oB,SAAS,CAAC,CAAA;AACvErV,IAAAA,MAAM,CAACe,mBAAmB,CAAC/O,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;AAE/D,IAAA,IAAI9f,KAAK,EAAE;AACTA,MAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC7F,mBAAmB,EAAE,IAAI,CAACqkC,eAAe,CAAC,CAAA;AAC1FtgB,MAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC9F,iBAAiB,EAAE,IAAI,CAACokC,cAAc,CAAC,CAAA;AACvFpgB,MAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC1F,qBAAqB,EAAE,IAAI,CAACgkC,cAAc,CAAC,CAAA;AAC5F,KAAA;IAED,IAAI,CAAChB,WAAW,GAAG,IAAI,CAAA;AACvB,IAAA,IAAI,CAACN,aAAa,CAAC9yB,OAAO,EAAE,CAAA;IAC5B,IAAI,CAACgzB,MAAM,GAAG,IAAI,CAAA;AACpB,GAAA;AAkCQrE,EAAAA,eAAeA,GAAA;IACrB,MAAMh4B,IAAI,GAAGX,QAAQ,CAACL,aAAa,CAACG,SAAiB,CAAC,CAAA;IACtD,MAAM2+B,QAAQ,GAAGz+B,QAAQ,CAACL,aAAa,CAACG,MAAc,CAAC,CAAA;IAEvDa,IAAI,CAACghB,WAAW,CAAC,IAAI,CAACmb,aAAa,CAACjV,MAAM,CAAC,CAAA;AAC3ClnB,IAAAA,IAAI,CAACghB,WAAW,CAAC8c,QAAQ,CAAC,CAAA;IAC1B99B,IAAI,CAACs9B,KAAK,GAAG,aAAa,CAAA;IAE1B,IAAI,CAACpJ,OAAO,GAAGl0B,IAAI,CAAA;IACnB,IAAI,CAAC49B,SAAS,GAAGE,QAAQ,CAAA;AAC3B,GAAA;AA0DD;;AC9MD;;;;;;AAMG;AACH,MAAMC,gBAAiB,SAAQ5F,cAAc,CAAA;AAK3C;;;;AAIG;AACH1iC,EAAAA,WAAmBA,CAAA;IACjBiT,QAAQ,GAAG0xB,yBAAyB,CAACM,UAAU;AAC/C54B,IAAAA,KAAK,GAAG,IAAA;GAAI,GACsB,EAAE,EAAA;AACpC,IAAA,KAAK,CAAC;MACJ4G,QAAQ;AACR5G,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IA2CI,IAAQ,CAAAq7B,QAAA,GAAG,MAAK;AACtB,MAAA,MAAMpG,MAAM,GAAG,IAAI,CAACiH,SAAS,CAAA;MAC7B,IAAI,CAACjH,MAAM,EAAE,OAAA;MAEb,IAAI30B,YAAY,EAAE,EAAE;QAClB,IAAI,CAAC67B,eAAe,EAAE,CAAA;AACvB,OAAA,MAAM;AACL,QAAA,IAAI,CAACC,kBAAkB,CAACnH,MAAM,CAAC,CAAA;AAChC,OAAA;KACF,CAAA;IAuCO,IAAmB,CAAAoH,mBAAA,GAAG,MAAK;AACjC,MAAA,MAAM9vB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,MAAA,MAAMmuB,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;MAEnC,IAAI,CAACD,UAAU,EAAE,OAAA;AAEjB,MAAA,MAAMv9B,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;MAEtC,IAAImD,YAAY,EAAE,EAAE;QAClBiM,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC06B,sBAAsB,CAAC,CAAA;QACvDtrB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACy6B,iBAAiB,CAAC,CAAA;AACtD,OAAA,MAAM;QACLrrB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAACy6B,iBAAiB,CAAC,CAAA;QAClDrrB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAAC06B,sBAAsB,CAAC,CAAA;AAC3D,OAAA;KACF,CAAA;IAxGC,IAAI,CAACtrB,OAAO,GAAGhP,QAAQ,CAACL,aAAa,CAACG,SAAiB,CAAC,CAAA;AACxD,IAAA,IAAI,CAACkP,OAAO,CAACivB,KAAK,GAAG,mBAAmB,CAAA;IACxC,IAAI,CAACb,WAAW,GAAG,IAAI,CAAA;IACvB,IAAI,CAACuB,SAAS,GAAG,IAAI,CAAA;AACvB,GAAA;AAEOxT,EAAAA,IAAIA,CAACxG,MAAe,EAAEwY,UAAsB,EAAA;AACjD,IAAA,MAAMnuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,IAAA,MAAMpP,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;AAEtC,IAAA,IAAI,CAAC,IAAI,CAACm/B,oBAAoB,EAAE,EAAE;MAChC/vB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAACi7B,WAAW,CAAC,CAAA;AAC5C,MAAA,OAAA;AACD,KAAA;IAED7rB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC85B,eAAe,CAAC,CAAA;IAChD1qB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACi7B,WAAW,CAAC,CAAA;AAC/C7rB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;IAC7D,IAAI,CAACkB,sBAAsB,EAAE,CAAA;IAE7B,IAAIj8B,YAAY,EAAE,EAAE;MAClBiM,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC06B,sBAAsB,CAAC,CAAA;AACxD,KAAA,MAAM;MACLtrB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAACy6B,iBAAiB,CAAC,CAAA;AACnD,KAAA;IAED,IAAI,CAAC+C,WAAW,GAAGD,UAAU,CAAA;AAC7B,IAAA,IAAI,CAACwB,SAAS,GAAGha,MAAM,CAACkD,MAAM,CAAA;AAChC,GAAA;AAEO7d,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMgF,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;IAE5BA,OAAO,CAACpP,SAAS,GAAG,EAAE,CAAA;AACtBoP,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;IAChE,IAAI,CAACmB,yBAAyB,EAAE,CAAA;IAEhC,IAAI,CAAC7B,WAAW,GAAG,IAAI,CAAA;IACvB,IAAI,CAACuB,SAAS,GAAG,IAAI,CAAA;AACvB,GAAA;AAaQI,EAAAA,oBAAoBA,GAAA;AAC1B,IAAA,OAAOj/B,kBAA0B,CAACo/B,IAAI,CAACl8B,GAAG,IAAI,CAAC,CAAChD,QAAQ,CAACgD,GAAG,CAAC,CAAC,CAAA;AAChE,GAAA;EAEQ67B,kBAAkBA,CAAC9+B,EAAe,EAAA;AACxC,IAAA,KAAK,MAAMiD,GAAG,IAAIlD,kBAA0B,EAAE;AAC5C,MAAA,MAAMq/B,OAAO,GAAGp/B,EAAE,CAACiD,GAAG,CAAC,CAAA;AACvB,MAAA,IAAIm8B,OAAO,EAAE;AACXA,QAAAA,OAAO,CAACC,IAAI,CAACr/B,EAAE,CAAC,CAAA;AAChB,QAAA,OAAA;AACD,OAAA;AACF,KAAA;AACH,GAAA;AAEQ6+B,EAAAA,eAAeA,GAAA;AACrB,IAAA,KAAK,MAAM57B,GAAG,IAAIlD,eAAuB,EAAE;AACzC,MAAA,MAAM2lB,IAAI,GAAGzlB,QAAQ,CAACgD,GAAG,CAAC,CAAA;AAE1B,MAAA,IAAIyiB,IAAI,EAAE;AACRA,QAAAA,IAAI,CAAC2Z,IAAI,CAACp/B,QAAQ,CAAC,CAAA;AACnB,QAAA,OAAA;AACD,OAAA;AACF,KAAA;AACH,GAAA;AAEQg/B,EAAAA,sBAAsBA,GAAA;AAC5Bl/B,IAAAA,iBAAyB,CAACuhB,OAAO,CAAC2W,OAAO,IAAG;MAC1Ch4B,QAAQ,CAACoO,gBAAgB,CAAC4pB,OAAO,EAAE,IAAI,CAAC8G,mBAAmB,CAAC,CAAA;AAC9D,KAAC,CAAC,CAAA;AACJ,GAAA;AAEQG,EAAAA,yBAAyBA,GAAA;AAC/Bn/B,IAAAA,iBAAyB,CAACuhB,OAAO,CAAC2W,OAAO,IAAG;MAC1Ch4B,QAAQ,CAAC6O,mBAAmB,CAACmpB,OAAO,EAAE,IAAI,CAAC8G,mBAAmB,CAAC,CAAA;AACjE,KAAC,CAAC,CAAA;AACJ,GAAA;AAkBD;;AClID;;;;;;AAMG;AACH,MAAMO,SAAU,SAAQvG,cAAc,CAAA;AAMpC;;;;AAIG;AACH1iC,EAAAA,WAAmBA,CAAA;IACjBiT,QAAQ,GAAG0xB,yBAAyB,CAACK,SAAS;AAC9C34B,IAAAA,KAAK,GAAG,IAAA;GAAI,GACsB,EAAE,EAAA;AACpC,IAAA,KAAK,CAAC;MACJ4G,QAAQ;AACR5G,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IA8CI,IAAa,CAAAs6B,aAAA,GAAG,MAAK;AAC3B,MAAA,MAAM/e,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,EAAE,OAAA;AAEZ,MAAA,IAAI,CAACif,YAAY,GAAGjf,KAAK,CAACF,MAAM,CAACqC,WAAW,CAAA;MAC5C,IAAI,CAACie,cAAc,EAAE,CAAA;KACtB,CAAA;IAEO,IAAiB,CAAAlB,iBAAA,GAAG,MAAK;AAC/B,MAAA,MAAMlf,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,EAAE,OAAA;AAEZ,MAAA,IAAI,CAAC7X,SAAS,GAAG6X,KAAK,CAACF,MAAM,CAAC5X,QAAQ,CAAA;MACtC,IAAI,CAACk4B,cAAc,EAAE,CAAA;KACtB,CAAA;AAEO,IAAA,IAAA,CAAAkB,mBAAmB,GAAI1xB,GAAkC,IAAI;AACnE,MAAA,IAAI,CAACqvB,YAAY,GAAGrvB,GAAG,CAAC2vB,MAAM,CAACjb,IAAI,CAAA;MACnC,IAAI,CAAC8b,cAAc,EAAE,CAAA;KACtB,CAAA;IA/DC,IAAI,CAACpvB,OAAO,GAAGhP,QAAQ,CAACL,aAAa,CAACG,MAAc,CAAC,CAAA;IAErD,IAAI,CAACk9B,MAAM,GAAG,IAAI,CAAA;IAClB,IAAI,CAACC,YAAY,GAAG,CAAC,CAAA;IACrB,IAAI,CAAC92B,SAAS,GAAG,CAAC,CAAA;AACpB,GAAA;AAEOglB,EAAAA,IAAIA,CAACxG,MAAe,EAAEwY,UAAsB,EAAA;;IACjD,MAAMnf,KAAK,GAAG,CAAA5e,EAAA,GAAAulB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAn1B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEk3B,UAAU,EAAE,CAAA;AACvC,IAAA,MAAMtnB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,IAAA,MAAMpP,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;IAEtC,IAAI,CAACoe,KAAK,IAAI,CAACA,KAAK,CAACL,OAAO,EAAE,EAAE;MAC9B3O,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAACi7B,WAAW,CAAC,CAAA;AAC5C,MAAA,OAAA;AACD,KAAA;IAED7rB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC86B,kBAAkB,CAAC,CAAA;IACnD1rB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACi7B,WAAW,CAAC,CAAA;AAE/C7c,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC5F,iBAAiB,EAAE,IAAI,CAAC6iC,aAAa,CAAC,CAAA;AACnF/e,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC3F,qBAAqB,EAAE,IAAI,CAAC+iC,iBAAiB,CAAC,CAAA;IAC3Flf,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACrP,uBAAuB,EAAE,IAAI,CAACugC,mBAAmB,CAAC,CAAA;IAEhF,IAAI,CAACtC,MAAM,GAAGhf,KAAK,CAAA;AACnB,IAAA,IAAI,CAACif,YAAY,GAAGjf,KAAK,CAACF,MAAM,CAACqC,WAAW,CAAA;AAC5C,IAAA,IAAI,CAACha,SAAS,GAAG6X,KAAK,CAACF,MAAM,CAAC5X,QAAQ,CAAA;IAEtC,IAAI,CAACk4B,cAAc,EAAE,CAAA;AACvB,GAAA;AAEOp0B,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMgU,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;IAEzB,IAAI,CAAChf,KAAK,EAAE,OAAA;AAEZ,IAAA,IAAI,CAAChP,OAAO,CAACpP,SAAS,GAAG,EAAE,CAAA;AAC3Boe,IAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC5F,iBAAiB,EAAE,IAAI,CAAC6iC,aAAa,CAAC,CAAA;AACtF/e,IAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC3F,qBAAqB,EAAE,IAAI,CAAC+iC,iBAAiB,CAAC,CAAA;IAC9Flf,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC9P,uBAAuB,EAAE,IAAI,CAACugC,mBAAmB,CAAC,CAAA;IAEnF,IAAI,CAACtC,MAAM,GAAG,IAAI,CAAA;AACpB,GAAA;AAuBQoB,EAAAA,cAAcA,GAAA;AACpB,IAAA,MAAM9b,IAAI,GAAG,IAAI,CAAC2a,YAAY,CAAA;IAC9B,MAAMsC,UAAU,GAAGniC,IAAI,CAACoiC,KAAK,CAACld,IAAI,GAAG,EAAE,CAAC,CAAA;IACxC,MAAMmd,WAAW,GAAGriC,IAAI,CAACoiC,KAAK,CAACld,IAAI,GAAGid,UAAU,GAAG,EAAE,CAAC,CAAA;IACtD,MAAMG,oBAAoB,GAAGD,WAAW,GAAG,EAAE,GAAG,CAAIA,CAAAA,EAAAA,WAAa,CAAA,CAAA,GAAGA,WAAW,CAAA;AAE/E,IAAA,MAAMv5B,QAAQ,GAAG,IAAI,CAACC,SAAS,CAAA;IAC/B,MAAMw5B,cAAc,GAAGviC,IAAI,CAACoiC,KAAK,CAACt5B,QAAQ,GAAG,EAAE,CAAC,CAAA;IAChD,MAAM05B,eAAe,GAAGxiC,IAAI,CAACoiC,KAAK,CAACt5B,QAAQ,GAAGy5B,cAAc,GAAG,EAAE,CAAC,CAAA;IAClE,MAAME,wBAAwB,GAAGD,eAAe,GAAG,EAAE,GAAG,CAAIA,CAAAA,EAAAA,eAAiB,CAAA,CAAA,GAAGA,eAAe,CAAA;AAE/F,IAAA,IAAI,CAAC5wB,OAAO,CAAC8wB,SAAS,GAAM,CAAA,EAAAP,UAAc,CAAA,CAAA,EAAAG,oBAA0B,CAAA,GAAA,EAAAC,cAAkB,CAAA,CAAA,EAAAE,yBAA0B,CAAA,CAAA;AAClH,GAAA;AACD;;ACtFD;;;;;;AAMG;AACH,MAAME,OAAQ,SAAQjH,cAAc,CAAA;AAgBlC;;;;AAIG;AACH1iC,EAAAA,WAAAA,CAAmB;AACjB4pC,IAAAA,WAAW,GAAG,IAAI;IAClB32B,QAAQ,GAAG0xB,yBAAyB,CAACE,SAAS;AAC9Cx4B,IAAAA,KAAK,GAAG,IAAA;MACmB,EAAE,EAAA;AAC7B,IAAA,KAAK,CAAC;MACJ4G,QAAQ;AACR5G,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IAyCI,IAAQ,CAAAq7B,QAAA,GAAG,MAAK;AACtB,MAAA,MAAMnZ,MAAM,GAAG,IAAI,CAACsb,OAAO,CAAA;AAC3B,MAAA,MAAMD,WAAW,GAAG,IAAI,CAACA,WAAW,CAAA;AAEpC,MAAA,IAAI,CAACrb,MAAM,IAAI,CAACqb,WAAW,EAAE,OAAA;MAE7B,MAAM;QACJp8B,GAAG,GAAG+gB,MAAM,CAAC1b,UAAU;QACvBpF,KAAK,GAAG8gB,MAAM,CAACzb,YAAY;QAC3Bf,IAAI,GAAGwc,MAAM,CAACxb,WAAW;AACzBjD,QAAAA,QAAQ,GAAG,GAAA;AACZ,OAAA,GAAGjE,eAAe,CAAC+9B,WAAW,CAAC,CAAA;AAEhCrb,MAAAA,MAAM,CAACtd,MAAM,CAAC4D,SAAS,CAAC;QACtBrH,GAAG;QACHC,KAAK;QACLsE,IAAI;AACJjC,QAAAA,QAAAA;AACD,OAAA,CAAC,CAAA;KACH,CAAA;IAmCO,IAAU,CAAAg6B,UAAA,GAAG,CAAC;AAAExI,MAAAA,MAAM,EAAE/S,MAAAA;AAAM,KAAuB,KAAI;AAC/D,MAAA,MAAMwb,OAAO,GAAG,IAAI,CAACC,UAAU,CAAA;AAC/B,MAAA,MAAMC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAA;AACvC,MAAA,MAAMj5B,MAAM,GAAGsd,MAAM,CAACtd,MAAM,CAAA;AAC5B,MAAA,MAAM9D,GAAG,GAAG8D,MAAM,CAACyE,gBAAgB,EAAE,CAAA;MACrC,MAAMnD,QAAQ,GAAGtB,MAAM,CAACqE,WAAW,CAACrE,MAAM,CAACc,IAAI,CAAC,CAAA;AAChD,MAAA,MAAMo4B,OAAO,GAAGh9B,GAAG,GAAG,GAAG,CAAA;AAEzB,MAAA,MAAMi9B,SAAS,GAAG,EAAE,GAAGpjC,IAAI,CAACE,EAAE,CAAA;AAC9B,MAAA,MAAMmjC,MAAM,GAAGD,SAAS,GAAGj9B,GAAG,GAAG,GAAG,CAAA;AACpC,MAAA,MAAMm9B,SAAS,GAAGF,SAAS,IAAIn5B,MAAM,CAACzD,GAAG,GAAG28B,OAAO,GAAG,EAAE,CAAC,GAAG,GAAG,CAAA;AAE/DJ,MAAAA,OAAO,CAAC/e,YAAY,CAAC,kBAAkB,EAAE,CAAA,EAAGqf,MAAM,CAAA,CAAA,EAAID,SAAS,GAAGC,MAAM,CAAA,CAAE,CAAC,CAAA;MAC3EN,OAAO,CAAC/e,YAAY,CAAC,mBAAmB,EAAK,CAAAsf,EAAAA,SAAW,EAAA,CAAC,CAAA;AAEzD,MAAA,IAAIC,QAAQ,CAACh4B,QAAQ,CAAClK,GAAG,CAAC,IAAIkiC,QAAQ,CAACh4B,QAAQ,CAAChK,GAAG,CAAC,EAAE;QACpD,MAAMiiC,MAAM,GAAG,EAAE,GAAGxjC,IAAI,CAACE,EAAE,CAAC;AAC5B,QAAA,MAAMmB,GAAG,GAAG,CAACgD,SAAS,CAACkH,QAAQ,CAAClK,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG8hC,OAAO,IAAI,GAAG,CAAA;AAChE,QAAA,MAAM5hC,GAAG,GAAG,CAAC8C,SAAS,CAACkH,QAAQ,CAAChK,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG4hC,OAAO,IAAI,GAAG,CAAA;QAEhE,MAAMM,SAAS,GAAGD,MAAM,GAAGxjC,IAAI,CAACuE,GAAG,CAAChD,GAAG,GAAGF,GAAG,CAAC,CAAA;QAC9C,MAAMmD,MAAM,GAAG,CAACg/B,MAAM,IAAIniC,GAAG,GAAG,IAAI,CAAC,CAAA;AAErC4hC,QAAAA,WAAW,CAACjf,YAAY,CAAC,kBAAkB,EAAE,CAAA,EAAGyf,SAAS,CAAA,CAAA,EAAID,MAAM,GAAGC,SAAS,CAAA,CAAE,CAAC,CAAA;QAClFR,WAAW,CAACjf,YAAY,CAAC,mBAAmB,EAAK,CAAAxf,EAAAA,MAAQ,EAAA,CAAC,CAAA;AAC3D,OAAA,MAAM;AACLy+B,QAAAA,WAAW,CAACjf,YAAY,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAA;AAChDif,QAAAA,WAAW,CAACjf,YAAY,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAA;AAClD,OAAA;KACF,CAAA;IA1HC,IAAI,CAACpS,OAAO,GAAGhP,QAAQ,CAACL,aAAa,CAACG,MAAc,CAAC,CAAA;AACrD,IAAA,IAAI,CAACkP,OAAO,CAACivB,KAAK,GAAG,YAAY,CAAA;IACjC,IAAI,CAAC+B,WAAW,GAAGA,WAAW,CAAA;IAC9B,IAAI,CAACc,kBAAkB,EAAE,CAAA;IACzB,IAAI,CAACb,OAAO,GAAG,IAAI,CAAA;AACrB,GAAA;AAEO9U,EAAAA,IAAIA,CAACxG,MAAe,EAAEwY,UAAsB,EAAA;AACjD,IAAA,MAAMnuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAE5B,IAAA,IAAI,CAAC2V,MAAM,CAAC2Q,WAAW,EAAE;MACvB3Q,MAAM,CAAChE,IAAI,CAAC3oB,MAAM,CAACqE,KAAK,EAAE,IAAI,CAAC6jC,UAAU,CAAC,CAAA;AAC3C,KAAA,MAAM;MACL,IAAI,CAACA,UAAU,CAAC;AAAExI,QAAAA,MAAM,EAAE/S,MAAAA;AAAQ,OAAA,CAAC,CAAA;AACpC,KAAA;AAED,IAAA,MAAMoc,SAAS,GAAG5D,UAAU,CAACv9B,SAAS,CAAC+6B,YAAY,CAAA;AACnD3rB,IAAAA,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAAC6gC,SAAS,CAAC,CAAA;IAEhC,IAAI,IAAI,CAACf,WAAW,EAAE;AACpBhxB,MAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;AAC9D,KAAA;IAEDnZ,MAAM,CAACrQ,EAAE,CAACtc,MAAM,CAAC4E,WAAW,EAAE,IAAI,CAACsjC,UAAU,CAAC,CAAA;IAE9C,IAAI,CAACD,OAAO,GAAGtb,MAAM,CAAA;AACvB,GAAA;EAEO3a,OAAOA,CAAC2a,MAAe,EAAA;AAC5B,IAAA,MAAM3V,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAE5BA,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;IAChE9uB,OAAO,CAACpP,SAAS,GAAG,EAAE,CAAA;IACtB+kB,MAAM,CAAC1a,GAAG,CAACjS,MAAM,CAACqE,KAAK,EAAE,IAAI,CAAC6jC,UAAU,CAAC,CAAA;IACzCvb,MAAM,CAAC1a,GAAG,CAACjS,MAAM,CAAC4E,WAAW,EAAE,IAAI,CAACsjC,UAAU,CAAC,CAAA;IAE/C,IAAI,CAACD,OAAO,GAAG,IAAI,CAAA;AACrB,GAAA;AAuBQa,EAAAA,kBAAkBA,GAAA;AACxB,IAAA,MAAMngC,IAAI,GAAG,IAAI,CAACqO,OAAO,CAAA;IACzB,MAAMgyB,MAAM,GAAGhhC,QAAQ,CAACihC,eAAe,CAACjiC,aAAa,EAAE,KAAK,CAAC,CAAA;AAC7DgiC,IAAAA,MAAM,CAAC5f,YAAY,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;AAC3C4f,IAAAA,MAAM,CAAC5f,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;AACpC4f,IAAAA,MAAM,CAAC5f,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;IAErC,MAAM+e,OAAO,GAAGngC,QAAQ,CAACihC,eAAe,CAACjiC,aAAa,EAAE,QAAQ,CAAC,CAAA;AAEjEmhC,IAAAA,OAAO,CAAC/e,YAAY,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAA;AAC9C+e,IAAAA,OAAO,CAAC/e,YAAY,CAAC,MAAM,EAAE,aAAa,CAAC,CAAA;AAC3C+e,IAAAA,OAAO,CAAC/e,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AAChC+e,IAAAA,OAAO,CAAC/e,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AAChC+e,IAAAA,OAAO,CAAC/e,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;AAC/B+e,IAAAA,OAAO,CAAC/e,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,CAAA;AAC1C4f,IAAAA,MAAM,CAACrf,WAAW,CAACwe,OAAO,CAAC,CAAA;IAE3B,MAAME,WAAW,GAAGrgC,QAAQ,CAACihC,eAAe,CAACjiC,aAAa,EAAE,QAAQ,CAAC,CAAA;AAErEqhC,IAAAA,WAAW,CAACjf,YAAY,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAA;AAClDif,IAAAA,WAAW,CAACjf,YAAY,CAAC,MAAM,EAAE,aAAa,CAAC,CAAA;AAC/Cif,IAAAA,WAAW,CAACjf,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AACpCif,IAAAA,WAAW,CAACjf,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AACpCif,IAAAA,WAAW,CAACjf,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;AACrCif,IAAAA,WAAW,CAACjf,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,CAAA;AAC7C4f,IAAAA,MAAM,CAACrf,WAAW,CAAC0e,WAAW,CAAC,CAAA;AAE/B1/B,IAAAA,IAAI,CAACghB,WAAW,CAACqf,MAAM,CAAC,CAAA;IAExB,IAAI,CAACZ,UAAU,GAAGD,OAAO,CAAA;IACzB,IAAI,CAACG,cAAc,GAAGD,WAAW,CAAA;AACnC,GAAA;AAgCD;;ACtLD;;;;;;AAMG;AACH,MAAMa,QAAS,SAAQpI,cAAc,CAAA;AAKnC;;;;AAIG;AACH1iC,EAAAA,WAAmBA,CAAA;IACjBiT,QAAQ,GAAG0xB,yBAAyB,CAACM,UAAU;AAC/C54B,IAAAA,KAAK,GAAG,IAAA;GAAI,GACsB,EAAE,EAAA;AACpC,IAAA,KAAK,CAAC;MACJ4G,QAAQ;AACR5G,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IAmCI,IAAQ,CAAAq7B,QAAA,GAAG,MAAK;AACtB,MAAA,MAAMnZ,MAAM,GAAG,IAAI,CAACsb,OAAO,CAAA;MAC3B,IAAI,CAACtb,MAAM,EAAE,OAAA;AAEbA,MAAAA,MAAM,CAAC8P,EAAE,CAACvO,KAAK,EAAE,CAAA;KAClB,CAAA;IAtCC,IAAI,CAAClX,OAAO,GAAGhP,QAAQ,CAACL,aAAa,CAACG,SAAiB,CAAC,CAAA;AACxD,IAAA,IAAI,CAACkP,OAAO,CAACivB,KAAK,GAAG,UAAU,CAAA;IAC/B,IAAI,CAACgC,OAAO,GAAG,IAAI,CAAA;AACrB,GAAA;AAEO9U,EAAAA,IAAIA,CAACxG,MAAe,EAAEwY,UAAsB,EAAA;AACjD,IAAA,MAAMnuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,IAAA,MAAMpP,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;IAEtCoP,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAACi7B,WAAW,CAAC,CAAA;IAC5C7rB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC26B,SAAS,CAAC,CAAA;IAC1CvrB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC85B,eAAe,CAAC,CAAA;IAEhD/U,MAAM,CAAC8P,EAAE,CAAC/Z,WAAW,EAAE,CACpBvP,IAAI,CAAC8P,SAAS,IAAG;AAChB,MAAA,IAAIA,SAAS,EAAE;QACbjM,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACi7B,WAAW,CAAC,CAAA;AAChD,OAAA;AACH,KAAC,CAAC,CAAA;AAEJ7rB,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;IAC7D,IAAI,CAACmC,OAAO,GAAGtb,MAAM,CAAA;AACvB,GAAA;AAEO3a,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMgF,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;IAE5BA,OAAO,CAACpP,SAAS,GAAG,EAAE,CAAA;AACtBoP,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;IAEhE,IAAI,CAACmC,OAAO,GAAG,IAAI,CAAA;AACrB,GAAA;AAQD;;AC9DD;;;;;;AAMG;AACH,MAAMkB,UAAW,SAAQrI,cAAc,CAAA;AAKrC;;;;AAIG;AACH1iC,EAAAA,WAAmBA,CAAA;IACjBiT,QAAQ,GAAG0xB,yBAAyB,CAACM,UAAU;AAC/C54B,IAAAA,KAAK,GAAG,IAAA;GAAI,GACsB,EAAE,EAAA;AACpC,IAAA,KAAK,CAAC;MACJ4G,QAAQ;AACR5G,MAAAA,KAAAA;AACD,KAAA,CAAC,CAAA;IA8CI,IAAQ,CAAAq7B,QAAA,GAAG,MAAK;AACtB,MAAA,MAAMnZ,MAAM,GAAG,IAAI,CAACsb,OAAO,CAAA;AAC3B,MAAA,MAAM9C,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AAEnC,MAAA,IAAI,CAACzY,MAAM,IAAI,CAACwY,UAAU,EAAE,OAAA;AAE5B,MAAA,MAAMngB,WAAW,GAAG2H,MAAM,CAAC1Q,OAAO,CAACsI,IAAI,CAAA;MACvC,IAAIS,WAAW,CAACzL,OAAO,EAAE;QACvByL,WAAW,CAAC/N,OAAO,EAAE,CAAA;AACtB,OAAA,MAAM;AACLuL,QAAAA,WAAW,CAACU,uBAAuB,EAAE,CAAC/P,IAAI,CAAC8P,SAAS,IAAG;AACrD,UAAA,IAAIA,SAAS,EAAE;YACb+B,WAAW,CAACjO,MAAM,EAAE,CAAA;AACrB,WAAA,MAAM;AACL,YAAA,IAAI,CAACC,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACi9B,UAAU,CAACv9B,SAAS,CAACi7B,WAAW,CAAC,CAAA;AAC7D,WAAA;AACH,SAAC,CAAC,CAAA;AACH,OAAA;KACF,CAAA;IAEO,IAAY,CAAAuG,YAAA,GAAG,MAAK;AAC1B,MAAA,MAAMpyB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,MAAA,MAAM2V,MAAM,GAAG,IAAI,CAACsb,OAAO,CAAA;AAC3B,MAAA,MAAM9C,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AAEnC,MAAA,IAAI,CAACzY,MAAM,IAAI,CAACwY,UAAU,EAAE,OAAA;AAE5B,MAAA,MAAMngB,WAAW,GAAG2H,MAAM,CAAC1Q,OAAO,CAACsI,IAAI,CAAA;AACvC,MAAA,MAAM3c,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;MAEtC,IAAIod,WAAW,CAACzL,OAAO,EAAE;QACvBvC,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC46B,YAAY,CAAC,CAAA;QAC7CxrB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAAC66B,aAAa,CAAC,CAAA;AAClD,OAAA,MAAM;QACLzrB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC66B,aAAa,CAAC,CAAA;QAC9CzrB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAAC46B,YAAY,CAAC,CAAA;AACjD,OAAA;KACF,CAAA;IAjFC,IAAI,CAACxrB,OAAO,GAAGhP,QAAQ,CAACL,aAAa,CAACG,MAAc,CAAC,CAAA;AACrD,IAAA,IAAI,CAACkP,OAAO,CAACivB,KAAK,GAAG,0BAA0B,CAAA;AACjD,GAAA;AAEO9S,EAAAA,IAAIA,CAACxG,MAAe,EAAEwY,UAAsB,EAAA;AACjD,IAAA,MAAMnuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,IAAA,MAAMpP,SAAS,GAAGu9B,UAAU,CAACv9B,SAAS,CAAA;AAEtCoP,IAAAA,OAAO,CAACZ,gBAAgB,CAACtO,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;IAC7D9uB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC85B,eAAe,CAAC,CAAA;IAChD1qB,OAAO,CAAC/O,SAAS,CAACC,GAAG,CAACN,SAAS,CAACi7B,WAAW,CAAC,CAAA;IAE5C,MAAMwG,YAAY,GAAGA,MAAK;MACxBryB,OAAO,CAAC/O,SAAS,CAACgpB,MAAM,CAACrpB,SAAS,CAACi7B,WAAW,CAAC,CAAA;AAC/ClW,MAAAA,MAAM,CAAC1Q,OAAO,CAACsI,IAAI,CAACjI,EAAE,CAACrW,cAAc,CAACC,MAAM,EAAE,IAAI,CAACkjC,YAAY,CAAC,CAAA;AAChEzc,MAAAA,MAAM,CAAC1Q,OAAO,CAACsI,IAAI,CAACjI,EAAE,CAACrW,cAAc,CAACE,OAAO,EAAE,IAAI,CAACijC,YAAY,CAAC,CAAA;KAClE,CAAA;IAED,IAAIn+B,qBAAqB,EAAE,EAAE;AAC3Bo+B,MAAAA,YAAY,EAAE,CAAA;AACf,KAAA,MAAM;AACL7mB,MAAAA,WAAW,CAACE,WAAW,EAAE,CAACvP,IAAI,CAAC8P,SAAS,IAAG;QACzC,IAAI,CAACA,SAAS,EAAE,OAAA;AAChBomB,QAAAA,YAAY,EAAE,CAAA;AAChB,OAAC,CAAC,CAAA;AACH,KAAA;IAED,IAAI,CAACjE,WAAW,GAAGD,UAAU,CAAA;IAC7B,IAAI,CAAC8C,OAAO,GAAGtb,MAAM,CAAA;IACrB,IAAI,CAACyc,YAAY,EAAE,CAAA;AACrB,GAAA;EAEOp3B,OAAOA,CAAC2a,MAAe,EAAA;AAC5B,IAAA,MAAM3V,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAE5B2V,IAAAA,MAAM,CAAC1Q,OAAO,CAACsI,IAAI,CAACtS,GAAG,CAAChM,cAAc,CAACC,MAAM,EAAE,IAAI,CAACkjC,YAAY,CAAC,CAAA;AACjEzc,IAAAA,MAAM,CAAC1Q,OAAO,CAACsI,IAAI,CAACtS,GAAG,CAAChM,cAAc,CAACE,OAAO,EAAE,IAAI,CAACijC,YAAY,CAAC,CAAA;AAClEpyB,IAAAA,OAAO,CAACH,mBAAmB,CAAC/O,QAAc,CAACxG,KAAK,EAAE,IAAI,CAACwkC,QAAQ,CAAC,CAAA;IAChE9uB,OAAO,CAACpP,SAAS,GAAG,EAAE,CAAA;IAEtB,IAAI,CAACw9B,WAAW,GAAG,IAAI,CAAA;IACvB,IAAI,CAAC6C,OAAO,GAAG,IAAI,CAAA;AACrB,GAAA;AAwCD;;AChFD,MAAMqB,QAAQ,CAAA;EAaZ,IAAW/vB,OAAOA,GAAK;AAAA,IAAA,OAAO,CAAC,CAAC,IAAI,CAACotB,SAAS,CAAA;AAAE,GAAA;EAChD,IAAW4C,MAAMA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACnE,WAAW,CAACoB,WAAW,CAACv+B,SAAS,CAACuhC,QAAQ,CAAC,IAAI,CAACC,YAAY,CAAC,CAAA;AAAE,GAAA;EAEjG,IAAYA,YAAYA,GAAA;AAAK,IAAA,OAAO,IAAI,CAACrE,WAAW,CAACx9B,SAAS,CAACk7B,MAAM,CAAA;AAAE,GAAA;EACvE,IAAYgB,WAAWA,GAAA;AAAK,IAAA,OAAO,IAAI,CAACsB,WAAW,CAACx9B,SAAS,CAACg7B,KAAK,CAAA;AAAE,GAAA;EAErExkC,WAAAA,CAAmB+mC,UAAsB,EAAE;AACzCuE,IAAAA,YAAY,GAAG,IAAI;AACnB3d,IAAAA,KAAK,GAAG,CAAC;IACT4d,SAAS,EAAEC,eAAe,GAAG,IAAA;AACJ,GAAA,EAAA;IA8GnB,IAAa,CAAA5c,aAAA,GAAG,MAAK;MAC3B,IAAI,CAAC6c,eAAe,GAAG,IAAI,CAAA;MAC3B,IAAI,CAACC,IAAI,EAAE,CAAA;KACZ,CAAA;IAEO,IAAa,CAAA5c,aAAA,GAAG,MAAK;MAC3B,IAAI,CAAC2c,eAAe,GAAG,KAAK,CAAA;MAC5B,IAAI,CAACE,eAAe,EAAE,CAAA;KACvB,CAAA;IAEO,IAAY,CAAA1zB,YAAA,GAAG,MAAK;AAC1B,MAAA,IAAI,CAAC,IAAI,CAAC2zB,aAAa,EAAE,OAAA;MAEzB,IAAI,CAACC,cAAc,EAAE,CAAA;KACtB,CAAA;AAEO,IAAA,IAAA,CAAA1G,OAAO,GAAI3tB,GAAiB,IAAI;MACtC,IAAI,CAACs0B,WAAW,GAAG,IAAI,CAAA;AAEvB,MAAA,IAAIt0B,GAAG,CAACu0B,WAAW,KAAK,OAAO,EAAE;QAC/B,IAAI,CAACN,eAAe,GAAG,IAAI,CAAA;AAC5B,OAAA;AAED3+B,MAAAA,MAAM,CAACkL,gBAAgB,CAACtO,QAAc,CAAC3H,QAAQ,EAAE,IAAI,CAAC6jC,UAAU,CAAC,CAAA;MAEjE,IAAI,CAAC8F,IAAI,EAAE,CAAA;KACZ,CAAA;IAEO,IAAU,CAAA9F,UAAA,GAAG,MAAK;MACxB,IAAI,CAACkG,WAAW,GAAG,KAAK,CAAA;AAExBh/B,MAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAAC3H,QAAQ,EAAE,IAAI,CAAC6jC,UAAU,CAAC,CAAA;MAEpE,IAAI,CAAC+F,eAAe,EAAE,CAAA;KACvB,CAAA;IAEO,IAAY,CAAAK,YAAA,GAAG,MAAK;AAC1B,MAAA,MAAMzhC,IAAI,GAAG,IAAI,CAACg+B,SAAS,CAAA;MAC3B,IAAI,CAACh+B,IAAI,EAAE,OAAA;AAEX,MAAA,IAAI,CAACy8B,WAAW,CAACoB,WAAW,CAACv+B,SAAS,CAACgpB,MAAM,CAAC,IAAI,CAAC6S,WAAW,CAAC,CAAA;KAChE,CAAA;IAEO,IAAa,CAAAuG,aAAA,GAAG,MAAK;AAC3B,MAAA,MAAM1hC,IAAI,GAAG,IAAI,CAACg+B,SAAS,CAAA;MAC3B,IAAI,CAACh+B,IAAI,EAAE,OAAA;AAEX,MAAA,IAAI,CAACy8B,WAAW,CAACoB,WAAW,CAACv+B,SAAS,CAACC,GAAG,CAAC,IAAI,CAAC47B,WAAW,CAAC,CAAA;KAC7D,CAAA;IAcO,IAAmB,CAAAgD,mBAAA,GAAG,MAAK;AACjC,MAAA,IAAI,CAACkD,aAAa,GAAGj/B,YAAY,EAAE,CAAA;MAEnC,IAAI,IAAI,CAACi/B,aAAa,EAAE;QACtB,IAAI,CAACD,eAAe,EAAE,CAAA;AACvB,OAAA;KACF,CAAA;IAjLC,IAAI,CAAC3E,WAAW,GAAGD,UAAU,CAAA;IAC7B,IAAI,CAACmF,aAAa,GAAGZ,YAAY,CAAA;IACjC,IAAI,CAAC1d,MAAM,GAAGD,KAAK,CAAA;IACnB,IAAI,CAACwe,UAAU,GAAGX,eAAe,CAAA;AACjC,IAAA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAA;IAChB,IAAI,CAACX,eAAe,GAAG,KAAK,CAAA;IAC5B,IAAI,CAACK,WAAW,GAAG,KAAK,CAAA;IACxB,IAAI,CAACF,aAAa,GAAG,KAAK,CAAA;IAC1B,IAAI,CAAChF,MAAM,GAAG,IAAI,CAAA;IAClB,IAAI,CAAC2B,SAAS,GAAG,IAAI,CAAA;AACvB,GAAA;EAEO5vB,MAAMA,CAAC4V,MAAe,EAAA;;IAC3B,IAAI,IAAI,CAACga,SAAS,EAAE;AAClB,MAAA,IAAI,CAAC1vB,OAAO,CAAC0V,MAAM,CAAC,CAAA;AACrB,KAAA;AAED,IAAA,MAAM+c,YAAY,GAAG,IAAI,CAACY,aAAa,CAAA;AACvC,IAAA,MAAM3hC,IAAI,GAAGgkB,MAAM,CAACkD,MAAM,CAAA;AAE1B,IAAA,IAAI,CAAC8W,SAAS,GAAGha,MAAM,CAACkD,MAAM,CAAA;AAC9B,IAAA,IAAI,CAAC2a,MAAM,GAAGt/B,MAAM,CAAC2R,UAAU,CAAC,MAAK;MACnC,IAAI,CAAC4tB,IAAI,EAAE,CAAA;KACZ,EAAEf,YAAY,CAAC,CAAA;AAEhB/gC,IAAAA,IAAI,CAACyN,gBAAgB,CAACtO,QAAc,CAAC7H,UAAU,EAAE,IAAI,CAACsjC,OAAO,CAAC,CAAA;AAC9D56B,IAAAA,IAAI,CAACyN,gBAAgB,CAACtO,QAAc,CAACpH,WAAW,EAAE,IAAI,CAACssB,aAAa,CAAC,CAAA;AACrErkB,IAAAA,IAAI,CAACyN,gBAAgB,CAACtO,QAAc,CAAC5H,UAAU,EAAE,IAAI,CAACmW,YAAY,CAAC,CAAA;AACnE1N,IAAAA,IAAI,CAACyN,gBAAgB,CAACtO,QAAc,CAACnH,WAAW,EAAE,IAAI,CAACusB,aAAa,CAAC,CAAA;IACrE,IAAI,CAAC8Z,sBAAsB,EAAE,CAAA;IAE7B,MAAMhhB,KAAK,GAAG,CAAA5e,EAAA,GAAAulB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAn1B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEk3B,UAAU,EAAE,CAAA;IACvC,IAAI,CAACtY,KAAK,IAAI,CAACA,KAAK,CAACL,OAAO,EAAE,EAAE;AAC9B,MAAA,OAAA;AACD,KAAA;AAED,IAAA,IAAIK,KAAK,CAACI,QAAQ,EAAE,EAAE;AACpB,MAAA,IAAI,CAACgf,WAAW,CAACoB,WAAW,CAACv+B,SAAS,CAACC,GAAG,CAAC,IAAI,CAAC47B,WAAW,CAAC,CAAA;AAC7D,KAAA;AAED9d,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAChG,UAAU,EAAE,IAAI,CAACsoC,YAAY,CAAC,CAAA;AAC3EpkB,IAAAA,KAAK,CAACF,MAAM,CAAC1P,gBAAgB,CAACtO,QAAc,CAAC/F,WAAW,EAAE,IAAI,CAACsoC,aAAa,CAAC,CAAA;IAE7E,IAAI,CAACrF,MAAM,GAAGhf,KAAK,CAAA;AACrB,GAAA;EAEO/O,OAAOA,CAAC0V,MAAe,EAAA;AAC5B,IAAA,IAAI,CAAC,IAAI,CAACga,SAAS,EAAE,OAAA;AAErB,IAAA,MAAMxB,UAAU,GAAG,IAAI,CAACC,WAAW,CAAA;AACnC,IAAA,MAAMz8B,IAAI,GAAGgkB,MAAM,CAACkD,MAAM,CAAA;AAC1B,IAAA,MAAM7J,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;AAEzBr8B,IAAAA,IAAI,CAACkO,mBAAmB,CAAC/O,QAAc,CAAC7H,UAAU,EAAE,IAAI,CAACsjC,OAAO,CAAC,CAAA;AACjEr4B,IAAAA,MAAM,CAAC2L,mBAAmB,CAAC/O,QAAc,CAAC3H,QAAQ,EAAE,IAAI,CAAC6jC,UAAU,CAAC,CAAA;AACpEr7B,IAAAA,IAAI,CAACkO,mBAAmB,CAAC/O,QAAc,CAACpH,WAAW,EAAE,IAAI,CAACssB,aAAa,CAAC,CAAA;AACxErkB,IAAAA,IAAI,CAACkO,mBAAmB,CAAC/O,QAAc,CAAC5H,UAAU,EAAE,IAAI,CAACmW,YAAY,CAAC,CAAA;AACtE1N,IAAAA,IAAI,CAACkO,mBAAmB,CAAC/O,QAAc,CAACnH,WAAW,EAAE,IAAI,CAACusB,aAAa,CAAC,CAAA;IACxE,IAAI,CAAC+Z,yBAAyB,EAAE,CAAA;AAEhC/7B,IAAAA,MAAM,CAAC6R,YAAY,CAAC,IAAI,CAACytB,MAAM,CAAC,CAAA;IAChCrF,UAAU,CAACqB,WAAW,CAACv+B,SAAS,CAACgpB,MAAM,CAAC,IAAI,CAAC6S,WAAW,CAAC,CAAA;AAEzD,IAAA,IAAI9d,KAAK,EAAE;AACTA,MAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAChG,UAAU,EAAE,IAAI,CAACsoC,YAAY,CAAC,CAAA;AAC9EpkB,MAAAA,KAAK,CAACF,MAAM,CAACjP,mBAAmB,CAAC/O,QAAc,CAAC/F,WAAW,EAAE,IAAI,CAACsoC,aAAa,CAAC,CAAA;AACjF,KAAA;IAED,IAAI,CAACR,eAAe,GAAG,KAAK,CAAA;IAC5B,IAAI,CAACK,WAAW,GAAG,KAAK,CAAA;IACxB,IAAI,CAAClF,MAAM,GAAG,IAAI,CAAA;IAClB,IAAI,CAAC2B,SAAS,GAAG,IAAI,CAAA;AACvB,GAAA;AAEOmD,EAAAA,IAAIA,GAAA;IACT,IAAI,CAACY,eAAe,EAAE,CAAA;AACtB,IAAA,IAAI,CAACtF,WAAW,CAACoB,WAAW,CAACv+B,SAAS,CAACgpB,MAAM,CAAC,IAAI,CAACwY,YAAY,CAAC,CAAA;AAClE,GAAA;AAEOQ,EAAAA,cAAcA,GAAA;IACnB,IAAI,CAACH,IAAI,EAAE,CAAA;AACX,IAAA,IAAI,CAACC,eAAe,CAAC,IAAI,CAACQ,UAAU,CAAC,CAAA;AACvC,GAAA;AAEOE,EAAAA,IAAIA,GAAA;IACT,IAAI,CAACC,eAAe,EAAE,CAAA;AACtB,IAAA,IAAI,CAACtF,WAAW,CAACoB,WAAW,CAACv+B,SAAS,CAACC,GAAG,CAAC,IAAI,CAACuhC,YAAY,CAAC,CAAA;AAC/D,GAAA;AAEQiB,EAAAA,eAAeA,GAAA;IACrB,IAAI,IAAI,CAACF,MAAM,EAAE;AACft/B,MAAAA,MAAM,CAAC6R,YAAY,CAAC,IAAI,CAACytB,MAAM,CAAC,CAAA;AAChC,MAAA,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,CAAA;AACjB,KAAA;AACH,GAAA;AAEQT,EAAAA,eAAeA,CAAChe,KAAK,GAAG,IAAI,CAACC,MAAM,EAAA;AACzC,IAAA,IAAI,IAAI,CAACke,WAAW,IAAK,CAAC,IAAI,CAACF,aAAa,IAAI,IAAI,CAACH,eAAgB,EAAE,OAAA;IAEvE,IAAI,CAACa,eAAe,EAAE,CAAA;IACtB,IAAI3e,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAAC0e,IAAI,EAAE,CAAA;AACZ,KAAA,MAAM;AACL,MAAA,IAAI,CAACD,MAAM,GAAGt/B,MAAM,CAAC2R,UAAU,CAAC,MAAK;QACnC,IAAI,CAAC4tB,IAAI,EAAE,CAAA;OACZ,EAAE1e,KAAK,CAAC,CAAA;AACV,KAAA;AACH,GAAA;AAoDQib,EAAAA,sBAAsBA,GAAA;AAC5BtjC,IAAAA,iBAAiB,CAAC2lB,OAAO,CAAC2W,OAAO,IAAG;MAClCh4B,QAAQ,CAACoO,gBAAgB,CAAC4pB,OAAO,EAAE,IAAI,CAAC8G,mBAAmB,CAAC,CAAA;AAC9D,KAAC,CAAC,CAAA;AACJ,GAAA;AAEQG,EAAAA,yBAAyBA,GAAA;AAC/BvjC,IAAAA,iBAAiB,CAAC2lB,OAAO,CAAC2W,OAAO,IAAG;MAClCh4B,QAAQ,CAAC6O,mBAAmB,CAACmpB,OAAO,EAAE,IAAI,CAAC8G,mBAAmB,CAAC,CAAA;AACjE,KAAC,CAAC,CAAA;AACJ,GAAA;AASD;;AC9OD,MAAM6D,YAAY,CAAA;AAAlBvsC,EAAAA,WAAAA,GAAA;AAcU,IAAA,IAAA,CAAA8Z,UAAU,GAAIe,KAAoB,IAAI;AAC5C,MAAA,MAAM+M,KAAK,GAAG,IAAI,CAACgf,MAAM,CAAA;MACzB,IAAI,CAAChf,KAAK,EAAE,OAAA;MAEZ/M,KAAK,CAAClD,cAAc,EAAE,CAAA;MACtBkD,KAAK,CAACwD,eAAe,EAAE,CAAA;AAEvB,MAAA,MAAMmuB,OAAO,GAAG5kB,KAAK,CAACF,MAAM,CAAA;MAC5B,MAAM+kB,UAAU,GAAG5xB,KAAK,CAACG,OAAO,IAAI,IAAI,GACpCtR,kBAA0B,CAACmR,KAAK,CAACG,OAAO,CAAC,GACzCtR,kBAA0B,CAACmR,KAAK,CAACjO,GAAG,CAAC,CAAA;AAEzC,MAAA,QAAQ6/B,UAAU;AAChB,QAAA,KAAK,MAAM,CAAA;AACX,QAAA,KAAK,OAAO;UACV,OAAO,IAAI,CAACC,gBAAgB,CAACF,OAAO,EAAEC,UAAU,KAAK,OAAO,CAAC,CAAA;AAC/D,QAAA,KAAK,IAAI,CAAA;AACT,QAAA,KAAK,MAAM;UACT,OAAO,IAAI,CAACE,kBAAkB,CAACH,OAAO,EAAEC,UAAU,KAAK,IAAI,CAAC,CAAA;AAAC,OAAA;AAGjE,MAAA,MAAMG,YAAY,GAAG/xB,KAAK,CAACG,OAAO,KAAKtR,cAAsB,IAAImR,KAAK,CAACjO,GAAG,KAAKlD,cAAsB,CAAA;AACrG,MAAA,IAAIkjC,YAAY,EAAE;AAChB,QAAA,IAAI,CAACC,YAAY,CAACjlB,KAAK,CAAC,CAAA;AACzB,OAAA;KACF,CAAA;AAgCH,GAAA;AApESjP,EAAAA,MAAMA,CAACpO,IAAiB,EAAEqd,KAAmB,EAAA;IAClD,IAAI,CAACgf,MAAM,GAAGhf,KAAK,CAAA;AACnB;AACArd,IAAAA,IAAI,CAACyN,gBAAgB,CAACtO,QAAc,CAAC5G,QAAQ,EAAE,IAAI,CAACgX,UAAU,EAAE,IAAI,CAAC,CAAA;AACvE,GAAA;EAEOjB,OAAOA,CAACtO,IAAiB,EAAA;IAC9B,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAAA;AAClBr8B,IAAAA,IAAI,CAACkO,mBAAmB,CAAC/O,QAAc,CAAC5G,QAAQ,EAAE,IAAI,CAACgX,UAAU,EAAE,IAAI,CAAC,CAAA;AAC1E,GAAA;AA6BQ4yB,EAAAA,gBAAgBA,CAAC9kB,KAAuB,EAAEklB,OAAgB,EAAA;AAChE,IAAA,MAAMl8B,KAAK,GAAGk8B,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;IAE9BllB,KAAK,CAACmC,WAAW,IAAInZ,KAAK,CAAA;AAC1BgX,IAAAA,KAAK,CAACqf,aAAa,CAAC,IAAIC,WAAW,CAACv+B,uBAAuB,EAAE;AAAEw+B,MAAAA,MAAM,EAAE;QAAEjb,IAAI,EAAEtE,KAAK,CAACmC,WAAAA;AAAa,OAAA;AAAA,KAAC,CAAC,CAAC,CAAA;AACvG,GAAA;AAEQ4iB,EAAAA,kBAAkBA,CAAC/kB,KAAuB,EAAEmlB,QAAiB,EAAA;AACnE,IAAA,MAAMn8B,KAAK,GAAGm8B,QAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAA;IAEnC,IAAInlB,KAAK,CAACgC,KAAK,EAAE;MACfhC,KAAK,CAACiC,MAAM,GAAG7e,KAAK,CAAC4F,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AAClC,KAAA,MAAM;AACLgX,MAAAA,KAAK,CAACiC,MAAM,GAAG7e,KAAK,CAAC4c,KAAK,CAACiC,MAAM,GAAGjZ,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACjD,KAAA;AAED,IAAA,IAAIgX,KAAK,CAACiC,MAAM,GAAG,CAAC,EAAE;MACpBjC,KAAK,CAACgC,KAAK,GAAG,KAAK,CAAA;AACpB,KAAA,MAAM;MACLhC,KAAK,CAACgC,KAAK,GAAG,IAAI,CAAA;AACnB,KAAA;AACH,GAAA;EAEQijB,YAAYA,CAACjlB,KAAmB,EAAA;AACtC,IAAA,IAAIA,KAAK,CAACI,QAAQ,EAAE,EAAE;AACpBJ,MAAAA,KAAK,CAACF,MAAM,CAACsC,IAAI,EAAE,CAAA;AACpB,KAAA,MAAM;AACLpC,MAAAA,KAAK,CAACF,MAAM,CAACG,KAAK,EAAE,CAAA;AACrB,KAAA;AACH,GAAA;AACD;;ACYD;;;;;AAKG;AACH,MAAMmlB,UAAU,CAAA;AAiHd;;;;AAIG;EACH,IAAWvb,MAAMA;IAAK,OAAO,IAAI,CAACgN,OAAO,CAAA;AAAE,GAAA;AAC3C;;;;AAIG;EACH,IAAW2J,WAAWA;IAAK,OAAO,IAAI,CAACzW,YAAY,CAAA;AAAE,GAAA;AACrD;;;;AAIG;EACH,IAAWsb,YAAYA;IAAK,OAAO,IAAI,CAACC,KAAK,CAAA;AAAE,GAAA;AAC/C;;;;AAIG;EACH,IAAWC,KAAKA;IAAK,OAAO,IAAI,CAACC,MAAM,CAAA;AAAE,GAAA;AACzC;;;;AAIG;EACH,IAAWC,WAAWA;IAAK,OAAO,IAAI,CAACC,YAAY,CAAA;AAAE,GAAA;AAWrD;;;;AAIG;AACHttC,EAAAA,WAAmBA,CAAA;IACjButC,QAAQ;IACRC,cAAc;AACdC,IAAAA,WAAW,GAAG,IAAI;AAClBC,IAAAA,gBAAgB,GAAG,IAAI;AACvBC,IAAAA,WAAW,GAAG,IAAI;AAClBC,IAAAA,UAAU,GAAG,IAAI;AACjBC,IAAAA,YAAY,GAAG,IAAI;AACnBC,IAAAA,gBAAgB,GAAG,IAAI;AACvBC,IAAAA,SAAS,GAAG,IAAI;AAChBC,IAAAA,OAAO,GAAG,IAAI;AACdC,IAAAA,QAAQ,GAAG,IAAI;AACfC,IAAAA,UAAU,GAAG,IAAI;IACjB1kC,SAAS,GAAG,EAAE;AACd6jC,IAAAA,WAAW,GAAG,EAAA;GAAE,GACc,EAAE,EAAA;;IA4J1B,IAAc,CAAAc,cAAA,GAAG,CAAC;AAAE7M,MAAAA,MAAM,EAAE/S,MAAM;AAAEnW,MAAAA,OAAAA;AAA2B,KAAA,KAAI;;AACzE,MAAA,MAAMg2B,SAAS,GAAG,IAAI,CAACC,UAAU,CAAA;AAEjC,MAAA,IAAIj2B,OAAO,EAAE;AACX,QAAA,IAAI,CAACg2B,SAAS,CAACjzB,OAAO,EAAE,OAAA;QAExB,IAAIizB,SAAS,CAACjD,MAAM,EAAE;UACpBiD,SAAS,CAACvC,cAAc,EAAE,CAAA;AAC3B,SAAA,MAAM;UACLuC,SAAS,CAAC/B,IAAI,EAAE,CAAA;AACjB,SAAA;AACF,OAAA,MAAM;AACL,QAAA,IAAI,CAAC,IAAI,CAACoB,WAAW,EAAE,OAAA;QAEvB,MAAM7lB,KAAK,GAAG,CAAA5e,EAAA,GAAAulB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAn1B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEk3B,UAAU,EAAE,CAAA;QACvC,IAAI,CAACtY,KAAK,IAAI,CAACA,KAAK,CAACL,OAAO,EAAE,EAAE,OAAA;AAEhC,QAAA,IAAIK,KAAK,CAACI,QAAQ,EAAE,EAAE;AACpBJ,UAAAA,KAAK,CAACF,MAAM,CAACsC,IAAI,EAAE,CAAA;AACpB,SAAA,MAAM;AACLpC,UAAAA,KAAK,CAACF,MAAM,CAACG,KAAK,EAAE,CAAA;AACrB,SAAA;AACF,OAAA;KACF,CAAA;IAEO,IAAa,CAAAymB,aAAA,GAAG,CAAC;AAAEhN,MAAAA,MAAM,EAAE/S,MAAAA;AAAM,KAAqC,KAAI;AAChF,MAAA,MAAM4e,KAAK,GAAG,IAAI,CAACC,MAAM,CAAA;AAEzB,MAAA,IAAI,CAACmB,iBAAiB,CAAChgB,MAAM,CAAC,CAAA;AAC9B,MAAA,IAAI,CAACigB,eAAe,CAACjgB,MAAM,CAAC,CAAA;AAC5B,MAAA,IAAI,CAACkgB,sBAAsB,CAAClgB,MAAM,CAAC,CAAA;MAEnCpuB,MAAM,CAACk3B,IAAI,CAAC8V,KAAK,CAAC,CAACliB,OAAO,CAAEre,GAAwC,IAAI;AACtE,QAAA,MAAM8hC,QAAQ,GAAGvB,KAAK,CAACvgC,GAAG,CAAC,CAAA;AAE3B8hC,QAAAA,QAAQ,CAACzjB,OAAO,CAAC0jB,IAAI,IAAG;AACtBA,UAAAA,IAAI,CAAC/6B,OAAO,CAAC2a,MAAM,EAAE,IAAI,CAAC,CAAA;AAC1BogB,UAAAA,IAAI,CAAC5Z,IAAI,CAACxG,MAAM,EAAE,IAAI,CAAC,CAAA;AACzB,SAAC,CAAC,CAAA;AACJ,OAAC,CAAC,CAAA;KACH,CAAA;IAnMC,IAAI,CAACgf,QAAQ,GAAGA,QAAQ,CAAA;IACxB,IAAI,CAACC,cAAc,GAAGA,cAAc,CAAA;IACpC,IAAI,CAACC,WAAW,GAAGA,WAAW,CAAA;IAC9B,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB,CAAA;IACxC,IAAI,CAACC,WAAW,GAAGA,WAAW,CAAA;IAC9B,IAAI,CAACC,UAAU,GAAGA,UAAU,CAAA;IAC5B,IAAI,CAACC,YAAY,GAAGA,YAAY,CAAA;IAChC,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB,CAAA;IACxC,IAAI,CAACC,SAAS,GAAGA,SAAS,CAAA;IAC1B,IAAI,CAACC,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ,CAAA;IACxB,IAAI,CAACC,UAAU,GAAGA,UAAU,CAAA;IAC5B,IAAI,CAAC1kC,SAAS,GACTrJ,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EAAAoyB,UAAU,CAACznC,aAAa,CAAA,EACxBiE,SAAS,CACb,CAAA;IAED,MAAMmhC,SAAS,GAAG,CAAA3hC,EAAA,GAAAQ,SAAS,CAACo5B,aAAa,MAAI,IAAA,IAAA55B,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAAgkC,UAAU,CAACznC,aAAa,CAACq9B,aAAa,CAAA;AAEnF,IAAA,IAAI,CAACnE,OAAO,GAAGl1B,aAAa,CAACohC,SAAS,CAAC,CAAA;IACvC,IAAI,CAACiE,uBAAuB,EAAE,CAAA;AAC9B,IAAA,IAAI,CAACxB,MAAM,GAAGjtC,MAAM,CAACk3B,IAAI,CAAC2V,UAAU,CAAC6B,QAAQ,CAAC,CAACp0B,MAAM,CAAC,CAAC0yB,KAAK,EAAEvgC,GAAG,KAAI;MACnEugC,KAAK,CAACH,UAAU,CAAC6B,QAAQ,CAACjiC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAA;AACpC,MAAA,OAAOugC,KAAK,CAAA;KACb,EAAE,EAAE,CAAkE,CAAA;IACvE,IAAI,CAACG,YAAY,GAAGD,WAAW,CAAA;AAC/B,IAAA,IAAI,CAACgB,UAAU,GAAG,IAAInD,QAAQ,CAAC,IAAI,EAAEr/B,eAAe,CAAC0hC,QAAQ,CAAC,CAAC,CAAA;AAC/D,IAAA,IAAI,CAACuB,aAAa,GAAG,IAAIvC,YAAY,EAAE,CAAA;AAEvCc,IAAAA,WAAW,CAACpiB,OAAO,CAAC0jB,IAAI,IAAG;MACzB,IAAI,CAACvB,MAAM,CAACuB,IAAI,CAAC17B,QAAQ,CAAC,CAAC8tB,IAAI,CAAC4N,IAAI,CAAC,CAAA;AACvC,KAAC,CAAC,CAAA;AACJ,GAAA;EAEO5Z,IAAIA,CAACxG,MAAe,EAAA;AACzB,IAAA,MAAMwgB,QAAQ,GAAGxgB,MAAM,CAACkD,MAAM,CAAA;AAC9B,IAAA,MAAMud,YAAY,GAAG,IAAI,CAACvQ,OAAO,CAAA;AACjC,IAAA,MAAMwQ,YAAY,GAAG,IAAI,CAACC,mBAAmB,EAAE,CAAA;AAE/C,IAAA,IAAI,CAACX,iBAAiB,CAAChgB,MAAM,CAAC,CAAA;AAC9B,IAAA,IAAI,CAACigB,eAAe,CAACjgB,MAAM,CAAC,CAAA;AAC5B,IAAA,IAAI,CAACkgB,sBAAsB,CAAClgB,MAAM,CAAC,CAAA;AAEnCwgB,IAAAA,QAAQ,CAACxjB,WAAW,CAACyjB,YAAY,CAAC,CAAA;AAClC,IAAA,IAAI,CAACG,QAAQ,CAAC5gB,MAAM,EAAE0gB,YAAY,CAAC,CAAA;IACnC,IAAI,CAACE,QAAQ,CAAC5gB,MAAM,EAAE,IAAI,CAAC+e,YAAY,CAAC,CAAA;IAExC/e,MAAM,CAACrQ,EAAE,CAACtc,MAAM,CAACuE,iBAAiB,EAAE,IAAI,CAACmoC,aAAa,CAAC,CAAA;IACvD/f,MAAM,CAACrQ,EAAE,CAACtc,MAAM,CAAC6E,YAAY,EAAE,IAAI,CAAC0nC,cAAc,CAAC,CAAA;AACrD,GAAA;EAEOv6B,OAAOA,CAAC2a,MAAe,EAAA;AAC5B;AACA,IAAA,MAAMwgB,QAAQ,GAAGxgB,MAAM,CAACkD,MAAM,CAAA;AAC9B,IAAA,MAAMud,YAAY,GAAG,IAAI,CAACvQ,OAAO,CAAA;AACjC,IAAA,MAAM0O,KAAK,GAAG,IAAI,CAACC,MAAM,CAAA;AAEzB,IAAA,IAAI4B,YAAY,CAAC3M,aAAa,KAAK0M,QAAQ,EAAE;AAC3CA,MAAAA,QAAQ,CAACzM,WAAW,CAAC0M,YAAY,CAAC,CAAA;AACnC,KAAA;IAED7uC,MAAM,CAACk3B,IAAI,CAAC8V,KAAK,CAAC,CAACliB,OAAO,CAAEre,GAAwC,IAAI;AACtE,MAAA,MAAM8hC,QAAQ,GAAGvB,KAAK,CAACvgC,GAAG,CAAC,CAAA;AAE3B8hC,MAAAA,QAAQ,CAACzjB,OAAO,CAAC0jB,IAAI,IAAG;AACtBA,QAAAA,IAAI,CAAC/6B,OAAO,CAAC2a,MAAM,EAAE,IAAI,CAAC,CAAA;AAC5B,OAAC,CAAC,CAAA;AAEF4e,MAAAA,KAAK,CAACvgC,GAAG,CAAC,GAAG,EAAE,CAAA;AACjB,KAAC,CAAC,CAAA;IAEF,IAAI,CAACwiC,kBAAkB,EAAE,CAAA;AACzB,IAAA,IAAI,CAACf,UAAU,CAACx1B,OAAO,CAAC0V,MAAM,CAAC,CAAA;AAC/B,IAAA,IAAI,CAACugB,aAAa,CAACj2B,OAAO,CAACk2B,QAAQ,CAAC,CAAA;IAEpCxgB,MAAM,CAAC1a,GAAG,CAACjS,MAAM,CAACuE,iBAAiB,EAAE,IAAI,CAACmoC,aAAa,CAAC,CAAA;IACxD/f,MAAM,CAAC1a,GAAG,CAACjS,MAAM,CAAC6E,YAAY,EAAE,IAAI,CAAC0nC,cAAc,CAAC,CAAA;AACtD,GAAA;AAEQgB,EAAAA,QAAQA,CAAC5gB,MAAe,EAAE4e,KAAuB,EAAA;AACvD,IAAA,KAAK,MAAMwB,IAAI,IAAIxB,KAAK,EAAE;MACxB,MAAMuB,QAAQ,GAAG,IAAI,CAACtB,MAAM,CAACuB,IAAI,CAAC17B,QAAQ,CAAC,CAAA;MAC3C,MAAMo8B,OAAO,GAAG,IAAI,CAACC,UAAU,CAACX,IAAI,CAAC17B,QAAQ,CAAC,CAAA;AAE9C,MAAA,MAAMs8B,gBAAgB,GAAG9jC,SAAS,CAACijC,QAAQ,EAAEc,OAAO,IAAIA,OAAO,CAACnjC,KAAK,GAAGsiC,IAAI,CAACtiC,KAAK,CAAC,CAAA;MAEnF,IAAIkjC,gBAAgB,IAAI,CAAC,EAAE;AACzB,QAAA,MAAME,WAAW,GAAGf,QAAQ,CAACa,gBAAgB,CAAC,CAAC32B,OAAO,CAAA;QACtD81B,QAAQ,CAACxN,MAAM,CAACqO,gBAAgB,EAAE,CAAC,EAAEZ,IAAI,CAAC,CAAA;QAC1CU,OAAO,CAACK,YAAY,CAACf,IAAI,CAAC/1B,OAAO,EAAE62B,WAAW,CAAC,CAAA;AAChD,OAAA,MAAM;AACLf,QAAAA,QAAQ,CAAC3N,IAAI,CAAC4N,IAAI,CAAC,CAAA;AACnBU,QAAAA,OAAO,CAAC9jB,WAAW,CAACojB,IAAI,CAAC/1B,OAAO,CAAC,CAAA;AAClC,OAAA;AAED+1B,MAAAA,IAAI,CAAC5Z,IAAI,CAACxG,MAAM,EAAE,IAAI,CAAC,CAAA;AACxB,KAAA;AACH,GAAA;AAEQqgB,EAAAA,uBAAuBA,GAAA;IAC7B,MAAMplC,SAAS,GACVrJ,MAAA,CAAAya,MAAA,CAAAza,MAAA,CAAAya,MAAA,CAAA,EAAA,EAAAoyB,UAAU,CAACznC,aAAa,GACxB,IAAI,CAACiE,SAAS,CAClB,CAAA;AACD,IAAA,MAAMioB,MAAM,GAAG,IAAI,CAACgN,OAAO,CAAA;AAE3B;AACA,IAAA,MAAMwO,YAAY,GAAG1jC,aAAa,CAACC,SAAS,CAACq5B,WAAW,CAAC,CAAA;AACzD,IAAA,MAAM8M,WAAW,GAAGpmC,aAAa,CAACC,SAAS,CAAC45B,mBAAmB,CAAC,CAAA;AAChE,IAAA,MAAMwM,YAAY,GAAGrmC,aAAa,CAACC,SAAS,CAAC65B,oBAAoB,CAAC,CAAA;AAElE5R,IAAAA,MAAM,CAAClG,WAAW,CAACokB,WAAW,CAAC,CAAA;AAC/Ble,IAAAA,MAAM,CAAClG,WAAW,CAACqkB,YAAY,CAAC,CAAA;AAEhC;AACA,IAAA,MAAM5d,SAAS,GAAGzoB,aAAa,CAACC,SAAS,CAACs5B,aAAa,CAAC,CAAA;AACxD,IAAA,MAAM+M,UAAU,GAAGtmC,aAAa,CAACC,SAAS,CAACu5B,YAAY,CAAC,CAAA;AACxD,IAAA,MAAM+M,aAAa,GAAGvmC,aAAa,CAACC,SAAS,CAACw5B,eAAe,CAAC,CAAA;AAC9D,IAAA,MAAM+M,UAAU,GAAGxmC,aAAa,CAACC,SAAS,CAACy5B,YAAY,CAAC,CAAA;AACxD,IAAA,MAAM+M,mBAAmB,GAAGzmC,aAAa,CAACC,SAAS,CAAC05B,aAAa,CAAC,CAAA;AAClE,IAAA,MAAM+M,oBAAoB,GAAG1mC,aAAa,CAACC,SAAS,CAAC25B,cAAc,CAAC,CAAA;AAEpE4M,IAAAA,UAAU,CAACxkB,WAAW,CAACykB,mBAAmB,CAAC,CAAA;AAC3CD,IAAAA,UAAU,CAACxkB,WAAW,CAAC0kB,oBAAoB,CAAC,CAAA;AAC5Cje,IAAAA,SAAS,CAACzG,WAAW,CAAC0hB,YAAY,CAAC,CAAA;AACnCjb,IAAAA,SAAS,CAACzG,WAAW,CAACskB,UAAU,CAAC,CAAA;AACjC7d,IAAAA,SAAS,CAACzG,WAAW,CAACwkB,UAAU,CAAC,CAAA;AACjC/d,IAAAA,SAAS,CAACzG,WAAW,CAACukB,aAAa,CAAC,CAAA;AACpCre,IAAAA,MAAM,CAAClG,WAAW,CAACyG,SAAS,CAAC,CAAA;IAE7B,IAAI,CAACkb,KAAK,GAAGD,YAAY,CAAA;IACzB,IAAI,CAACtb,YAAY,GAAGK,SAAS,CAAA;IAC7B,IAAI,CAACsd,UAAU,GAAG;AAChB,MAAA,CAACtC,UAAU,CAAC6B,QAAQ,CAAC/J,QAAQ,GAAG+K,UAAU;AAC1C,MAAA,CAAC7C,UAAU,CAAC6B,QAAQ,CAAC7J,SAAS,GAAGgL,mBAAmB;AACpD,MAAA,CAAChD,UAAU,CAAC6B,QAAQ,CAAC5J,UAAU,GAAGgL,oBAAoB;AACtD,MAAA,CAACjD,UAAU,CAAC6B,QAAQ,CAAC9J,WAAW,GAAG+K,aAAa;AAChD,MAAA,CAAC9C,UAAU,CAAC6B,QAAQ,CAACjK,QAAQ,GAAG+K,WAAW;AAC3C,MAAA,CAAC3C,UAAU,CAAC6B,QAAQ,CAAChK,SAAS,GAAG+K,YAAAA;KAClC,CAAA;AACH,GAAA;AAEQR,EAAAA,kBAAkBA,GAAA;AACxB,IAAA,MAAMc,QAAQ,GAAG/vC,MAAM,CAACk3B,IAAI,CAAC2V,UAAU,CAAC6B,QAAQ,CAAC,CAC9CztC,GAAG,CAACwL,GAAG,IAAIogC,UAAU,CAAC6B,QAAQ,CAACjiC,GAAG,CAAC,CAAC,CACpCxL,GAAG,CAACkyB,GAAG,IAAI,IAAI,CAACgc,UAAU,CAAChc,GAAG,CAAC,CAAC,CAAA;AAEnC;AACA4c,IAAAA,QAAQ,CAACjlB,OAAO,CAACokB,OAAO,IAAG;MACzB,OAAOA,OAAO,CAACc,UAAU,EAAE;AACzBd,QAAAA,OAAO,CAAC/M,WAAW,CAAC+M,OAAO,CAACc,UAAU,CAAC,CAAA;AACxC,OAAA;AACH,KAAC,CAAC,CAAA;AACJ,GAAA;EA4CQ3B,eAAeA,CAACjgB,MAAe,EAAA;;AACrC,IAAA,MAAMgf,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAA;AAC9B,IAAA,MAAMa,SAAS,GAAG,IAAI,CAACC,UAAU,CAAA;IAEjC,IAAId,QAAQ,IAAI,IAAI,EAAE;AACpB,MAAA,IAAIA,QAAQ,EAAE;AACZa,QAAAA,SAAS,CAACz1B,MAAM,CAAC4V,MAAM,CAAC,CAAA;AACzB,OAAA,MAAM;AACL6f,QAAAA,SAAS,CAACv1B,OAAO,CAAC0V,MAAM,CAAC,CAAA;AAC1B,OAAA;AACF,KAAA,MAAM;AACL;MACA,MAAMsL,OAAO,GAAG,CAAA7wB,EAAA,GAAAulB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAn1B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEk3B,UAAU,EAAE,CAAA;AAEzC,MAAA,IAAIrG,OAAO,IAAIA,OAAO,CAACtS,OAAO,EAAE,EAAE;AAChC;AACA6mB,QAAAA,SAAS,CAACz1B,MAAM,CAAC4V,MAAM,CAAC,CAAA;AACzB,OAAA,MAAM;AACL6f,QAAAA,SAAS,CAACv1B,OAAO,CAAC0V,MAAM,CAAC,CAAA;AAC1B,OAAA;AACF,KAAA;AACH,GAAA;EAEQggB,iBAAiBA,CAAChgB,MAAe,EAAA;;AACvC,IAAA,MAAM6hB,UAAU,GAAG,IAAI,CAAClD,KAAK,CAAA;AAC7B,IAAA,MAAMM,cAAc,GAAG,IAAI,CAACA,cAAc,CAAA;IAC1C,MAAM6C,WAAW,GAAG,CAAArnC,EAAA,GAAA,IAAI,CAACQ,SAAS,CAACk7B,MAAM,MAAA,IAAA,IAAA17B,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAIgkC,UAAU,CAACznC,aAAa,CAACm/B,MAAM,CAAA;IAE5E,IAAI8I,cAAc,IAAI,IAAI,EAAE;AAC1B,MAAA,IAAIA,cAAc,EAAE;AAClB4C,QAAAA,UAAU,CAACvmC,SAAS,CAACgpB,MAAM,CAACwd,WAAW,CAAC,CAAA;AACzC,OAAA,MAAM;AACLD,QAAAA,UAAU,CAACvmC,SAAS,CAACC,GAAG,CAACumC,WAAW,CAAC,CAAA;AACtC,OAAA;AACF,KAAA,MAAM;AACL;MACA,MAAMxW,OAAO,GAAG,CAAAyW,EAAA,GAAA/hB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAmS,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEpQ,UAAU,EAAE,CAAA;AAEzC,MAAA,IAAIrG,OAAO,IAAIA,OAAO,CAACtS,OAAO,EAAE,EAAE;AAChC;AACA6oB,QAAAA,UAAU,CAACvmC,SAAS,CAACgpB,MAAM,CAACwd,WAAW,CAAC,CAAA;AACzC,OAAA,MAAM;AACLD,QAAAA,UAAU,CAACvmC,SAAS,CAACC,GAAG,CAACumC,WAAW,CAAC,CAAA;AACtC,OAAA;AACF,KAAA;AACH,GAAA;EAEQ5B,sBAAsBA,CAAClgB,MAAe,EAAA;;AAC5C,IAAA,MAAMwgB,QAAQ,GAAGxgB,MAAM,CAACkD,MAAM,CAAA;AAC9B,IAAA,MAAM8e,YAAY,GAAG,IAAI,CAACzB,aAAa,CAAA;IACvC,MAAMjV,OAAO,GAAG,CAAA7wB,EAAA,GAAAulB,MAAM,CAAC4P,IAAI,MAAA,IAAA,IAAAn1B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEk3B,UAAU,EAAE,CAAA;IAEzC,IAAI,IAAI,CAACwN,gBAAgB,IAAI7T,OAAO,IAAIA,OAAO,CAACtS,OAAO,EAAE,EAAE;AACzDgpB,MAAAA,YAAY,CAAC53B,MAAM,CAACo2B,QAAQ,EAAElV,OAAO,CAAC,CAAA;AACvC,KAAA,MAAM;AACL0W,MAAAA,YAAY,CAAC13B,OAAO,CAACk2B,QAAQ,CAAC,CAAA;AAC/B,KAAA;AACH,GAAA;AAEQG,EAAAA,mBAAmBA,GAAA;IACzB,MAAM/B,KAAK,GAAqB,EAAE,CAAA;IAElC,IAAI,IAAI,CAACQ,WAAW,EAAE;AACpBR,MAAAA,KAAK,CAACpM,IAAI,CAAC,IAAI0F,WAAW,CAAC56B,eAAe,CAAC,IAAI,CAAC8hC,WAAW,CAAC,CAAC,CAAC,CAAA;AAC/D,KAAA;IAED,IAAI,IAAI,CAACC,UAAU,EAAE;AACnBT,MAAAA,KAAK,CAACpM,IAAI,CAAC,IAAI0G,UAAU,CAAC57B,eAAe,CAAC,IAAI,CAAC+hC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC7D,KAAA;IAED,IAAI,IAAI,CAACC,YAAY,EAAE;AACrBV,MAAAA,KAAK,CAACpM,IAAI,CAAC,IAAIgH,aAAa,CAACl8B,eAAe,CAAC,IAAI,CAACgiC,YAAY,CAAC,CAAC,CAAC,CAAA;AAClE,KAAA;IAED,IAAI,IAAI,CAACK,UAAU,EAAE;AACnBf,MAAAA,KAAK,CAACpM,IAAI,CAAC,IAAIgK,UAAU,CAACl/B,eAAe,CAAC,IAAI,CAACqiC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC7D,KAAA;IAED,IAAI,IAAI,CAACD,QAAQ,EAAE;AACjBd,MAAAA,KAAK,CAACpM,IAAI,CAAC,IAAI+J,QAAQ,CAACj/B,eAAe,CAAC,IAAI,CAACoiC,QAAQ,CAAC,CAAC,CAAC,CAAA;AACzD,KAAA;IAED,IAAI,IAAI,CAACH,gBAAgB,EAAE;AACzBX,MAAAA,KAAK,CAACpM,IAAI,CAAC,IAAIuH,gBAAgB,CAACz8B,eAAe,CAAC,IAAI,CAACiiC,gBAAgB,CAAC,CAAC,CAAC,CAAA;AACzE,KAAA;IAED,IAAI,IAAI,CAACC,SAAS,EAAE;AAClBZ,MAAAA,KAAK,CAACpM,IAAI,CAAC,IAAIkI,SAAS,CAACp9B,eAAe,CAAC,IAAI,CAACkiC,SAAS,CAAC,CAAC,CAAC,CAAA;AAC3D,KAAA;IAED,IAAI,IAAI,CAACC,OAAO,EAAE;AAChBb,MAAAA,KAAK,CAACpM,IAAI,CAAC,IAAI4I,OAAO,CAAC99B,eAAe,CAAC,IAAI,CAACmiC,OAAO,CAAC,CAAC,CAAC,CAAA;AACvD,KAAA;AAED,IAAA,OAAOb,KAAK,CAAA;AACd,GAAA;;AAjdA;;;;AAIG;AACoBH,UAAa,CAAAznC,aAAA,GAAGo9B,yBAAyB,CAAA;AAEhE;;;AAGG;AACoBqK,UAAQ,CAAA6B,QAAA,GAAGlK,yBAAyB;;AC9E7D;;;;;AAKG;AACH,MAAe6L,UAAU,CAAA;AAuBvB;;;;AAIG;AACHxwC,EAAAA,WAAAA,CAAmB;IACjB6oB,GAAG;AACHjB,IAAAA,KAAK,GAAG,KAAA;AACU,GAAA,EAAA;IAClB,IAAI,CAACiB,GAAG,GAAGA,GAAG,CAAA;IACd,IAAI,CAACjB,KAAK,GAAGA,KAAK,CAAA;AACpB,GAAA;AAYA;;;;;AAKG;EACIiY,YAAYA,CAAC5uB,MAAc,EAAA;AAChC;IACAA,MAAM,CAACoE,UAAU,EAAE,CAAA;AACrB,GAAA;AAEA;;;;;AAKG;EACIosB,aAAaA,CAAC5jB,OAAoB,EAAA;IACvCA,OAAO,CAACoI,eAAe,GAAG,KAAK,CAAA;AACjC,GAAA;AACD;;ACpGD;;;AAGG;AACH,MAAewqB,OAAO,CAAA;AAGpBzwC,EAAAA,WAAAA,GAAA;IACE,IAAI,CAACq4B,WAAW,GAAG,IAAI,CAAA;AACzB,GAAA;AAIA;EACOzkB,OAAOA,CAACohB,EAAkD,EAAA;AAC/D;AAAA,GAAA;AAEH;;ACRD,MAAM0b,kBAAmB,SAAQD,OAAO,CAAA;AAKtCzwC,EAAAA,WAAAA,CAAmBovB,GAAiB,EAAEyK,OAAoB,EAAE8W,YAAoB,EAAA;AAC9E,IAAA,KAAK,EAAE,CAAA;IAEP,IAAI,CAAC9W,OAAO,GAAGA,OAAO,CAAA;AACtB,IAAA,IAAI,CAAC+W,aAAa,GAAGxhB,GAAG,CAACqL,sBAAsB,CAACZ,OAAO,EAAEA,OAAO,CAAC9lB,KAAK,CAAC,CAAA;IACvE,IAAI,CAAC88B,aAAa,GAAGF,YAAY,CAAA;AACnC,GAAA;EAEO/8B,OAAOA,CAACohB,EAAkD,EAAA;AAC/D,IAAA,IAAI,CAAC6E,OAAO,CAACjmB,OAAO,EAAE,CAAA;AACtBohB,IAAAA,EAAE,CAAC8b,aAAa,CAAC,IAAI,CAACF,aAAa,CAAC,CAAA;AACtC,GAAA;AAEOtgC,EAAAA,MAAMA,CAAC0kB,EAAkD,EAAEjb,QAA8B,EAAEoa,QAAiB,EAAA;AACjH,IAAA,MAAM0F,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;IAE5B7E,EAAE,CAAC+b,WAAW,CAAC/b,EAAE,CAACgc,mBAAmB,EAAEnX,OAAO,CAAC3S,KAAK,CAAC,CAAA;AACrD8N,IAAAA,EAAE,CAACic,SAAS,CAACl3B,QAAQ,EAAE,CAAC,CAAC,CAAA;AACzBib,IAAAA,EAAE,CAACkc,aAAa,CAAClc,EAAE,CAACmc,QAAQ,CAAC,CAAA;IAC7Bnc,EAAE,CAAC+E,WAAW,CAAC/E,EAAE,CAAC0F,gBAAgB,EAAE,IAAI,CAACkW,aAAa,CAAC,CAAA;IAEvD,MAAMnoB,OAAO,GAAGtc,WAAW,CAAC0tB,OAAO,CAACpR,OAAO,EAAE,IAAI,CAACooB,aAAa,CAAC,CAAA;AAChEpoB,IAAAA,OAAO,CAACwC,OAAO,CAAC,CAACpC,GAAG,EAAE9d,GAAG,KAAI;AAC3B,MAAA,IAAIopB,QAAQ,EAAE;QACZa,EAAE,CAACoc,aAAa,CAACpc,EAAE,CAACqc,2BAA2B,GAAGtmC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEiqB,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACuc,aAAa,EAAE1oB,GAAG,CAAC,CAAA;AAChG,OAAA,MAAM;QACLmM,EAAE,CAACwc,UAAU,CAACxc,EAAE,CAACqc,2BAA2B,GAAGtmC,GAAG,EAAE,CAAC,EAAEiqB,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACuc,aAAa,EAAE1oB,GAAG,CAAC,CAAA;AAChG,OAAA;AACH,KAAC,CAAC,CAAA;AAEF,IAAA,IAAI,CAACgR,OAAO,CAACtS,OAAO,EAAE,EAAE;MACtB,IAAI,CAAC8Q,WAAW,GAAG,KAAK,CAAA;AACzB,KAAA;AACH,GAAA;AACD;;ACzCD;AACA,MAAMoZ,kBAAkB,CAAA;EAStB,IAAWnmC,IAAIA;IAAK,OAAO,IAAI,CAAComC,KAAK,CAAA;AAAE,GAAA;AAEvC1xC,EAAAA,WAAmBA,CAAA65B,OAAkB,EAAE8W,YAAoB,EAAA;IACzD,IAAI,CAAC9W,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAAC8X,eAAe,GAAGxlC,WAAW,CAACzB,KAAK,CAAC,CAAC,CAAC,EAAEimC,YAAY,CAAC,CAAA;AAE1D,IAAA,MAAMlmC,MAAM,GAAGb,QAAQ,CAACL,aAAa,CAAC,QAAQ,CAAC,CAAA;IAE/C,IAAI,CAACqoC,kBAAkB,EAAE,CAAA;AAEzBnnC,IAAAA,MAAM,CAACsJ,KAAK,GAAG,IAAI,CAAC29B,KAAK,CAAA;AACzBjnC,IAAAA,MAAM,CAACuJ,MAAM,GAAG,IAAI,CAAC09B,KAAK,CAAA;IAE1B,IAAI,CAAC1d,OAAO,GAAGvpB,MAAM,CAAA;IACrB,IAAI,CAACglB,IAAI,GAAGhlB,MAAM,CAACizB,UAAU,CAAC,IAAI,CAAE,CAAA;AACtC,GAAA;AAEO9pB,EAAAA,OAAOA,GAAA;AACZ,IAAA,MAAMnJ,MAAM,GAAG,IAAI,CAACupB,OAAO,CAAA;AAE3B;IACAvpB,MAAM,CAACsJ,KAAK,GAAG,CAAC,CAAA;IAChBtJ,MAAM,CAACuJ,MAAM,GAAG,CAAC,CAAA;IACjB,IAAI,CAACggB,OAAO,GAAG,IAAW,CAAA;AAC5B,GAAA;AAEO0C,EAAAA,IAAIA,CAAC1B,EAAkD,EAAEb,QAAiB,EAAA;AAC/E,IAAA,MAAM7oB,IAAI,GAAG,IAAI,CAAComC,KAAK,CAAA;AACvB,IAAA,MAAM7X,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;IAC5B,IAAIgY,UAAU,GAAG,CAAC,CAAA;AAElB,IAAA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACC,IAAI,EAAED,GAAG,EAAE,EAAE;AACxC,MAAA,KAAK,IAAIE,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,IAAI,CAACC,OAAO,EAAED,MAAM,EAAE,EAAE;AACpD,QAAA,MAAMlrC,CAAC,GAAGwE,IAAI,GAAG0mC,MAAM,CAAA;AACvB,QAAA,MAAM5jC,CAAC,GAAG9C,IAAI,GAAGwmC,GAAG,CAAA;AACpB,QAAA,MAAMI,aAAa,GAAG,IAAI,CAACP,eAAe,CAACE,UAAU,CAAC,CAAA;QAEtD,IAAI,CAACpiB,IAAI,CAAC0iB,SAAS,CAACtY,OAAO,CAACnS,MAA2B,EAAE5gB,CAAC,EAAEsH,CAAC,EAAE9C,IAAI,EAAEA,IAAI,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,EAAEA,IAAI,CAAC,CAAA;AAE5F,QAAA,IAAI6oB,QAAQ,EAAE;UACZa,EAAE,CAACoc,aAAa,CAACpc,EAAE,CAACqc,2BAA2B,GAAGa,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEld,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACuc,aAAa,EAAE,IAAI,CAACvd,OAAO,CAAC,CAAA;AACnH,SAAA,MAAM;UACLgB,EAAE,CAACwc,UAAU,CAACxc,EAAE,CAACqc,2BAA2B,GAAGa,aAAa,EAAE,CAAC,EAAEld,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACuc,aAAa,EAAE,IAAI,CAACvd,OAAO,CAAC,CAAA;AACnH,SAAA;AAED6d,QAAAA,UAAU,EAAE,CAAA;AACb,OAAA;AACF,KAAA;AACH,GAAA;AAEQD,EAAAA,kBAAkBA,GAAA;IACxB,MAAM;MACJ79B,KAAK;AACLC,MAAAA,MAAAA;KACD,GAAG,IAAI,CAAC6lB,OAAO,CAAA;AAChB,IAAA,MAAM7tB,MAAM,GAAG+H,KAAK,GAAGC,MAAM,CAAA;AAE7B,IAAA,IAAIhI,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE;MACpB,IAAI,CAAC0lC,KAAK,GAAG39B,KAAK,CAAA;MAClB,IAAI,CAACg+B,IAAI,GAAG,CAAC,CAAA;MACb,IAAI,CAACE,OAAO,GAAG,CAAC,CAAA;AACjB,KAAA,MAAM,IAAIjmC,MAAM,KAAK,CAAC,EAAE;MACvB,IAAI,CAAC0lC,KAAK,GAAG19B,MAAM,CAAA;MACnB,IAAI,CAAC+9B,IAAI,GAAG,CAAC,CAAA;MACb,IAAI,CAACE,OAAO,GAAG,CAAC,CAAA;AACjB,KAAA,MAAM,IAAIjmC,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE;AAC3B,MAAA,IAAI,CAAC0lC,KAAK,GAAG39B,KAAK,GAAG,GAAG,CAAA;MACxB,IAAI,CAACg+B,IAAI,GAAG,CAAC,CAAA;MACb,IAAI,CAACE,OAAO,GAAG,CAAC,CAAA;AACjB,KAAA,MAAM;AACL,MAAA,IAAI,CAACP,KAAK,GAAG39B,KAAK,GAAG,CAAC,CAAA;MACtB,IAAI,CAACg+B,IAAI,GAAG,CAAC,CAAA;MACb,IAAI,CAACE,OAAO,GAAG,CAAC,CAAA;AACjB,KAAA;AACH,GAAA;AACD;;AC5FD;;;AAGG;AAMH,MAAMG,iBAAkB,SAAQ3B,OAAO,CAAA;EAIrC,IAAW5W,OAAOA,GAAK;AAAA,IAAA,OAAO,IAAI,CAACwY,QAAQ,CAACxY,OAAO,CAAA;AAAE,GAAA;AAErD75B,EAAAA,WAAAA,CAAmBovB,GAAiB,EAAEyK,OAAkB,EAAE8W,YAAoB,EAAA;AAC5E,IAAA,KAAK,EAAE,CAAA;IAEP,IAAI,CAAC0B,QAAQ,GAAG,IAAIZ,kBAAkB,CAAC5X,OAAoB,EAAE8W,YAAY,CAAC,CAAA;AAC1E,IAAA,IAAI,CAACC,aAAa,GAAGxhB,GAAG,CAACqL,sBAAsB,CAACZ,OAAO,EAAE,IAAI,CAACwY,QAAQ,CAAC/mC,IAAI,CAAC,CAAA;AAC9E,GAAA;EAEOsI,OAAOA,CAACohB,EAAkD,EAAA;AAC/DA,IAAAA,EAAE,CAAC8b,aAAa,CAAC,IAAI,CAACF,aAAa,CAAC,CAAA;AACpC,IAAA,IAAI,CAACyB,QAAQ,CAACz+B,OAAO,EAAE,CAAA;AACzB,GAAA;AAEOtD,EAAAA,MAAMA,CAAC0kB,EAAkD,EAAEjb,QAA8B,EAAEoa,QAAiB,EAAA;AACjH,IAAA,MAAM0F,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;IAE5B7E,EAAE,CAAC+b,WAAW,CAAC/b,EAAE,CAACgc,mBAAmB,EAAE,KAAK,CAAC,CAAA;AAC7Chc,IAAAA,EAAE,CAACic,SAAS,CAACl3B,QAAQ,EAAE,CAAC,CAAC,CAAA;AACzBib,IAAAA,EAAE,CAACkc,aAAa,CAAClc,EAAE,CAACmc,QAAQ,CAAC,CAAA;IAC7Bnc,EAAE,CAAC+E,WAAW,CAAC/E,EAAE,CAAC0F,gBAAgB,EAAE,IAAI,CAACkW,aAAa,CAAC,CAAA;IAEvD,IAAI,CAACyB,QAAQ,CAAC3b,IAAI,CAAC1B,EAAE,EAAEb,QAAQ,CAAC,CAAA;AAEhC,IAAA,IAAI,CAAC0F,OAAO,CAACtS,OAAO,EAAE,EAAE;MACtB,IAAI,CAAC8Q,WAAW,GAAG,KAAK,CAAA;AACzB,KAAA;AACH,GAAA;AACD;;ACzCD;;;AAGG;AAaH;;AAEG;AACH,MAAMia,YAA4E,SAAQvQ,QAAQ,CAAA;AAYhG/hC,EAAAA,WAAmBA,CAAAu0B,GAAsB,EAAE2C,OAAyB,EAAA;AAClE,IAAA,KAAK,EAAE,CAAA;IAEP,IAAI,CAAC3C,GAAG,GAAGA,GAAG,CAAA;IACd,IAAI,CAAC2C,OAAO,GAAGA,OAAO,CAAA;AACxB,GAAA;EAEOtjB,OAAOA,CAACwb,GAAiB,EAAA;AAC9BA,IAAAA,GAAG,CAAC0H,UAAU,CAAC,IAAI,CAACvC,GAAG,CAAC,CAAA;AACxBnF,IAAAA,GAAG,CAACkJ,sBAAsB,CAAC,IAAI,CAACpB,OAAO,CAAC,CAAA;AAC1C,GAAA;AAEOgJ,EAAAA,UAAUA,GAAA;IACf,OAAO,IAAI,CAAChJ,OAAO,CAACC,QAAQ,CAACob,QAAQ,CAAC1Y,OAAO,CAAA;AAC/C,GAAA;AACD;;ACtCD,MAAM2Y,aAAa,CAAA;EAKjBxyC,WAAAA,CAAmBovB,GAAiB,EAAEsJ,YAAoB,EAAEC,cAAsB,EAAExB,QAAW,EAAA;IAC7F,IAAI,CAACD,OAAO,GAAG9H,GAAG,CAACqJ,aAAa,CAACC,YAAY,EAAEC,cAAc,CAAC,CAAA;IAC9D,IAAI,CAACxB,QAAQ,GAAGA,QAAQ,CAAA;AACxB,IAAA,IAAI,CAACC,gBAAgB,GAAGhI,GAAG,CAAC6H,mBAAmB,CAAC,IAAI,CAACC,OAAO,EAAEC,QAAQ,CAAC,CAAA;AACzE,GAAA;AACD;;ACZD;;AAEG;AACH,MAAMsb,UAAU,CAAA;AAKd;AACAzyC,EAAAA,WAAmBA,CAAAq8B,IAAO,EAAEM,QAAgB,EAAA;IAC1C,IAAI,CAACN,IAAI,GAAGA,IAAI,CAAA;IAChB,IAAI,CAACM,QAAQ,GAAGA,QAAQ,CAAA;AACxB,IAAA,IAAI,CAAChJ,KAAK,GAAG0I,IAAI,CAACzwB,MAAM,GAAG+wB,QAAQ,CAAA;AACrC,GAAA;AACD;;ACpBD;;;AAGG;AAGH;;AAEG;AACH,MAAe+V,QAAQ,CAAA;AAKrB;AACA1yC,EAAAA,WAAAA,CAAmBk8B,QAAkB,EAAErI,QAAkB,EAAEsI,GAAa,EAAA;AACtE,IAAA,IAAI,CAACD,QAAQ,GAAG,IAAIuW,UAAU,CAAC,IAAIE,YAAY,CAACzW,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA;AAC7D,IAAA,IAAI,CAACrI,QAAQ,GAAG,IAAI4e,UAAU,CAAC,IAAIG,WAAW,CAAC/e,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA;AAC5D,IAAA,IAAI,CAACsI,GAAG,GAAG,IAAIsW,UAAU,CAAC,IAAIE,YAAY,CAACxW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;AACrD,GAAA;AACD;;ACpBD;;;AAGG;AAKH;;AAEG;AACH,MAAM0W,YAAa,SAAQH,QAAQ,CAAA;AACjC1yC,EAAAA,WAAAA,CAAmB;IACjBqM,KAAK;AACLymC,IAAAA,QAAAA;AAID,GAAA,EAAA;AACC,IAAA,MAAM5W,QAAQ,GAAG;AACf;IACA,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACR,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACR,CAAC,EAAE,CAAC,EAAE,CAAC;AAEP;AACA,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EACV,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACR,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAET;IACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACR,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAER;AACA,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACT,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACR,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAEV;IACA,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACR,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAER;AACA,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CACT,CAAA;AAED,IAAA,MAAMrI,QAAQ,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,EAAE,EACR,CAAC,EAAE,EAAE,EAAE,EAAE,EACT,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EAAE,EAAE,CACX,CAAA;AAED,IAAA,MAAMkf,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAA;IACtB,MAAMC,MAAM,GAAe,EAAE,CAAA;IAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMC,KAAK,GAAG,CACZD,CAAC,GAAGH,QAAQ,EAAEE,CAAC,GAAG,GAAG,EACrB,CAACC,CAAC,GAAG,CAAC,IAAIH,QAAQ,EAAEE,CAAC,GAAG,GAAG,EAC3B,CAACC,CAAC,GAAG,CAAC,IAAIH,QAAQ,EAAE,CAACE,CAAC,GAAG,CAAC,IAAI,GAAG,EACjCC,CAAC,GAAGH,QAAQ,EAAE,CAACE,CAAC,GAAG,CAAC,IAAI,GAAG,CAC5B,CAAA;AAEDD,QAAAA,MAAM,CAACjS,IAAI,CAACoS,KAAK,CAAC,CAAA;AACnB,OAAA;AACF,KAAA;AAED,IAAA,IAAIL,QAAQ,EAAE;AACZA,MAAAA,QAAQ,CAAC7nB,OAAO,CAAC,CAACmoB,MAAM,EAAEroC,GAAG,KAAI;AAC/B,QAAA,IAAIqoC,MAAM,KAAK1qC,MAAM,CAAC2qC,IAAI,EAAE,OAAA;AAE5B,QAAA,MAAMF,KAAK,GAAGH,MAAM,CAACjoC,GAAG,CAAC,CAAA;AACzB,QAAA,IAAIuoC,QAAkB,CAAA;AAEtB,QAAA,IAAIF,MAAM,KAAK1qC,MAAM,CAAC6qC,KAAK,EAAE;UAC3BD,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACxB,SAAA,MAAM,IAAIF,MAAM,KAAK1qC,MAAM,CAAC8qC,MAAM,EAAE;UACnCF,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACxB,SAAA,MAAM;UACLA,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACxB,SAAA;AAED,QAAA,MAAMG,SAAS,GAAG7oC,KAAK,CAASuoC,KAAK,CAACvnC,MAAM,CAAC,CAAA;AAC7C,QAAA,KAAK,IAAI8nC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGP,KAAK,CAACvnC,MAAM,GAAG,CAAC,EAAE8nC,KAAK,EAAE,EAAE;AACrDD,UAAAA,SAAS,CAACC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGP,KAAK,CAACG,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AACzDD,UAAAA,SAAS,CAACC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGP,KAAK,CAACG,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AAC1D,SAAA;AAEDV,QAAAA,MAAM,CAACjoC,GAAG,CAAC,GAAG0oC,SAAS,CAAA;AACzB,OAAC,CAAC,CAAA;AACH,KAAA;IAED,MAAMtX,GAAG,GAAGhwB,WAAW,CAAC6mC,MAAM,EAAE3mC,KAAK,EAAE,QAAQ,CAAC,CAC7CoO,MAAM,CAAC,CAACk5B,GAAG,EAAEzyC,GAAG,KAAKyyC,GAAG,CAACC,MAAM,CAAC1yC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAA;AAE5C,IAAA,KAAK,CAACg7B,QAAQ,EAAErI,QAAQ,EAAEsI,GAAG,CAAC,CAAA;AAChC,GAAA;AACD;;;;;;ACtHD;;;AAGG;AAoCH;;;;;AAKG;AACH,MAAM0X,iBAAkB,SAAQrD,UAAU,CAAA;AAIxC;;;;AAIG;EACHxwC,WAAAA,CAAmBwuB,OAAiC,EAAA;IAClD,KAAK,CAACA,OAAO,CAAC,CAAA;IAEd,MAAM;AACJmiB,MAAAA,YAAY,GAAG,QAAQ;AACvBmD,MAAAA,YAAY,GAAG,KAAA;AAAK,KACrB,GAAGtlB,OAAO,CAAA;IAEX,IAAI,CAACqiB,aAAa,GAAGF,YAAY,CAAA;IACjC,IAAI,CAACoD,aAAa,GAAGD,YAAY,CAAA;AACnC,GAAA;AAEOtS,EAAAA,UAAUA,CAACpS,GAAiB,EAAEyK,OAAkB,EAAA;AACrD,IAAA,MAAM8W,YAAY,GAAG,IAAI,CAACE,aAAa,CAAA;AACvC,IAAA,MAAMiD,YAAY,GAAG,IAAI,CAACC,aAAa,CAAA;AACvC,IAAA,MAAM5c,QAAQ,GAAG;MACfob,QAAQ,EAAE1Y,OAAO,CAACrS,MAAM,EAAE,GACtB,IAAIkpB,kBAAkB,CAACthB,GAAG,EAAEyK,OAAsB,EAAE8W,YAAY,CAAC,GACjE,IAAIyB,iBAAiB,CAAChjB,GAAG,EAAEyK,OAAoB,EAAE8W,YAAY,CAAA;KAClE,CAAA;AAED,IAAA,MAAM/c,QAAQ,GAAG,IAAIif,YAAY,CAAC;AAChCxmC,MAAAA,KAAK,EAAEskC,YAAAA;AACR,KAAA,CAAC,CAAA;AACF,IAAA,MAAMzZ,OAAO,GAAG,IAAIsb,aAAa,CAACpjB,GAAG,EAAEwJ,IAAE,EAAEG,IAAE,EAAE5B,QAAQ,CAAC,CAAA;IACxD,MAAM5C,GAAG,GAAGnF,GAAG,CAAC6G,SAAS,CAACrC,QAAQ,EAAEsD,OAAO,CAAC,CAAA;IAC5C,MAAMiH,IAAI,GAAG,IAAImU,YAAY,CAAC/d,GAAG,EAAE2C,OAAO,CAAC,CAAA;AAE3C,IAAA,IAAI4c,YAAY,EAAE;AAChB3V,MAAAA,IAAI,CAACphB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;AACnB,KAAA;IACDohB,IAAI,CAACjqB,YAAY,EAAE,CAAA;AAEnB,IAAA,OAAOiqB,IAAI,CAAA;AACb,GAAA;AACD;;ACjFD,MAAM6V,gBAAiB,SAAQvD,OAAO,CAAA;AAIpCzwC,EAAAA,WAAmBA,CAAAovB,GAAiB,EAAEyK,OAAkB,EAAA;AACtD,IAAA,KAAK,EAAE,CAAA;IAEP,IAAI,CAACA,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAAC+W,aAAa,GAAGxhB,GAAG,CAACuK,kBAAkB,CAACE,OAAO,CAAC,CAAA;AACtD,GAAA;EAEOjmB,OAAOA,CAACohB,EAAkD,EAAA;AAC/D,IAAA,IAAI,CAAC6E,OAAO,CAACjmB,OAAO,EAAE,CAAA;AACtBohB,IAAAA,EAAE,CAAC8b,aAAa,CAAC,IAAI,CAACF,aAAa,CAAC,CAAA;AACtC,GAAA;AAEOtgC,EAAAA,MAAMA,CAAC0kB,EAAkD,EAAEjb,QAA8B,EAAEoa,QAAiB,EAAA;AACjH,IAAA,MAAM0F,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;AAC5B,IAAA,MAAMtS,OAAO,GAAGsS,OAAO,CAACtS,OAAO,EAAE,CAAA;IAEjCyN,EAAE,CAAC+b,WAAW,CAAC/b,EAAE,CAACgc,mBAAmB,EAAEnX,OAAO,CAAC3S,KAAK,CAAC,CAAA;AACrD8N,IAAAA,EAAE,CAACic,SAAS,CAACl3B,QAAQ,EAAE,CAAC,CAAC,CAAA;AACzBib,IAAAA,EAAE,CAACkc,aAAa,CAAClc,EAAE,CAACmc,QAAQ,CAAC,CAAA;IAC7Bnc,EAAE,CAAC+E,WAAW,CAAC/E,EAAE,CAACgF,UAAU,EAAE,IAAI,CAAC4W,aAAa,CAAC,CAAA;AAEjD,IAAA,IAAI,CAACrpB,OAAO,IAAI4M,QAAQ,EAAE;MACxBa,EAAE,CAACoc,aAAa,CAACpc,EAAE,CAACgF,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEhF,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACuc,aAAa,EAAE1X,OAAO,CAACnS,MAAM,CAAC,CAAA;AACpF,KAAA,MAAM;MACLsN,EAAE,CAACwc,UAAU,CAACxc,EAAE,CAACgF,UAAU,EAAE,CAAC,EAAEhF,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACsc,IAAI,EAAEtc,EAAE,CAACuc,aAAa,EAAE1X,OAAO,CAACnS,MAAM,CAAC,CAAA;AACpF,KAAA;IAED,IAAI,CAACH,OAAO,EAAE;MACZ,IAAI,CAAC8Q,WAAW,GAAG,KAAK,CAAA;AACzB,KAAA;AACH,GAAA;AACD;;;;;;AC3CD;;;AAGG;AA4BH;;;;;;;;;AASG;AACH,MAAM4b,mBAAoB,SAAQzD,UAAU,CAAA;AAI1C;;;;AAIG;EACHxwC,WAAAA,CAAmBwuB,OAAmC,EAAA;IACpD,KAAK,CAACA,OAAO,CAAC,CAAA;IAEd,MAAM;AACJmiB,MAAAA,YAAY,GAAG,QAAQ;AACvBmD,MAAAA,YAAY,GAAG,KAAA;AAAK,KACrB,GAAGtlB,OAAO,CAAA;IAEX,IAAI,CAACqiB,aAAa,GAAGF,YAAY,CAAA;IACjC,IAAI,CAACoD,aAAa,GAAGD,YAAY,CAAA;AACnC,GAAA;AAEOtS,EAAAA,UAAUA,CAACpS,GAAiB,EAAEyK,OAAkB,EAAA;AACrD,IAAA,MAAM8W,YAAY,GAAG,IAAI,CAACE,aAAa,CAAA;AACvC,IAAA,MAAMiD,YAAY,GAAG,IAAI,CAACC,aAAa,CAAA;AACvC,IAAA,MAAM5c,QAAQ,GAAG;AACfob,MAAAA,QAAQ,EAAE,IAAIyB,gBAAgB,CAAC5kB,GAAG,EAAEyK,OAAO,CAAA;KAC5C,CAAA;AACD,IAAA,MAAMjG,QAAQ,GAAG,IAAIif,YAAY,CAAC;AAChCxmC,MAAAA,KAAK,EAAEskC,YAAAA;AACR,KAAA,CAAC,CAAA;AACF,IAAA,MAAMzZ,OAAO,GAAG,IAAIsb,aAAa,CAACpjB,GAAG,EAAEwJ,IAAE,EAAEG,IAAE,EAAE5B,QAAQ,CAAC,CAAA;IACxD,MAAM5C,GAAG,GAAGnF,GAAG,CAAC6G,SAAS,CAACrC,QAAQ,EAAEsD,OAAO,CAAC,CAAA;IAC5C,MAAMiH,IAAI,GAAG,IAAImU,YAAY,CAAC/d,GAAG,EAAE2C,OAAO,CAAC,CAAA;AAE3C,IAAA,IAAI4c,YAAY,EAAE;AAChB3V,MAAAA,IAAI,CAACphB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;AACnB,KAAA;IACDohB,IAAI,CAACjqB,YAAY,EAAE,CAAA;AAEnB,IAAA,OAAOiqB,IAAI,CAAA;AACb,GAAA;AACD;;AClFD;;;AAGG;AAGH;;AAEG;AACH,MAAM+V,gBAAiB,SAAQxB,QAAQ,CAAA;EACrC1yC,WAAAA,CAAmBm0C,QAAgB,EAAA;IACjC,MAAMjY,QAAQ,GAAa,EAAE,CAAA;IAC7B,MAAMrI,QAAQ,GAAa,EAAE,CAAA;IAC7B,MAAMsI,GAAG,GAAa,EAAE,CAAA;IAExB,MAAMnoB,MAAM,GAAG,CAAC,CAAA;IAChB,MAAMogC,cAAc,GAAG,EAAE,CAAA;AACzB,IAAA,MAAM7hB,UAAU,GAAGve,MAAM,GAAG,GAAG,CAAA;AAC/B,IAAA,MAAMqgC,cAAc,GAAG,CAAC,CAAC9hB,UAAU,EAAEA,UAAU,CAAC,CAAA;AAChD,IAAA,MAAM+hB,iBAAiB,GAAG,CAAC,GAAGF,cAAc,CAAA;AAC5C,IAAA,MAAMG,UAAU,GAAGJ,QAAQ,GAAGG,iBAAiB,CAAA;IAE/C,KAAK,IAAIE,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAE,EAAE;AACnC,MAAA,MAAMpmC,CAAC,GAAGimC,cAAc,CAACG,IAAI,CAAC,CAAA;MAE9B,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,IAAIL,cAAc,EAAEK,MAAM,EAAE,EAAE;AACvD,QAAA,MAAMzzB,KAAK,GAAGyzB,MAAM,GAAGF,UAAU,GAAGvtC,IAAI,CAACE,EAAE,GAAGitC,QAAQ,GAAG,GAAG,CAAA;AAC5D,QAAA,MAAMrtC,CAAC,GAAGE,IAAI,CAAC+a,GAAG,CAACf,KAAK,CAAC,CAAA;AACzB,QAAA,MAAM3S,CAAC,GAAGrH,IAAI,CAACC,GAAG,CAAC+Z,KAAK,CAAC,CAAA;AACzB,QAAA,MAAM0zB,CAAC,GAAGD,MAAM,GAAGH,iBAAiB,CAAA;QACpC,MAAMK,CAAC,GAAGH,IAAI,CAAA;AAEdrY,QAAAA,GAAG,CAAC4E,IAAI,CAAC2T,CAAC,EAAEC,CAAC,CAAC,CAAA;QACdzY,QAAQ,CAAC6E,IAAI,CAACj6B,CAAC,EAAEsH,CAAC,EAAEC,CAAC,CAAC,CAAA;AAEtB,QAAA,IAAImmC,IAAI,KAAK,CAAC,IAAIC,MAAM,GAAGL,cAAc,EAAE;UACzC,MAAMlpC,CAAC,GAAGupC,MAAM,CAAA;AAChB,UAAA,MAAMtpC,CAAC,GAAGD,CAAC,GAAGkpC,cAAc,GAAG,CAAC,CAAA;UAEhCvgB,QAAQ,CAACkN,IAAI,CAAC71B,CAAC,EAAEC,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEC,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,CAAC,CAAA;AAC5C,SAAA;AACF,OAAA;AACF,KAAA;AAED,IAAA,KAAK,CAACgxB,QAAQ,EAAErI,QAAQ,EAAEsI,GAAG,CAAC,CAAA;AAChC,GAAA;AACD;;AC9CD;;;AAGE;AA+BF;;;;;;;AAOG;AACH,MAAMyY,qBAAsB,SAAQpE,UAAU,CAAA;AAM5C;;;;AAIG;EACHxwC,WAAAA,CAAmBwuB,OAAqC,EAAA;IACtD,KAAK,CAACA,OAAO,CAAC,CAAA;IAEd,MAAM;AACJqmB,MAAAA,OAAO,GAAG,KAAA;AACX,KAAA,GAAGrmB,OAAO,CAAA;IAEX,IAAI,CAACsmB,QAAQ,GAAGD,OAAO,CAAA;IACvB,IAAI,CAACziC,OAAO,GAAG,CAAC,CAAA;IAChB,IAAI,CAAC2iC,WAAW,GAAG,CAAC,CAAA;IACpB,IAAI,CAAC9V,KAAK,GAAG,IAAI,CAAA;AACnB,GAAA;AAEOuC,EAAAA,UAAUA,CAACpS,GAAiB,EAAEyK,OAAkB,EAAA;AACrD,IAAA,IAAI,IAAI,CAACoF,KAAK,EAAE,OAAO,IAAI,CAACA,KAAK,CAAA;AAEjC,IAAA,MAAM4V,OAAO,GAAG,IAAI,CAACC,QAAQ,CAAA;IAC7B,MAAM;MAAE/gC,KAAK;AAAEC,MAAAA,MAAAA;AAAQ,KAAA,GAAG6lB,OAAO,CAAA;AACjC,IAAA,MAAM7tB,MAAM,GAAG+H,KAAK,GAAGC,MAAM,CAAA;AAC7B,IAAA,MAAMqC,QAAQ,GAAG,GAAG,GAAGrK,MAAM,CAAA;AAC7B,IAAA,MAAMgpC,cAAc,GAAGH,OAAO,GAC1B,CAAC,GACD,CAAC,GAAG7tC,IAAI,CAACkF,GAAG,CAACmK,QAAQ,GAAGrO,UAAU,CAAC,CAAA;IACvC,MAAMitC,aAAa,GAAGJ,OAAO,GACzB7oC,MAAM,GACN,CAAC,GAAGhF,IAAI,CAACE,EAAE,CAAA;AAEf,IAAA,MAAM0sB,QAAQ,GAAG,IAAIsgB,gBAAgB,CAACe,aAAa,CAAC,CAAA;IACpD,MAAM/d,OAAO,GAAG,IAAIsb,aAAa,CAACpjB,GAAG,EAAEwJ,IAAE,EAAEG,IAAE,EAAE;AAC7CwZ,MAAAA,QAAQ,EAAE,IAAIyB,gBAAgB,CAAC5kB,GAAG,EAAEyK,OAAO,CAAA;AAC5C,KAAA,CAAC,CAAA;IACF,MAAMtF,GAAG,GAAGnF,GAAG,CAAC6G,SAAS,CAACrC,QAAQ,EAAEsD,OAAO,CAAC,CAAA;IAC5C,MAAMiH,IAAI,GAAG,IAAImU,YAAY,CAAC/d,GAAG,EAAE2C,OAAO,CAAC,CAAA;AAE3CiH,IAAAA,IAAI,CAACphB,KAAK,CAAC,CAAC,CAAC,GAAGi4B,cAAc,CAAA;AAC9BrnC,IAAAA,IAAI,CAACC,QAAQ,CAACuwB,IAAI,CAACtsB,QAAQ,CAAC,CAAA;AAC5BlE,IAAAA,IAAI,CAACI,OAAO,CAACowB,IAAI,CAACtsB,QAAQ,EAAEssB,IAAI,CAACtsB,QAAQ,EAAE,CAAC7K,IAAI,CAACE,EAAE,GAAG,CAAC,CAAC,CAAA;IACxDi3B,IAAI,CAACjqB,YAAY,EAAE,CAAA;IAEnB,IAAI,CAAC9B,OAAO,GAAGpG,MAAM,CAAA;AACrB,IAAA,IAAI,CAAC+oC,WAAW,GAAGC,cAAc,GAAG,GAAG,CAAA;IACvC,IAAI,CAAC/V,KAAK,GAAGd,IAAI,CAAA;AAEjB,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;EAEO0B,YAAYA,CAAC5uB,MAAc,EAAA;AAChC,IAAA,KAAK,CAAC4uB,YAAY,CAAC5uB,MAAM,CAAC,CAAA;AAE1B,IAAA,MAAMktB,IAAI,GAAG,IAAI,CAACc,KAAK,CAAA;AACvB,IAAA,MAAMjzB,MAAM,GAAG,IAAI,CAACoG,OAAO,CAAA;AAC3B,IAAA,MAAMmgB,UAAU,GAAG,IAAI,CAACwiB,WAAW,CAAA;IAEnC,IAAI,CAAC5W,IAAI,EAAE,OAAA;IAEX,IAAI,IAAI,CAAC2W,QAAQ,EAAE;AACjB,MAAA,MAAMI,aAAa,GAAG,GAAG,GAAGlpC,MAAM,GAAG/D,UAAU,CAAA;AAC/CgJ,MAAAA,MAAM,CAACgE,gBAAgB,CAAC,CAACigC,aAAa,EAAEA,aAAa,CAAC,CAAA;AACvD,KAAA;IAED,MAAMC,eAAe,GAAGnuC,IAAI,CAAC6H,KAAK,CAAC0jB,UAAU,EAAE,CAAC,CAAC,GAAGtqB,UAAU,CAAA;IAC9D,MAAMmtC,OAAO,GAAGpuC,IAAI,CAACkF,GAAG,CAAC+E,MAAM,CAAC9D,GAAG,GAAGnF,UAAU,GAAG,GAAG,CAAC,IAAIuqB,UAAU,GAAGthB,MAAM,CAACjF,MAAM,CAAC,CAAA;AAEtFiF,IAAAA,MAAM,CAACiE,kBAAkB,CAAC,CAACigC,eAAe,EAAEA,eAAe,CAAC,CAAA;AAC5DlkC,IAAAA,MAAM,CAACkE,iBAAiB,CAACigC,OAAO,EAAE9sC,QAAQ,CAAC,CAAA;AAC3C2I,IAAAA,MAAM,CAACmE,oBAAoB,CAACmd,UAAU,GAAG,CAAC,CAAC,CAAA;AAC7C,GAAA;AACD;;;;ACxHD;;;AAGG;AAoBH;;;;;;;AAOG;AACH,MAAM8iB,qBAAsB,SAAQ7E,UAAU,CAAA;AACrChP,EAAAA,UAAUA,CAACpS,GAAiB,EAAEyK,OAAkB,EAAA;AACrD,IAAA,MAAM1C,QAAQ,GAAG;AACfob,MAAAA,QAAQ,EAAE,IAAIyB,gBAAgB,CAAC5kB,GAAG,EAAEyK,OAAO,CAAA;KAC5C,CAAA;AACD,IAAA,MAAMjG,QAAQ,GAAG,IAAIif,YAAY,CAAC;AAChCxmC,MAAAA,KAAK,EAAE,QAAQ;MACfymC,QAAQ,EAAE,CACRpqC,MAAM,CAAC2qC,IAAI,EAAE3qC,MAAM,CAAC2qC,IAAI,EAAE3qC,MAAM,CAAC2qC,IAAI,EACrC3qC,MAAM,CAAC6qC,KAAK,EAAE7qC,MAAM,CAAC8qC,MAAM,EAAE9qC,MAAM,CAAC6qC,KAAK,CAAA;AAE5C,KAAA,CAAC,CAAA;AACF,IAAA,MAAMrc,OAAO,GAAG,IAAIsb,aAAa,CAACpjB,GAAG,EAAEwJ,IAAE,EAAEG,IAAE,EAAE5B,QAAQ,CAAC,CAAA;IACxD,MAAM5C,GAAG,GAAGnF,GAAG,CAAC6G,SAAS,CAACrC,QAAQ,EAAEsD,OAAO,CAAC,CAAA;IAC5C,MAAMiH,IAAI,GAAG,IAAImU,YAAY,CAAC/d,GAAG,EAAE2C,OAAO,CAAC,CAAA;AAE3C,IAAA,OAAOiH,IAAI,CAAA;AACb,GAAA;AACD;;ACjDD;;;AAGG;AAGH;;AAEG;AACH,MAAMmX,cAAe,SAAQ5C,QAAQ,CAAA;AACnC;AACA1yC,EAAAA,WAAAA,GAAA;AACE;IACA,MAAMu1C,aAAa,GAAG,EAAE,CAAA;IACxB,MAAMlB,cAAc,GAAG,EAAE,CAAA;AACzB,IAAA,MAAMmB,iCAAiC,GAAG,CAAC,GAAG,GAAGxuC,IAAI,CAACE,EAAE,CAAA;IAExD,MAAMi1B,GAAG,GAAa,EAAE,CAAA;IACxB,MAAMD,QAAQ,GAAa,EAAE,CAAA;IAC7B,MAAMrI,QAAQ,GAAa,EAAE,CAAA;AAC7B,IAAA,IAAI4hB,MAAc,CAAA;AAClB,IAAA,IAAIhB,MAAc,CAAA;IAElB,KAAKgB,MAAM,GAAG,CAAC,EAAEA,MAAM,IAAIF,aAAa,EAAEE,MAAM,EAAE,EAAE;MAClD,MAAMz/B,KAAK,GAAG,CAACy/B,MAAM,GAAGF,aAAa,GAAG,GAAG,IAAIvuC,IAAI,CAACE,EAAE,CAAA;AACtD,MAAA,MAAMwuC,QAAQ,GAAG1uC,IAAI,CAACC,GAAG,CAAC+O,KAAK,CAAC,CAAA;AAChC,MAAA,MAAM2/B,QAAQ,GAAG3uC,IAAI,CAAC+a,GAAG,CAAC/L,KAAK,CAAC,CAAA;MAEhC,KAAKy+B,MAAM,GAAG,CAAC,EAAEA,MAAM,IAAIJ,cAAc,EAAEI,MAAM,EAAE,EAAE;AACnD,QAAA,MAAMmB,GAAG,GAAG,CAACnB,MAAM,GAAGJ,cAAc,GAAG,GAAG,IAAI,CAAC,GAAGrtC,IAAI,CAACE,EAAE,GAAGsuC,iCAAiC,CAAA;AAC7F,QAAA,MAAMK,MAAM,GAAG7uC,IAAI,CAACC,GAAG,CAAC2uC,GAAG,CAAC,CAAA;AAC5B,QAAA,MAAME,MAAM,GAAG9uC,IAAI,CAAC+a,GAAG,CAAC6zB,GAAG,CAAC,CAAA;AAC5B,QAAA,MAAM9uC,CAAC,GAAGgvC,MAAM,GAAGH,QAAQ,CAAA;QAC3B,MAAMvnC,CAAC,GAAGsnC,QAAQ,CAAA;AAClB,QAAA,MAAMrnC,CAAC,GAAGwnC,MAAM,GAAGF,QAAQ,CAAA;AAC3B,QAAA,MAAMjB,CAAC,GAAGD,MAAM,GAAGJ,cAAc,CAAA;AACjC,QAAA,MAAMM,CAAC,GAAGc,MAAM,GAAGF,aAAa,CAAA;AAEhCpZ,QAAAA,GAAG,CAAC4E,IAAI,CAAC2T,CAAC,EAAEC,CAAC,CAAC,CAAA;QACdzY,QAAQ,CAAC6E,IAAI,CAACj6B,CAAC,EAAEsH,CAAC,EAAEC,CAAC,CAAC,CAAA;AAEtB,QAAA,IAAIomC,MAAM,KAAKJ,cAAc,IAAIoB,MAAM,KAAKF,aAAa,EAAE;UACzD,MAAMrqC,CAAC,GAAGuqC,MAAM,IAAIpB,cAAc,GAAG,CAAC,CAAC,GAAGI,MAAM,CAAA;AAChD,UAAA,MAAMtpC,CAAC,GAAGD,CAAC,GAAGmpC,cAAc,GAAG,CAAC,CAAA;UAEhCxgB,QAAQ,CAACkN,IAAI,CAAC71B,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAA;AAC5C,SAAA;AACF,OAAA;AACF,KAAA;AAED,IAAA,KAAK,CAAC+wB,QAAQ,EAAErI,QAAQ,EAAEsI,GAAG,CAAC,CAAA;AAChC,GAAA;AACD;;ACpDD;;;AAGG;AAqBH;;;;;AAKG;AACH,MAAM4Z,kBAAmB,SAAQvF,UAAU,CAAA;AACzC;;;;AAIG;EACHxwC,WAAAA,CAAmBwuB,OAAkC,EAAA;IACnD,KAAK,CAACA,OAAO,CAAC,CAAA;AAChB,GAAA;AAEOgT,EAAAA,UAAUA,CAACpS,GAAiB,EAAEyK,OAAkB,EAAA;AACrD,IAAA,MAAM1C,QAAQ,GAAG;AACfob,MAAAA,QAAQ,EAAE,IAAIyB,gBAAgB,CAAC5kB,GAAG,EAAEyK,OAAO,CAAA;KAC5C,CAAA;AAED,IAAA,MAAMjG,QAAQ,GAAG,IAAI0hB,cAAc,EAAE,CAAA;AACrC,IAAA,MAAMpe,OAAO,GAAG,IAAIsb,aAAa,CAACpjB,GAAG,EAAEwJ,IAAE,EAAEG,IAAE,EAAE5B,QAAQ,CAAC,CAAA;IAExD,MAAM5C,GAAG,GAAGnF,GAAG,CAAC6G,SAAS,CAACrC,QAAQ,EAAEsD,OAAO,CAAC,CAAA;IAC5C,MAAMiH,IAAI,GAAG,IAAImU,YAAY,CAAC/d,GAAG,EAAE2C,OAAO,CAAC,CAAA;AAE3C,IAAA,OAAOiH,IAAI,CAAA;AACb,GAAA;AACD;;ACrDD;;;AAGG;AAGH,MAAM6X,YAAa,SAAQvF,OAAO,CAAA;EAGhCzwC,WAAAA,CAAmBkB,GAAW,EAAA;AAC5B,IAAA,KAAK,EAAE,CAAA;IAEP,IAAI,CAACA,GAAG,GAAGA,GAAG,CAAA;AAChB,GAAA;AAEOoP,EAAAA,MAAMA,CAAC0kB,EAAkD,EAAEjb,QAA8B,EAAA;IAC9Fib,EAAE,CAACkD,SAAS,CAACne,QAAQ,EAAE,IAAI,CAAC7Y,GAAG,CAAC,CAAA;IAEhC,IAAI,CAACm3B,WAAW,GAAG,KAAK,CAAA;AAC1B,GAAA;AACD;;ACpBD;;;AAGG;AAGH;;AAEG;AACH,MAAM4d,aAAc,SAAQvD,QAAQ,CAAA;AAClC;AACA1yC,EAAAA,WAAmBA,CAAA+T,KAAA,GAAgB,CAAC,EAAEC,MAAA,GAAiB,CAAC,EAAE3F,CAAA,GAAY,CAAC,CAAC,EAAA;AACtE,IAAA,MAAMikB,SAAS,GAAGve,KAAK,GAAG,GAAG,CAAA;AAC7B,IAAA,MAAMwe,UAAU,GAAGve,MAAM,GAAG,GAAG,CAAA;AAC/B,IAAA,MAAMkoB,QAAQ,GAAG,CACf,CAAC5J,SAAS,EAAE,CAACC,UAAU,EAAElkB,CAAC,EAC1BikB,SAAS,EAAE,CAACC,UAAU,EAAElkB,CAAC,EACzB,CAACikB,SAAS,EAAEC,UAAU,EAAElkB,CAAC,EACzBikB,SAAS,EAAEC,UAAU,EAAElkB,CAAC,CACzB,CAAA;AACD,IAAA,MAAMwlB,QAAQ,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CACR,CAAA;AACD,IAAA,MAAMsI,GAAG,GAAG,CACV,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,CACL,CAAA;AAED,IAAA,KAAK,CAACD,QAAQ,EAAErI,QAAQ,EAAEsI,GAAG,CAAC,CAAA;AAChC,GAAA;AACD;;;;;;ACjCD;;;AAGG;AAwBH;;;;;AAKG;AACH,MAAM+Z,sBAAuB,SAAQ1F,UAAU,CAAA;AAC7C;;;;AAIG;EACHxwC,WAAAA,CAAmBwuB,OAAsC,EAAA;IACvD,KAAK,CAACA,OAAO,CAAC,CAAA;AAChB,GAAA;AAEOgT,EAAAA,UAAUA,CAACpS,GAAiB,EAAEyK,OAAkB,EAAA;AACrDA,IAAAA,OAAO,CAAC1S,KAAK,GAAGC,qBAAqB,CAAC+uB,MAAM,CAAA;AAC5Ctc,IAAAA,OAAO,CAACvS,KAAK,GAAGF,qBAAqB,CAAC+uB,MAAM,CAAA;AAE5C,IAAA,MAAMhf,QAAQ,GAAG;AACfob,MAAAA,QAAQ,EAAE,IAAIyB,gBAAgB,CAAC5kB,GAAG,EAAEyK,OAAO,CAAC;AAC5Cuc,MAAAA,IAAI,EAAE,IAAIJ,YAAY,CAAC,CAAC,CAAC;AACzBK,MAAAA,MAAM,EAAE,IAAIL,YAAY,CAAC,GAAG,CAAC;AAC7BM,MAAAA,KAAK,EAAE,IAAIN,YAAY,CAAC,CAAC,CAAA;KAC1B,CAAA;AAED,IAAA,MAAMpiB,QAAQ,GAAG,IAAIqiB,aAAa,EAAE,CAAA;AACpC,IAAA,MAAM/e,OAAO,GAAG,IAAIsb,aAAa,CAACpjB,GAAG,EAAEwJ,IAAE,EAAEG,EAAE,EAAE5B,QAAQ,CAAC,CAAA;IAExD,MAAM5C,GAAG,GAAGnF,GAAG,CAAC6G,SAAS,CAACrC,QAAQ,EAAEsD,OAAO,CAAC,CAAA;IAC5C,MAAMiH,IAAI,GAAG,IAAImU,YAAY,CAAC/d,GAAG,EAAE2C,OAAO,CAAC,CAAA;AAE3CiH,IAAAA,IAAI,CAACjgB,EAAE,CAACvW,gBAAgB,CAACC,MAAM,EAAE,CAAC;AAAEqJ,MAAAA,MAAAA;AAAQ,KAAA,KAAI;AAC9C,MAAA,MAAMkmB,QAAQ,GAAGgH,IAAI,CAACjH,OAAO,CAACC,QAAQ,CAAA;MAEtCA,QAAQ,CAACif,IAAI,CAACl1C,GAAG,GAAG+P,MAAM,CAACzD,GAAG,GAAG,GAAG,CAAA;AACpC;MACA2pB,QAAQ,CAACkf,MAAM,CAACn1C,GAAG,GAAI+P,MAAM,CAACxD,KAAK,GAAG,GAAG,GAAI,GAAG,CAAA;AAChD0pB,MAAAA,QAAQ,CAACmf,KAAK,CAACp1C,GAAG,GAAG+P,MAAM,CAACc,IAAI,CAAA;AAEhColB,MAAAA,QAAQ,CAACif,IAAI,CAAC/d,WAAW,GAAG,IAAI,CAAA;AAChClB,MAAAA,QAAQ,CAACkf,MAAM,CAAChe,WAAW,GAAG,IAAI,CAAA;AAClClB,MAAAA,QAAQ,CAACmf,KAAK,CAACje,WAAW,GAAG,IAAI,CAAA;AACnC,KAAC,CAAC,CAAA;AAEF,IAAA,OAAO8F,IAAI,CAAA;AACb,GAAA;EAEOsD,aAAaA,CAAC5jB,OAAoB,EAAA;IACvCA,OAAO,CAACoI,eAAe,GAAG,IAAI,CAAA;AAChC,GAAA;AACD;;AC/ED;;;AAGG;AAGH,MAAMswB,mBAAoB,SAAQ9F,OAAO,CAAA;EAGvCzwC,WAAAA,CAAmBkB,GAAe,EAAA;AAChC,IAAA,KAAK,EAAE,CAAA;IAEP,IAAI,CAACA,GAAG,GAAGA,GAAG,CAAA;AAChB,GAAA;AAEOoP,EAAAA,MAAMA,CAAC0kB,EAAkD,EAAEjb,QAA8B,EAAA;IAC9Fib,EAAE,CAACwhB,UAAU,CAACz8B,QAAQ,EAAE,IAAI,CAAC7Y,GAAG,CAACuZ,MAAM,CAAC,CAACrO,GAAG,EAAEqqC,MAAM,KAAK,CAAC,GAAGrqC,GAAG,EAAE,GAAGqqC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;IAElF,IAAI,CAACpe,WAAW,GAAG,KAAK,CAAA;AAC1B,GAAA;AACD;;;;ACpBD;;;AAGG;AA8BH;;;;;AAKG;AACH,MAAMqe,oBAAqB,SAAQlG,UAAU,CAAA;AAqB3C;;;;AAIG;EACHxwC,WAAAA,CAAmBwuB,OAAoC,EAAA;IACrD,KAAK,CAACA,OAAO,CAAC,CAAA;AAEd,IAAA,IAAI,CAACmoB,KAAK,GAAGnoB,OAAO,CAACooB,IAAI,CAAA;AAC3B,GAAA;AAEOpV,EAAAA,UAAUA,CAACpS,GAAiB,EAAEyK,OAAkB,EAAA;AACrD,IAAA,IAAIgd,OAAiB,CAAA;AACrB,IAAA,IAAIC,QAAkB,CAAA;IAEtB,QAAQ,IAAI,CAACH,KAAK;AAChB,MAAA,KAAKD,oBAAoB,CAACK,IAAI,CAACC,UAAU;QACvCH,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACxBC,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;AAC3B,QAAA,MAAA;AACF,MAAA;AACE;QACAD,OAAO,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACxBC,QAAQ,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;AAAC,KAAA;AAIhC,IAAA,MAAM3f,QAAQ,GAAG;AACfob,MAAAA,QAAQ,EAAE,IAAIyB,gBAAgB,CAAC5kB,GAAG,EAAEyK,OAAO,CAAC;AAC5C5B,MAAAA,IAAI,EAAE,IAAI+d,YAAY,CAAC,CAAC,CAAC;MACzBiB,eAAe,EAAE,IAAIV,mBAAmB,CAAC,CAACM,OAAO,EAAEC,QAAQ,CAAC,CAAA;KAC7D,CAAA;AAED,IAAA,MAAMljB,QAAQ,GAAG,IAAI0hB,cAAc,EAAE,CAAA;AACrC,IAAA,MAAMpe,OAAO,GAAG,IAAIsb,aAAa,CAACpjB,GAAG,EAAEwJ,EAAE,EAAEG,IAAE,EAAE5B,QAAQ,CAAC,CAAA;IAExD,MAAM5C,GAAG,GAAGnF,GAAG,CAAC6G,SAAS,CAACrC,QAAQ,EAAEsD,OAAO,CAAC,CAAA;IAC5C,MAAMiH,IAAI,GAAG,IAAImU,YAAY,CAAC/d,GAAG,EAAE2C,OAAO,CAAC,CAAA;AAE3C,IAAA,OAAOiH,IAAI,CAAA;AACb,GAAA;;AA5DA;;;;AAIG;AACWuY,oBAAA,CAAAK,IAAI,GAAG;AACnB;;;AAGG;AACHC,EAAAA,UAAU,EAAE,YAAY;AACxB;;;AAGG;AACHE,EAAAA,UAAU,EAAE,YAAA;CACJ;;ACrDZ;;AAEG;AACH,MAAMC,WAAW,GAAGA,CAAC92C,SAAc,EAAE+2C,IAAY,KAAI;AACnD,EAAA,CAACjlC,SAAS,CAAC9R,SAAS,EAAEm+B,OAAO,CAACn+B,SAAS,CAAC,CAAC4qB,OAAO,CAACosB,KAAK,IAAG;IACvDl3C,MAAM,CAACm3C,mBAAmB,CAACD,KAAK,CAAC,CAC9Bp8B,MAAM,CAAC3a,IAAI,IAAIA,IAAI,CAACi3C,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIj3C,IAAI,KAAK,aAAa,CAAC,CAChE2qB,OAAO,CAAE3qB,IAAY,IAAI;MACxB,MAAMk3C,UAAU,GAAGr3C,MAAM,CAACs3C,wBAAwB,CAACJ,KAAK,EAAE/2C,IAAI,CAAE,CAAA;MAEhE,IAAIk3C,UAAU,CAACE,KAAK,EAAE;AACpB;AACAv3C,QAAAA,MAAM,CAACw3C,cAAc,CAACt3C,SAAS,EAAEC,IAAI,EAAE;AACrCo3C,UAAAA,KAAK,EAAE,UAAS,GAAGE,IAAI,EAAA;AACrB,YAAA,OAAOJ,UAAU,CAACE,KAAK,CAAC1O,IAAI,CAAC,IAAI,CAACoO,IAAI,CAAC,EAAE,GAAGQ,IAAI,CAAC,CAAA;AACnD,WAAA;AACD,SAAA,CAAC,CAAA;AACH,OAAA,MAAM;QACL,MAAMC,gBAAgB,GAAkD,EAAE,CAAA;QAC1E,IAAIL,UAAU,CAACM,GAAG,EAAE;UAClBD,gBAAgB,CAACC,GAAG,GAAG,YAAA;;AACrB,YAAA,OAAO,IAAI,CAACV,IAAI,CAAC,KAAI,CAAApuC,EAAA,GAAAwuC,UAAU,CAACM,GAAG,MAAE,IAAA,IAAA9uC,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAggC,IAAI,CAAC,IAAI,CAACoO,IAAI,CAAC,CAAC,CAAA,CAAA;WACtD,CAAA;AACF,SAAA;QACD,IAAII,UAAU,CAAC11B,GAAG,EAAE;AAClB+1B,UAAAA,gBAAgB,CAAC/1B,GAAG,GAAG,UAAS,GAAG81B,IAAI,EAAA;;AACrC,YAAA,OAAO,CAAA5uC,EAAA,GAAAwuC,UAAU,CAAC11B,GAAG,0CAAEknB,IAAI,CAAC,IAAI,CAACoO,IAAI,CAAC,EAAE,GAAGQ,IAAI,CAAC,CAAA;WACjD,CAAA;AACF,SAAA;QAEDz3C,MAAM,CAACw3C,cAAc,CAACt3C,SAAS,EAAEC,IAAI,EAAEu3C,gBAAgB,CAAC,CAAA;AACzD,OAAA;AACH,KAAC,CAAC,CAAA;AACN,GAAC,CAAC,CAAA;AACJ;;ACrCA;;AAEG;AACUE,MAAAA,aAAa,GAAIC,QAAa,IAAI;AAC7C,EAAA,OAAO73C,MAAM,CAACk3B,IAAI,CAAC2gB,QAAQ,CAAC,CAACv9B,MAAM,CAAC,CAACw9B,KAAK,EAAEC,QAAQ,KAAI;AACtD,IAAA,IAAIF,QAAQ,CAACE,QAAQ,CAAC,IAAI,IAAI,EAAE;AAC9BD,MAAAA,KAAK,CAACC,QAAQ,CAAC,GAAGF,QAAQ,CAACE,QAAQ,CAAC,CAAA;AACrC,KAAA;AAED,IAAA,OAAOD,KAAK,CAAA;GACb,EAAE,EAAE,CAAC,CAAA;AACR;;MCXaE,eAAe,GAAG,CAC7B,SAAS,EACT,MAAM,EACN,MAAM,EACN,QAAQ,EACR,YAAY,EACZ,eAAe,EACf,aAAa;AACb;AACA,IAAI,EACJ,OAAO,EACP,MAAM,EACN,KAAK,EACL,SAAS;;ACbX;;;AAGG;;;;"}