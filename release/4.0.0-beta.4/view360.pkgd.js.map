{"version":3,"file":"view360.pkgd.js","sources":["../src/core/View360Error.ts","../src/const/error.ts","../src/const/browser.ts","../src/const/external.ts","../src/const/internal.ts","../src/utils.ts","../src/core/Motion.ts","../src/core/CameraAnimation.ts","../src/core/Camera.ts","../src/control/input/MouseInput.ts","../src/control/input/TouchInput.ts","../src/control/input/KeyboardInput.ts","../src/control/RotateControl.ts","../src/control/input/WheelInput.ts","../src/control/input/PinchInput.ts","../src/control/ZoomControl.ts","../src/control/input/GyroInput.ts","../src/control/GyroControl.ts","../src/control/PanoControl.ts","../src/texture/Texture.ts","../src/texture/Texture2D.ts","../src/texture/TextureVideo.ts","../src/texture/TextureCube.ts","../src/core/TextureLoader.ts","../src/core/FrameAnimator.ts","../src/core/AutoResizer.ts","../src/core/Autoplay.ts","../src/core/XRManager.ts","../src/hotspot/Hotspot.ts","../src/hotspot/HotspotRenderer.ts","../src/core/VertexArrayObject.ts","../src/core/WebGLContext.ts","../src/core/WebGLRenderer.ts","../src/View360.ts","../src/core/Object3D.ts","../src/plugin/LoadingSpinner/LoadingSpinner.ts","../src/plugin/ControlBar/ControlBarItem.ts","../src/plugin/ControlBar/const.ts","../src/plugin/ControlBar/RangeControl.ts","../src/plugin/ControlBar/ProgressBar.ts","../src/plugin/ControlBar/PlayButton.ts","../src/plugin/ControlBar/VolumeControl.ts","../src/plugin/ControlBar/FullscreenButton.ts","../src/plugin/ControlBar/VideoTime.ts","../src/plugin/ControlBar/PieView.ts","../src/plugin/ControlBar/VRButton.ts","../src/plugin/ControlBar/GyroButton.ts","../src/plugin/ControlBar/AutoHide.ts","../src/plugin/ControlBar/VideoControl.ts","../src/plugin/ControlBar/ControlBar.ts","../src/projection/Projection.ts","../src/uniform/Uniform.ts","../src/uniform/UniformTextureCube.ts","../src/core/CubeTexturePainter.ts","../src/uniform/UniformCanvasCube.ts","../src/core/TriangleMesh.ts","../src/core/ShaderProgram.ts","../src/core/VertexData.ts","../src/geometry/Geometry.ts","../src/geometry/CubeGeometry.ts","../src/projection/CubemapProjection.ts","../src/uniform/UniformTexture2D.ts","../src/projection/CubestripProjection.ts","../src/geometry/CylinderGeometry.ts","../src/projection/CylindricalProjection.ts","../src/projection/EquiangularProjection.ts","../src/geometry/SphereGeometry.ts","../src/projection/EquirectProjection.ts","../src/uniform/UniformFloat.ts","../src/geometry/PlaneGeometry.ts","../src/projection/LittlePlanetProjection.ts","../src/uniform/UniformVector4Array.ts","../src/projection/StereoEquiProjection.ts","../src/cfc/withMethods.ts","../src/cfc/utils.ts","../src/cfc/const.ts","../src/index.ts","../src/index.umd.ts"],"sourcesContent":["/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * Error thrown by {@link View360}\n * @ko {@link View360}이 발생시킨 에러\n * @since 4.0.0\n */\nclass View360Error extends Error {\n  /**\n   * Error code\n   * @ko 에러 코드\n   * @see ERROR_CODES\n   */\n  public code: number;\n\n  /**\n   * Create new instance of View360Error\n   * @ko View360Error의 인스턴스를 생성합니다.\n   * @param message - Error message {@ko 에러 메시지}\n   * @param code - Error code {@ko 에러 코드}\n   */\n  public constructor(message: string, code: number) {\n    super(message);\n\n    Object.setPrototypeOf(this, View360Error.prototype);\n\n    this.name = \"View360Error\";\n    this.code = code;\n  }\n}\n\nexport default View360Error;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * Error codes of {@link View360Error}\n * @ko {@link View360Error}가 가질 수 있는 에러 코드 값들\n * @since 4.0.0\n */\nexport const ERROR_CODES = {\n  /**\n   * The given value's type is not expected\n   * @ko 주어진 값의 타입이 잘못되었을 경우\n   * @since 4.0.0\n   */\n  WRONG_TYPE: 0,\n  /**\n   * The given value is not a supported option\n   * @ko 잘못된 옵션을 받았을 경우\n   * @since 4.0.0\n   */\n  WRONG_OPTION: 1,\n  /**\n   * The element with given CSS selector does not exist\n   * @ko 주어진 CSS 셀렉터로 엘리먼트를 찾지 못했을 경우\n   * @since 4.0.0\n   */\n  ELEMENT_NOT_FOUND: 2,\n  /**\n   * Couldn't find canvas element inside the given container element.\n   * @ko 컨테이너 엘리먼트 내부에서 캔버스 엘리먼트를 찾지 못했을 경우\n   * @since 4.0.0\n   */\n  CANVAS_NOT_FOUND: 3,\n  /**\n   * The browser does not support WebGL\n   * @ko 브라우저가 WebGL을 지원하지 않는 경우\n   * @since 4.0.0\n   */\n  WEBGL_NOT_SUPPORTED: 4,\n  /**\n   * Failed creating canvas 2D context\n   * @ko 캔버스 2D 컨텍스트를 생성하지 못한 경우\n   * @since 4.0.0\n   */\n  FAILED_CREATE_CONTEXT_2D: 5,\n  /**\n   * `init()` is called before setting {@link View360Options#projection}\n   * @ko {@link View360Options#projection}을 설정하기 전에 `init()`이 호출된 경우\n   * @since 4.0.0\n   */\n  PROVIDE_PROJECTION_FIRST: 6,\n  /**\n   * Failed linking WebGL program. Only can be thrown when {@link View360Options#debug} is `true`.\n   * @ko WebGL 프로그램 링크에 실패한 경우. {@link View360Options#debug}를 `true`로 설정한 경우에만 발생할 수 있습니다.\n   * @since 4.0.0\n   */\n  FAILED_LINKING_PROGRAM: 7,\n  /**\n   * Arguments are not sufficient for the given property.\n   * @ko 프로퍼티에 값이 충분히 주어지지 않았을 때\n   * @since 4.0.0\n   */\n  INSUFFICIENT_ARGS: 8\n} as const;\n\nexport const MESSAGES = {\n  WRONG_TYPE: (val: any, types: string[]) => `${typeof val} is not a ${types.map(type => `\"${type}\"`).join(\" or \")}.`,\n  WRONG_OPTION: (val: any, optionName: string) => `Bad option: given \"${val}\" for option \"${optionName}\".`,\n  ELEMENT_NOT_FOUND: (query: string) => `Element with selector \"${query}\" not found.`,\n  CANVAS_NOT_FOUND: \"The canvas element was not found inside the given root element.\",\n  WEBGL_NOT_SUPPORTED: \"WebGL is not supported on this browser.\",\n  FAILED_CREATE_CONTEXT_2D: \"Failed to create canvas 2D context\",\n  PROVIDE_PROJECTION_FIRST: \"\\\"projection\\\" should be provided before initialization.\",\n  FAILED_LINKING_PROGRAM: (msg: string | null, shaderLog: string | null) => `Failed linking WebGL program - \"${msg}\\nShader compile Log: ${shaderLog}`,\n  INSUFFICIENT_ARGS: (val: any, name: string) => `Insufficient arguments: given \"${val}\" for \"${name}\".`\n};\n\nexport default {\n  CODES: ERROR_CODES,\n  MESSAGES\n};\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nexport const EVENTS = {\n  MOUSE_DOWN: \"mousedown\",\n  MOUSE_MOVE: \"mousemove\",\n  MOUSE_UP: \"mouseup\",\n  TOUCH_START: \"touchstart\",\n  TOUCH_MOVE: \"touchmove\",\n  TOUCH_END: \"touchend\",\n  WHEEL: \"wheel\",\n  RESIZE: \"resize\",\n  CONTEXT_MENU: \"contextmenu\",\n  MOUSE_ENTER: \"mouseenter\",\n  MOUSE_LEAVE: \"mouseleave\",\n  POINTER_DOWN: \"pointerdown\",\n  POINTER_MOVE: \"pointermove\",\n  POINTER_UP: \"pointerup\",\n  POINTER_CANCEL: \"pointercancel\",\n  POINTER_ENTER: \"pointerenter\",\n  POINTER_LEAVE: \"pointerleave\",\n  KEY_DOWN: \"keydown\",\n  KEY_UP: \"keyup\",\n  LOAD: \"load\",\n  ERROR: \"error\",\n  CLICK: \"click\",\n  DOUBLE_CLICK: \"dblclick\",\n  CONTEXT_CREATE_ERROR: \"webglcontextcreationerror\",\n  CONTEXT_LOST: \"webglcontextlost\",\n  CONTEXT_RESTORED: \"webglcontextrestored\",\n  DEVICE_ORIENTATION: \"deviceorientation\",\n  DEVICE_MOTION: \"devicemotion\",\n  ORIENTATION_CHANGE: \"orientationchange\",\n  VIDEO_PLAY: \"play\",\n  VIDEO_PAUSE: \"pause\",\n  VIDEO_LOADED_DATA: \"loadeddata\",\n  VIDEO_VOLUME_CHANGE: \"volumechange\",\n  VIDEO_TIME_UPDATE: \"timeupdate\",\n  VIDEO_DURATION_CHANGE: \"durationchange\",\n  VIDEO_CAN_PLAYTHROUGH: \"canplaythrough\",\n  TRANSITION_END: \"transitionend\",\n  XR_END: \"end\"\n} as const;\n\nexport const EL_DIV = \"div\";\nexport const EL_BUTTON = \"button\";\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\nexport enum MOUSE_BUTTON {\n  LEFT,\n  MIDDLE,\n  RIGHT\n}\n\nexport const CURSOR = {\n  GRAB: \"grab\",\n  GRABBING: \"grabbing\",\n  NONE: \"\"\n} as const;\n\nexport const KEY_DIRECTION = [\"LEFT\", \"UP\", \"RIGHT\", \"DOWN\"] as const;\nexport enum DIRECTION_KEY_CODE {\n  LEFT = 37,\n  UP = 38,\n  RIGHT = 39,\n  DOWN = 40\n}\nexport const SPACE_KEY_CODE = 32;\n\nexport const DIRECTION_KEY_NAME = {\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\"\n} as const;\nexport const SPACE_KEY_NAME = \" \";\n\nexport const FULLSCREEN_REQUEST = [\n  \"requestFullscreen\",\n  \"webkitRequestFullscreen\",\n  \"webkitRequestFullScreen\",\n  \"webkitCancelFullScreen\",\n  \"mozRequestFullScreen\",\n  \"msRequestFullscreen\"\n];\n\nexport const FULLSCREEN_ELEMENT = [\n  \"fullscreenElement\",\n  \"webkitFullscreenElement\",\n  \"webkitCurrentFullScreenElement\",\n  \"mozFullScreenElement\",\n  \"msFullscreenElement\"\n];\n\nexport const FULLSCREEN_EXIT = [\n  \"exitFullscreen\",\n  \"webkitExitFullscreen\",\n  \"webkitCancelFullScreen\",\n  \"mozCancelFullScreen\",\n  \"msExitFullscreen\"\n];\n\nexport const FULLSCREEN_CHANGE = [\n  \"fullscreenchange\",\n  \"webkitfullscreenchange\",\n  \"mozfullscreenchange\",\n  \"MSFullscreenChange\"\n];\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nexport { ERROR_CODES } from \"./error\";\n\n/**\n * Default class names\n * @ko 기본 클래스 이름들\n * @since 4.0.0\n */\nexport const DEFAULT_CLASS = {\n  CONTAINER: \"view360-container\",\n  CANVAS: \"view360-canvas\",\n  CTX_LOST: \"view360-ctx-lost\",\n  IN_VR: \"view360-vr-presenting\",\n  HOTSPOT_CONTAINER: \"view360-hotspots\",\n  HOTSPOT: \"view360-hotspot\",\n  HOTSPOT_VISIBLE: \"view360-hotspot-visible\",\n  HOTSPOT_FLIP_X: \"view360-hotspot-flip-x\",\n  HOTSPOT_FLIP_Y: \"view360-hotspot-flip-y\",\n} as const;\n\n/**\n * Event names\n * @ko 이벤트 이름들\n * @since 4.0.0\n * @example\n * ```ts\n * import View360, { EVENTS } from \"@egjs/view360\";\n *\n * const viewer = new View360(\"#el_id\");\n *\n * viewer.on(EVENTS.READY, evt => {\n *   console.log(\"View360 is ready!\");\n * });\n * ```\n */\nexport const EVENTS = {\n  READY: \"ready\",\n  LOAD_START: \"loadStart\",\n  LOAD: \"load\",\n  PROJECTION_CHANGE: \"projectionChange\",\n  RESIZE: \"resize\",\n  BEFORE_RENDER: \"beforeRender\",\n  RENDER: \"render\",\n  INPUT_START: \"inputStart\",\n  INPUT_END: \"inputEnd\",\n  VIEW_CHANGE: \"viewChange\",\n  STATIC_CLICK: \"staticClick\",\n  VR_START: \"vrStart\",\n  VR_END: \"vrEnd\"\n} as const;\n\n/**\n * Collection of predefined easing functions\n * @ko 미리 정의된 easing 함수들\n */\nexport const EASING = {\n  LINEAR: (x: number) => x,\n  SINE_WAVE: (x: number) => Math.sin(x * Math.PI * 2),\n  EASE_OUT_CUBIC: (x: number) => 1 - Math.pow(1 - x, 3),\n  EASE_OUT_BOUNCE: (x: number): number => {\n    const n1 = 7.5625;\n    const d1 = 2.75;\n\n    if (x < 1 / d1) {\n      return n1 * x * x;\n    } else if (x < 2 / d1) {\n      return n1 * (x -= 1.5 / d1) * x + 0.75;\n    } else if (x < 2.5 / d1) {\n      return n1 * (x -= 2.25 / d1) * x + 0.9375;\n    } else {\n      return n1 * (x -= 2.625 / d1) * x + 0.984375;\n    }\n  }\n} as const;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { EASING } from \"./external\";\nimport { Range } from \"../type/utils\";\n\nexport const CAMERA_EVENTS = {\n  CHANGE: \"change\",\n  ANIMATION_END: \"animationEnd\"\n} as const;\n\nexport const CONTROL_EVENTS = {\n  INPUT_START: \"inputStart\",\n  CHANGE: \"change\",\n  INPUT_END: \"inputEnd\",\n  ENABLE: \"enable\",\n  DISABLE: \"disable\",\n  STATIC_CLICK: \"staticClick\"\n} as const;\n\nexport const DEG_TO_RAD = Math.PI / 180;\nexport const RAD_TO_DEG = 180 / Math.PI;\nexport const DEFAULT_EASING = EASING.EASE_OUT_CUBIC;\nexport const DEFAULT_ANIMATION_DURATION = 300;\nexport const INFINITE_RANGE: Readonly<Range> = {\n  min: -Infinity, max: Infinity\n} as const;\nexport const DEFAULT_PITCH_RANGE: Readonly<Range> = {\n  min: -90, max: 90\n} as const;\nexport const DEFAULT_ZOOM_RANGE: Readonly<Range> = {\n  min: 0.6, max: 10\n} as const;\n\nexport enum ROTATE {\n  ZERO,\n  CW_90,\n  CCW_90,\n  CW_180\n}\n\n// Custom event name for video time change\nexport const VIDEO_TIME_CHANGE_EVENT = \"view360videotimechange\";\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const SESSION_VR = \"immersive-vr\";\nexport const XR_REFERENCE_SPACE = \"local\";\n\nexport const EPSILON = Number.EPSILON ?? 2.220446049250313e-16;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { quat, vec3 } from \"gl-matrix\";\nimport View360Error from \"./core/View360Error\";\nimport ERROR from \"./const/error\";\nimport * as BROWSER from \"./const/browser\";\nimport { DEG_TO_RAD, RAD_TO_DEG } from \"./const/internal\";\nimport { NoBoolean } from \"./type/utils\";\n\nexport const isString = (val: any): val is string => typeof val === \"string\";\nexport const isElement = (val: any): val is Element => !!val && val.nodeType === Node.ELEMENT_NODE;\n\nexport const createElement = (className: string, tag = BROWSER.EL_DIV) => {\n  const el = document.createElement(tag);\n\n  el.classList.add(className);\n\n  return el;\n};\n\nexport const getNullableElement = (el: HTMLElement | string | null, parent?: HTMLElement): HTMLElement | null => {\n  let targetEl: HTMLElement | null = null;\n\n  if (isString(el)) {\n    const parentEl = parent ? parent : document;\n    const queryResult = parentEl.querySelector(el);\n\n    if (!queryResult) {\n      return null;\n    }\n\n    targetEl = queryResult as HTMLElement;\n  } else if (isElement(el)) {\n    targetEl = el;\n  }\n\n  return targetEl;\n};\n\nexport const getElement = (el: HTMLElement | string, parent?: HTMLElement): HTMLElement => {\n  const targetEl = getNullableElement(el, parent);\n\n  if (!targetEl) {\n    if (isString(el)) {\n      throw new View360Error(ERROR.MESSAGES.ELEMENT_NOT_FOUND(el), ERROR.CODES.ELEMENT_NOT_FOUND);\n    } else {\n      throw new View360Error(ERROR.MESSAGES.WRONG_TYPE(el, [\"HTMLElement\", \"string\"]), ERROR.CODES.WRONG_TYPE);\n    }\n  }\n\n  return targetEl;\n};\n\nexport const findCanvas = (root: HTMLElement, selector: string): HTMLCanvasElement => {\n  const canvas = root.querySelector(selector) as HTMLCanvasElement;\n\n  if (!canvas) {\n    throw new View360Error(ERROR.MESSAGES.CANVAS_NOT_FOUND, ERROR.CODES.CANVAS_NOT_FOUND);\n  }\n\n  return canvas;\n};\n\nexport const range = (end: number): number[] => {\n  if (!end || end <= 0) {\n    return [];\n  }\n\n  return Array.apply(0, Array(end)).map((undef, idx) => idx);\n};\n\nexport const clamp = (x: number, min: number, max: number) => Math.max(Math.min(x, max), min);\n\n// Linear interpolation between a and b\nexport const lerp = (a: number, b: number, t: number) => {\n  return a * (1 - t) + b * t;\n};\n\nexport const circulate = (val: number, min: number, max: number) => {\n  const size = Math.abs(max - min);\n\n  if (val < min) {\n    const offset = (min - val) % size;\n    val = max - offset;\n  } else if (val > max) {\n    const offset = (val - max) % size;\n    val = min + offset;\n  }\n\n  return val;\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const merge = (target: object, ...srcs: object[]): object => {\n  srcs.forEach(source => {\n    Object.keys(source).forEach(key => {\n      const value = source[key];\n      if (Array.isArray(target[key]) && Array.isArray(value)) {\n        target[key] = [...target[key], ...value];\n      } else {\n        target[key] = value;\n      }\n    });\n  });\n\n  return target;\n};\n\nexport const findIndex = <T>(array: T[], checker: (val: T) => boolean): number => {\n  for (let idx = 0; idx < array.length; idx++) {\n    if (checker(array[idx])) {\n      return idx;\n    }\n  }\n\n  return -1;\n};\n\nexport const getObjectOption = <T extends boolean | Partial<object>>(val?: T): NoBoolean<T> => typeof val === \"object\" ? val : {} as any;\nexport const toVerticalFov = (fovRadian: number, aspect: number) => {\n  return Math.atan(Math.tan(fovRadian * 0.5) / aspect) * 2;\n};\n\nexport const reorderCube = <T>(arr: T[], order: string, defaultOrder = \"RLUDFB\"): T[] => {\n  return defaultOrder.split(\"\")\n    .map(face => order.indexOf(face))\n    .map(index => arr[index]);\n};\n\nexport const isFullscreen = () => {\n  if (!document) return false;\n\n  for (const key of BROWSER.FULLSCREEN_ELEMENT) {\n    if (document[key]) return true;\n  }\n\n  return false;\n};\n\nexport const sensorCanBeEnabledIOS = () => {\n  return !!DeviceMotionEvent && \"requestPermission\" in DeviceMotionEvent && window.isSecureContext;\n};\n\nexport const hfovToZoom = (baseFov: number, fov: number) => {\n  const renderingWidth = Math.tan(DEG_TO_RAD * baseFov * 0.5);\n  const zoomedWidth = Math.tan(DEG_TO_RAD * fov * 0.5);\n\n  return renderingWidth / zoomedWidth;\n};\n\nexport const eulerToQuat = (out: quat, yaw: number, pitch: number, roll: number): quat => {\n  quat.identity(out);\n\n  const pitchThreshold = 0.01;\n  const pitchClamped = clamp(pitch, -90 + pitchThreshold, 90 - pitchThreshold);\n\n  quat.rotateY(out, out, yaw * DEG_TO_RAD);\n  quat.rotateX(out, out, pitchClamped * DEG_TO_RAD);\n  quat.rotateZ(out, out, roll * DEG_TO_RAD);\n\n  return out;\n};\n\n/**\n * Extract euler angles from the quaternion, except roll(z-axis rotation)\n * @hidden\n */\nexport const quatToEuler = (quaternion: quat) => {\n  const x = quaternion[0];\n  const y = quaternion[1];\n  const z = quaternion[2];\n  const w = quaternion[3];\n  const x2 = x * x;\n  const y2 = y * y;\n  const z2 = z * z;\n  const w2 = w * w;\n\n  const unit = x2 + y2 + z2 + w2;\n  const test = x * w - y * z;\n\n  let pitch: number, yaw: number;\n\n  if (test > 0.499995 * unit) {\n    // singularity at the north pole\n    pitch = Math.PI / 2;\n    yaw = 2 * Math.atan2(y, x);\n  } else if (test < -0.499995 * unit) {\n    // singularity at the south pole\n    pitch = -Math.PI / 2;\n    yaw = -2 * Math.atan2(y, x);\n  } else {\n    const view = vec3.fromValues(0, 0, 1);\n    const up = vec3.fromValues(0, 1, 0);\n\n    vec3.transformQuat(view, view, quaternion);\n    vec3.transformQuat(up, up, quaternion);\n\n    const viewXZ = Math.sqrt(view[0] * view[0] + view[2] * view[2]);\n\n    pitch = Math.atan2(-view[1], viewXZ);\n    yaw = Math.atan2(view[0], view[2]);\n  }\n\n  return {\n    pitch: clamp(pitch * RAD_TO_DEG, -90, 90),\n    yaw: circulate(yaw * RAD_TO_DEG, 0, 360)\n  };\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport { clamp, lerp, circulate } from \"../utils\";\nimport { Range } from \"../type/utils\";\nimport { DEFAULT_ANIMATION_DURATION, DEFAULT_EASING } from \"../const/internal\";\n\n/**\n * Interpolator between two values with duration\n * @ko 특정 시간동안 두 값을 보간해주는 보간기\n * @since 4.0.0\n */\nclass Motion {\n  // Options\n  private _duration: number;\n  private _loop: boolean;\n  private _range: Range;\n  private _easing: (x: number) => number;\n\n  // Internal states\n  private _progress: number;\n  private _val: number;\n  private _start: number;\n  private _end: number;\n  private _activated: boolean;\n\n  /**\n   * Current interpolated value\n   * @ko 현재 보간된 값\n   * @since 4.0.0\n   */\n  public get val() { return this._val; }\n  /**\n   * Start(from) value of interpolation\n   * @ko 보간 시작 값\n   * @since 4.0.0\n   */\n  public get start() { return this._start; }\n  /**\n   * End(to) value of interpolation\n   * @ko 보간 끝 값\n   * @since 4.0.0\n   */\n  public get end() { return this._end; }\n  /**\n   * Interpolation progress value (0 ~ 1)\n   * @ko 현재 보간 진행정도 (0 ~ 1)\n   * @since 4.0.0\n   */\n  public get progress() { return this._progress; }\n  /**\n   * Whether the interpolation is in active state.\n   * @ko 보간 진행중인지 여부. `true`일 경우 보간이 진행중입니다.\n   * @since 4.0.0\n   */\n  public get activated() { return this._activated; }\n\n  /**\n   * Duration of the interpolation\n   * @ko 보간할 시간\n   * @since 4.0.0\n   */\n  public get duration() { return this._duration; }\n  public set duration(val: number) { this._duration = val; }\n\n  /**\n   * Whether to loop interpolation on finish\n   * @ko 보간이 끝난 이후에 다시 시작할지 여부\n   * @since 4.0.0\n   */\n  public get loop() { return this._loop; }\n  public set loop(val: boolean) { this._loop = val; }\n\n  /**\n   * Range of the interpolation\n   * @ko 보간 범위\n   * @since 4.0.0\n   */\n  public get range() { return this._range; }\n\n  /**\n   * Easing function of the interpolation\n   * @ko 보간에 사용되는 easing function\n   * @since 4.0.0\n   */\n  public get easing() { return this._easing; }\n  public set easing(val: (x: number) => number) { this._easing = val; }\n\n  /**\n   * Create new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options Options {@ko 옵션들}\n   * @param options.duration Duration of the interpolation {@ko 보간할 시간}\n   * @param options.loop Whether to loop interpolation on finish {@ko 보간이 끝난 이후에 다시 시작할지 여부}\n   * @param options.range Range of the interpolation {@ko 보간 범위}\n   * @param options.loop Easing function of the interpolation {@ko 보간에 사용되는 easing function}\n   */\n  public constructor({\n    duration = DEFAULT_ANIMATION_DURATION,\n    loop = false,\n    range = { min: 0, max: 1 },\n    easing = DEFAULT_EASING\n  } = {}) {\n    this._duration = duration;\n    this._loop = loop;\n    this._range = range;\n    this._easing = easing;\n    this._activated = false;\n    this.reset(0);\n  }\n\n  /**\n   * Update motion and progress it by given deltaTime\n   * @ko 주어진 deltaTime만큼 보간을 진행합니다.\n   * @param deltaTime - number of milisec to update motion {@ko 보간을 진행할 시간, 밀리초 단위}\n   * @returns Difference(delta) of the value from the last update. {@ko 지난 업데이트 이후의 값 변화량}\n   * @since 4.0.0\n   */\n  public update(deltaTime: number): number {\n    if (!this._activated) {\n      this._val = this._end;\n      return 0;\n    }\n\n    const start = this._start;\n    const end = this._end;\n    const duration = this._duration;\n    const prev = this._val;\n    const loop = this._loop;\n\n    const nextProgress = this._progress + deltaTime / duration;\n\n    this._progress = loop\n      ? circulate(nextProgress, 0, 1)\n      : clamp(nextProgress, 0, 1);\n\n    const easedProgress = this._easing(this._progress);\n    this._val = lerp(start, end, easedProgress);\n\n    if (!loop && this._progress >= 1) {\n      this._activated = false;\n    }\n\n    return this._val - prev;\n  }\n\n  /**\n   * Set `start`, `end` to the given value and set `progress` to 0.\n   * @ko 주어진 값으로 시작 지점, 끝 지점을 초기화하고 progress를 0으로 세팅합니다.\n   * @param defaultVal - Value to reset {@ko 초기화할 값}\n   * @since 4.0.0\n   */\n  public reset(defaultVal: number): void {\n    const range = this._range;\n    const val = clamp(defaultVal, range.min, range.max);\n    this._start = val;\n    this._end = val;\n    this._val = val;\n    this._progress = 0;\n    this._activated = false;\n  }\n\n  /**\n   * Add delta to start & end and current value.\n   * @ko 현재 & 끝 및 현재 값에 주어진 값을 더합니다.\n   * @param delta - Delta value to add {@ko 추가할 값}\n   */\n  public add(delta: number) {\n    const range = this._range;\n\n    this._start = clamp(this._start + delta, range.min, range.max);\n    this._end = clamp(this._end + delta, range.min, range.max);\n    this._val = clamp(this._val + delta, range.min, range.max);\n  }\n\n  /**\n   * Set current value to start, and end to current value + delta, then reset progress to 0.\n   * @ko 현재 값을 시작 지점으로, 그에서 delta만큼 추가된 값을 끝점으로 하고 progress를 0으로 갱신합니다.\n   * @param delta - Delta value to add {@ko 추가할 값}\n   */\n  public setNewEndByDelta(delta: number): void {\n    const range = this._range;\n\n    this._start = this._val;\n    this._end = clamp(this._end + delta, range.min, range.max);\n    this._progress = 0;\n    this._activated = true;\n  }\n\n  /**\n   * Set new range of the interpolation.\n   * @ko 보간의 범위를 변경합니다.\n   * @param min - New minimum range {@ko 변경할 범위의 최소값}\n   * @param max - New maximum range {@ko 변경할 범위의 최대값}\n   */\n  public setRange(min: number, max: number) {\n    this._start = clamp(this._start, min, max);\n    this._end = clamp(this._end, min, max);\n    this._range = { min, max };\n  }\n}\n\nexport default Motion;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { quat } from \"gl-matrix\";\nimport Camera from \"./Camera\";\nimport Motion from \"./Motion\";\nimport { DEFAULT_ANIMATION_DURATION, DEFAULT_EASING } from \"../const/internal\";\nimport { lerp } from \"../utils\";\n\ntype CameraPose = {\n  rotation: quat;\n  zoom: number;\n}\n\n/**\n * Animation of the {@link Camera}\n * @internal\n * @ko {@link Camera}의 애니메이션\n * @since 4.0.0\n */\nclass CameraAnimation {\n  // Options\n  private _camera: Camera;\n  private _from: CameraPose;\n  private _to: CameraPose;\n\n  // Internal values\n  private _motion: Motion;\n  private _finishPromise: Promise<void>;\n  private _finish: () => void;\n\n  /**\n   * Duration of the animation\n   * @ko 애니메이션 재생시간\n   * @since 4.0.0\n   */\n  public get duration() { return this._motion.duration; }\n  public set duration(val: number) { this._motion.duration = val; }\n  /**\n   * Easing function of the animation\n   * @ko 애니메이션의 easing function\n   * @since 4.0.0\n   */\n  public get easing() { return this._motion.easing; }\n  public set easing(val: (x: number) => number) { this._motion.easing = val; }\n\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param camera - Camera to animate {@ko 애니메이션을 적용할 카메라}\n   * @param from - Start pose {@ko 애니메이션이 시작 시점의 카메라의 회전 및 줌}\n   * @param to - End pose {@ko 애니메이션이 끝났을 때 카메라의 회전 및 줌}\n   * @param options - Options {@ko 옵션들}\n   * @param options.duration - Animation duration {@ko 애니메이션 재생 시간}\n   * @param options.easing - Animation easing function {@ko 애니메이션 easing function}\n   */\n  public constructor(camera: Camera, from: CameraPose, to: CameraPose, {\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING\n  } = {}) {\n    this._camera = camera;\n    this._motion = new Motion({ duration, easing, range: { min: 0, max: 1 } });\n    this._from = from;\n    this._to = to;\n    this._finishPromise = new Promise(resolve => {\n      this._finish = resolve as () => void;\n    });\n\n    // Enable motion\n    this._motion.setNewEndByDelta(1);\n  }\n\n  /**\n   * Return a promise that resolved on animation end.\n   * @ko 애니메이션 재생이 끝났을 때 resolve되는 Promise를 반환합니다.\n   * @since 4.0.0\n   */\n  public getFinishPromise() {\n    return this._finishPromise;\n  }\n\n  /**\n   * Update animation by given deltaTime.\n   * @ko 주어진 시간만큼 애니메이션을 업데이트합니다.\n   * @param deltaTime Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\n   * @since 4.0.0\n   */\n  public update(deltaTime: number): void {\n    const camera = this._camera;\n    const from = this._from;\n    const to = this._to;\n    const motion = this._motion;\n    motion.update(deltaTime);\n\n    // Progress that easing is applied\n    const progress = motion.val;\n    const rotation = quat.create();\n    const zoom = lerp(from.zoom, to.zoom, progress);\n\n    quat.slerp(rotation, from.rotation, to.rotation, progress);\n    camera.rotate(rotation, zoom);\n\n    if (progress >= 1) {\n      this._finish();\n    }\n  }\n}\n\nexport default CameraAnimation;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport { mat4, quat, vec3 } from \"gl-matrix\";\nimport CameraAnimation from \"./CameraAnimation\";\nimport {\n  CAMERA_EVENTS,\n  DEG_TO_RAD,\n  INFINITE_RANGE,\n  DEFAULT_PITCH_RANGE,\n  RAD_TO_DEG,\n  DEFAULT_ZOOM_RANGE,\n  DEFAULT_EASING,\n  EPSILON\n} from \"../const/internal\";\nimport {\n  circulate,\n  clamp,\n  eulerToQuat,\n  quatToEuler,\n  toVerticalFov\n} from \"../utils\";\nimport { Range } from \"../type/utils\";\n\n/**\n * Events that {@link Camera} can trigger\n * @ko {@link Camera}가 트리거할 수 있는 이벤트들\n * @since 4.0.0\n */\nexport interface CameraEvents {\n  /**\n   * An event that fires when camera's animation stops\n   * @ko 카메라 애니메이션이 멈췄을 때 트리거되는 이벤트\n   * @eventName animationEnd\n   * @eventOf Camera\n   * @version 4.0.0\n   */\n  [CAMERA_EVENTS.ANIMATION_END]: {\n    animation: CameraAnimation\n  };\n}\n\n/**\n * Options for {@link Camera}\n * @ko {@link Camera}용 옵션들\n * @since 4.0.0\n */\nexport interface CameraOptions {\n  /**\n   * @copy View360#initialYaw\n   */\n  initialYaw: number;\n  /**\n   * @copy View360#initialPitch\n   */\n  initialPitch: number;\n  /**\n   * @copy View360#initialZoom\n   */\n  initialZoom: number;\n  /**\n   * @copy View360#yawRange\n   */\n  yawRange: Range | null;\n  /**\n   * @copy View360#pitchRange\n   */\n  pitchRange: Range | null;\n  /**\n   * @copy View360#zoomRange\n   */\n  zoomRange: Range | null;\n  /**\n   * @copy View360#fov\n   */\n  fov: number;\n}\n\n/**\n * Camera for View360\n * @ko View360용 카메라 구현체\n * @version 4.0.0\n */\nclass Camera extends Component<CameraEvents> {\n  /**\n   * Current yaw(y-axis rotation) value\n   * @ko 현재 yaw(y축 회전) 값\n   * @since 4.0.0\n   */\n  public yaw: number;\n  /**\n   * Current pitch(x-axis rotation) value\n   * @ko 현재 pitch(x축 회전) 값\n   * @since 4.0.0\n   */\n  public pitch: number;\n  /**\n   * Current zoom value\n   * @ko 현재 줌 값\n   * @since 4.0.0\n   */\n  public zoom: number;\n\n  /**\n   * @copy View360#initialYaw\n   */\n  public initialYaw: number;\n  /**\n   * @copy View360#initialPitch\n   */\n  public initialPitch: number;\n  /**\n   * @copy View360#initialPitch\n   */\n  public initialZoom: number;\n  /**\n   * @hidden\n   * TODO: Please add comment for this when `rollOffset` is added\n   */\n  public rollOffset: number;\n\n  /**\n   * Current camera quaternion\n   * @ko 현재 회전을 나타내는 quaternion 값\n   * @since 4.0.0\n   * @internal\n   */\n  public quaternion: quat;\n  /**\n   * Current camera position\n   * @ko 현재 카메라 위치 좌표\n   * @since 4.0.0\n   * @internal\n   */\n  public position: vec3;\n  /**\n   * Active camera animation, `null` if there isn't.\n   * @ko 현재 활성화된 카메라 애니메이션, 없을 경우 `null`값을 가집니다.\n   * @since 4.0.0\n   */\n  public animation: CameraAnimation | null;\n  /**\n   * Camera's view matrix\n   * @ko 카메라의 뷰 변환 행렬\n   * @internal\n   * @since 4.0.0\n   */\n  public viewMatrix: mat4;\n  /**\n   * Camera's projection matrix\n   * @ko 카메라의 프로젝션 변환 행렬\n   * @internal\n   * @since 4.0.0\n   */\n  public projectionMatrix: mat4;\n\n  /**\n   * Camera's horizontal FOV(Field of View) value\n   * @ko 카메라의 수평 FOV(Field of View) 값\n   * @internal\n   * @since 4.0.0\n   */\n  public fov: number;\n\n  private _initialYawRange: Range | null;\n  private _initialPitchRange: Range | null;\n  private _initialZoomRange: Range | null;\n\n  private _yawRange: Range | null;\n  private _pitchRange: Range | null;\n  private _zoomRange: Range | null;\n\n  private _up: vec3;\n  private _aspect: number;\n  private _changed: boolean;\n  private _maxRenderHeight: number;\n\n  /**\n   * Camera's width / height ratio\n   * @ko 카메라의 가로 / 세로 비율\n   * @readonly\n   */\n  public get aspect() { return this._aspect; }\n  /**\n   * Whether the camera's rotation changed from the last frame.\n   * @ko 마지막 프레임 이후로 카메라의 회전값이 변경되었는지 나타내는 플래그.\n   * @readonly\n   */\n  public get changed() { return this._changed; }\n  /**\n   * @copy View360#yawRange\n   */\n  public get yawRange() { return this._initialYawRange; }\n  public set yawRange(val: Range | null) {\n    this._initialYawRange = val;\n  }\n  /**\n   * @copy View360#pitchRange\n   */\n  public get pitchRange() { return this._initialPitchRange; }\n  public set pitchRange(val: Range | null) {\n    this._initialPitchRange = val;\n  }\n  /**\n   * @copy View360#zoomRange\n   */\n  public get zoomRange() { return this._initialZoomRange; }\n  public set zoomRange(val: Range | null) {\n    this._initialZoomRange = val;\n  }\n\n  /**\n   * Create new instance of Camera\n   * @param options - Camera options {@ko 카메라 옵션들}\n   */\n  public constructor({\n    initialYaw,\n    initialPitch,\n    initialZoom,\n    yawRange,\n    pitchRange,\n    zoomRange,\n    fov\n  }: CameraOptions) {\n    super();\n\n    this.yaw = initialYaw;\n    this.pitch = initialPitch;\n    this.zoom = initialZoom;\n    this.rollOffset = 0;\n\n    this.initialYaw = initialYaw;\n    this.initialPitch = initialPitch;\n    this.initialZoom = initialZoom;\n\n    this.position = vec3.create();\n    this.animation = null;\n\n    this._up = vec3.fromValues(0, 1, 0);\n    this._aspect = 1;\n\n    this._initialYawRange = yawRange;\n    this._initialPitchRange = pitchRange;\n    this._initialZoomRange = zoomRange;\n\n    this._yawRange = yawRange;\n    this._pitchRange = pitchRange;\n    this._zoomRange = zoomRange;\n\n    this.quaternion = quat.create();\n    this._updateQuaternion();\n\n    this.viewMatrix = mat4.create();\n    this.projectionMatrix = mat4.create();\n    this.fov = fov;\n\n    this._maxRenderHeight = -1;\n  }\n\n  /**\n   * Destroy instance and detach all event listeners\n   * @ko 인스턴스를 삭제하고 모든 이벤트 리스너를 삭제합니다.\n   * @since 4.0.0\n   */\n  public destroy() {\n    this.off();\n  }\n\n  /**\n   * Refresh internal size value.\n   * @ko 내부 크기값을 갱신합니다.\n   * @param width - New width {@ko 변경된 너비값}\n   * @param height - New height {@ko 변경된 높이값}\n   * @since 4.0.0\n   */\n  public resize(width: number, height: number) {\n    const prevAspect = this._aspect;\n\n    this._aspect = width / height;\n\n    if (this._aspect !== prevAspect) {\n      this.updateMatrix();\n    }\n  }\n\n  /**\n   * Change camera's rotation with euler values.\n   * @ko 카메라 회전을 오일러 각 방향으로 변경합니다.\n   * @param rotation - Rotation values {@ko 회전 값}\n   * @param rotation.yaw - yaw(y-axis rotation) to look at {@ko 바라볼 yaw(y축 회전) 값}\n   * @param rotation.pitch - pitch(x-axis rotation) to look at {@ko 바라볼 pitch(x축 회전) 값}\n   * @param rotation.zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\n   * @since 4.0.0\n   */\n  public lookAt({\n    yaw = this.yaw,\n    pitch = this.pitch,\n    zoom = this.zoom\n  }: Partial<{\n    yaw: number;\n    pitch: number;\n    zoom: number;\n  }>) {\n    const prevQuaternion = quat.clone(this.quaternion);\n    const prevZoom = this.zoom;\n\n    this.yaw = circulate(yaw, 0, 360);\n    this.pitch = clamp(pitch, -90, 90);\n    this.zoom = zoom;\n\n    this._updateQuaternion();\n\n    const zoomDiff = Math.abs(zoom - prevZoom);\n\n    if (\n      !quat.equals(this.quaternion, prevQuaternion)\n      || zoomDiff >= EPSILON * 10 // ignore small changes\n    ) {\n      this.updateMatrix();\n    }\n  }\n\n  /**\n   * Change camera's rotation with quaternion.\n   * @ko 카메라 회전을 Quaternion을 이용해서 변경합니다.\n   * @param rotation - Quaternion to apply {@ko 적용할 Quaternion}\n   * @param zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\n   * @since 4.0.0\n   */\n  public rotate(rotation: quat, zoom: number = this.zoom) {\n    const normalized = quat.normalize(quat.create(), rotation);\n    const isSameRotation = quat.equals(this.quaternion, normalized);\n    quat.copy(this.quaternion, normalized);\n\n    const prevZoom = this.zoom;\n    const { yaw, pitch } = quatToEuler(normalized);\n\n    this.yaw = yaw;\n    this.pitch = pitch;\n    this.zoom = zoom;\n\n    const zoomDiff = Math.abs(zoom - prevZoom);\n\n    if (!isSameRotation || zoomDiff >= EPSILON * 10) {\n      this.updateMatrix();\n    }\n  }\n\n  /**\n   * Change camera's rotation to given euler values by the given duration.\n   * @ko 카메라를 주어진 방향으로 주어진 시간동안 서서히 이동시킵니다.\n   * @param options - Animation parameters {@ko 애니메이션 패러미터}\n   * @param options.yaw - yaw(y-axis rotation) to look at {@ko 바라볼 yaw(y축 회전) 값}\n   * @param options.pitch - pitch(x-axis rotation) to look at {@ko 바라볼 pitch(x축 회전) 값}\n   * @param options.zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\n   * @param options.duration - Duration of the animation {@ko 애니메이션 시간}\n   * @param options.easing - Easing function for the animation {@ko 애니메이션에 적용할 easing function}\n   */\n  public async animateTo({\n    yaw = this.yaw,\n    pitch = this.pitch,\n    zoom = this.zoom,\n    duration = 0,\n    easing = DEFAULT_EASING\n  }: Partial<{\n    yaw: number;\n    pitch: number;\n    zoom: number;\n    duration: number;\n    easing: (x: number) => number;\n  }> = {}): Promise<void> {\n    if (\n      this.yaw === yaw\n      && this.pitch === pitch\n      && this.zoom === zoom\n    ) return;\n\n    const from = {\n      rotation: quat.clone(this.quaternion),\n      zoom: this.zoom\n    };\n    const to = {\n      rotation: eulerToQuat(quat.create(), yaw, pitch, this.rollOffset),\n      zoom\n    };\n\n    const animation = new CameraAnimation(this, from, to, {\n      duration,\n      easing\n    });\n    const finishPromise = animation.getFinishPromise();\n\n    this.animation = animation;\n    finishPromise.then(() => {\n      this.animation = null;\n      this.trigger(CAMERA_EVENTS.ANIMATION_END, { animation });\n    });\n\n    return finishPromise;\n  }\n\n  /**\n   * @hidden\n   */\n  public restrictYawRange(min: number, max: number) {\n    this._yawRange = { min, max };\n  }\n\n  /**\n   * @hidden\n   */\n  public restrictPitchRange(min: number, max: number) {\n    this._pitchRange = { min, max };\n  }\n\n  /**\n   * @hidden\n   */\n  public restrictZoomRange(min: number, max: number) {\n    this._zoomRange = { min, max };\n  }\n\n  /**\n   * @hidden\n   */\n  public restrictRenderHeight(height: number) {\n    this._maxRenderHeight = height;\n  }\n\n  /**\n   * @hidden\n   */\n  public resetRange() {\n    this._yawRange = this._initialYawRange;\n    this._pitchRange = this._initialPitchRange;\n    this._zoomRange = this._initialZoomRange;\n    this._maxRenderHeight = -1;\n  }\n\n  /**\n   * Get actual yaw range by the given zoom value.\n   * @ko 주어진 zoom 값에 대한 실제 yaw 범위값을 반환합니다.\n   * @since 4.0.0\n   */\n  public getYawRange(zoom: number) {\n    const yawLimit = this._yawRange;\n    const maxRenderHeight = this._maxRenderHeight;\n    if (!yawLimit) return INFINITE_RANGE;\n\n    const halfHFov = this.getHorizontalFov(zoom) * 0.5;\n    let minYaw = yawLimit.min;\n    let maxYaw = yawLimit.max;\n\n    if (maxRenderHeight > 0) {\n      const halfVFovRad = toVerticalFov(halfHFov * DEG_TO_RAD, this._aspect);\n      const h = maxRenderHeight * 0.5;\n      const t = Math.tan(halfVFovRad);\n      const d = Math.sqrt((1 + h * h) / (1 + t * t));\n      const theta = Math.atan(Math.tan(halfHFov * DEG_TO_RAD) * d) * RAD_TO_DEG;\n\n      minYaw = yawLimit.min + theta;\n      maxYaw = yawLimit.max - theta;\n    }\n\n    if (minYaw > maxYaw) {\n      minYaw = 0;\n      maxYaw = 0;\n    }\n\n    return {\n      min: minYaw,\n      max: maxYaw\n    };\n  }\n\n  /**\n   * Get actual pitch range by the given zoom value.\n   * @ko 주어진 zoom 값에 대한 실제 pitch 범위값을 반환합니다.\n   * @since 4.0.0\n   */\n  public getPitchRange(zoom: number) {\n    const pitchLimit = this._pitchRange;\n    const maxRenderHeight = this._maxRenderHeight;\n\n    if (!pitchLimit) return DEFAULT_PITCH_RANGE;\n\n    let minPitch = pitchLimit.min;\n    let maxPitch = pitchLimit.max;\n\n    if (maxRenderHeight > 0) {\n      const halfVFov = this.getVerticalFov(zoom) * 0.5;\n\n      minPitch = pitchLimit.min + halfVFov;\n      maxPitch = pitchLimit.max - halfVFov;\n    }\n\n    if (minPitch > maxPitch) {\n      minPitch = 0;\n      maxPitch = 0;\n    }\n\n    return {\n      min: Math.max(minPitch, -90),\n      max: Math.min(maxPitch, 90)\n    };\n  }\n\n  /**\n   * Get actual zoom range in fov degrees.\n   * @ko 실제 줌 범위를 fov각의 범위로 반환합니다.\n   * @since 4.0.0\n   */\n  public getZoomRange() {\n    const limit = this._zoomRange ?? DEFAULT_ZOOM_RANGE;\n\n    // max (zoom in) -> minimum fov\n    const minFov = this.getHorizontalFov(limit.max);\n    const maxFov = this.getHorizontalFov(limit.min);\n    const currentFov = this.getHorizontalFov(this.zoom);\n\n    return {\n      min: Math.max(minFov, 1),\n      max: Math.min(maxFov, 180),\n      current: currentFov\n    };\n  }\n\n  /**\n   * Return horizontal fov value when the given zoom is applied. (in degrees, °)\n   * @ko 주어진 zoom 값이 적용되었을 때의 수평 fov값을 반환합니다. (도 단위, °)\n   * @returns Zoomed horizontal FOV {@ko 줌이 적용된 수평 fov값}\n   * @since 4.0.0\n   */\n  public getHorizontalFov(zoom = this.zoom) {\n    return this._getZoomedHorizontalFov(zoom) * RAD_TO_DEG;\n  }\n\n  /**\n   * Return vertical fov value when the given zoom is applied. (in degrees, °)\n   * @ko 주어진 zoom 값이 적용되었을 때의 수직 fov값을 반환합니다. (도 단위, °)\n   * @returns Zoomed vertical FOV {@ko 줌이 적용된 수직 fov값}\n   * @since 4.0.0\n   */\n  public getVerticalFov(zoom = this.zoom) {\n    const aspect = this._aspect;\n    const hFov = this._getZoomedHorizontalFov(zoom); // In radians\n    const vFov = toVerticalFov(hFov, aspect);\n\n    return vFov * RAD_TO_DEG;\n  }\n\n  /**\n   * Calculate zoom value for the given fov.\n   * @ko 주어진 fov값을 zoom값으로 변환합니다.\n   * @param fov horizontal fov (in degrees, °) {@ko 수평 fov 값 (도 단위, °)}\n   * @since 4.0.0\n   */\n  public fovToZoom(fov: number) {\n    const baseFov = this.fov;\n    const renderingWidth = Math.tan(DEG_TO_RAD * baseFov * 0.5);\n    const zoomedWidth = Math.tan(DEG_TO_RAD * fov * 0.5);\n\n    return renderingWidth / zoomedWidth;\n  }\n\n  /**\n   * Update inner matrixes.\n   * @ko 내부 행렬들을 업데이트합니다.\n   * @internal\n   * @since 4.0.0\n   */\n  public updateMatrix() {\n    const up = this._up;\n    const aspect = this._aspect;\n    const viewMatrix = this.viewMatrix;\n    const projMatrix = this.projectionMatrix;\n    const position = this.position;\n    const rotation = this.quaternion;\n\n    const upDir = vec3.create();\n    const viewDir = vec3.fromValues(0, 0, -1);\n    vec3.transformQuat(viewDir, viewDir, rotation);\n    vec3.transformQuat(upDir, up, rotation);\n\n    const hFov = this._getZoomedHorizontalFov(); // In radians\n    const vFov = toVerticalFov(hFov, aspect);\n\n    mat4.lookAt(viewMatrix, position, viewDir, upDir);\n    mat4.perspective(projMatrix, vFov, aspect, 0.1, 100);\n\n    this._changed = true;\n  }\n\n  /**\n   * @hidden\n   */\n  public onFrameRender() {\n    this._changed = false;\n  }\n\n  private _updateQuaternion() {\n    eulerToQuat(this.quaternion, this.yaw, this.pitch, this.rollOffset);\n  }\n\n  /**\n   * @param zoom Current zoom value\n   * @returns horizontal fov including zoom, in radian\n   */\n  private _getZoomedHorizontalFov(zoom = this.zoom) {\n    return 2 * Math.atan(Math.tan(DEG_TO_RAD * this.fov * 0.5) / zoom);\n  }\n}\n\nexport default Camera;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\n\nclass MouseInput extends Component<InputEvents<{ x: number, y: number }, MouseEvent>> {\n  private _el: HTMLElement | null;\n  private _prevPos: [number, number];\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._prevPos = [0, 0];\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.MOUSE_DOWN, this._onMouseDown);\n\n    this._el = element;\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.MOUSE_DOWN, this._onMouseDown);\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this._el = null;\n  }\n\n  private _onMouseDown = (evt: MouseEvent) => {\n    const el = this._el;\n    if (!el || evt.button !== BROWSER.MOUSE_BUTTON.LEFT) return;\n\n    evt.preventDefault();\n\n    if (el.focus) {\n      el.focus();\n    } else {\n      window.focus();\n    }\n\n    this._prevPos[0] = evt.clientX;\n    this._prevPos[1] = evt.clientY;\n\n    window.addEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.addEventListener(BROWSER.EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this.trigger(CONTROL_EVENTS.INPUT_START, {\n      srcEvent: evt,\n      isTouch: false,\n      isKeyboard: false\n    });\n  }\n\n  private _onMouseMove = (evt: MouseEvent) => {\n    evt.preventDefault();\n\n    const x = evt.clientX;\n    const y = evt.clientY;\n    const prevPos = this._prevPos;\n    const deltaX = x - prevPos[0];\n    const deltaY = y - prevPos[1];\n\n    this.trigger(CONTROL_EVENTS.CHANGE, {\n      delta: {\n        x: deltaX,\n        y: deltaY\n      },\n      isTouch: false,\n      isKeyboard: false\n    });\n\n    prevPos[0] = x;\n    prevPos[1] = y;\n  }\n\n  private _onMouseUp = () => {\n    this._prevPos[0] = 0;\n    this._prevPos[1] = 0;\n\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this.trigger(CONTROL_EVENTS.INPUT_END, {\n      isTouch: false,\n      isKeyboard: false,\n      scrolling: false\n    });\n  }\n}\n\nexport default MouseInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\nimport { isFullscreen } from \"../../utils\";\n\nclass TouchInput extends Component<InputEvents<{ x: number, y: number }, TouchEvent>> {\n  private _el: HTMLElement | null;\n  private _prevPos: [number, number];\n  private _isFirstTouch: boolean;\n  private _scrolling: boolean;\n  private _scrollable: boolean;\n\n  public get scrollable() { return this._scrollable; }\n  public set scrollable(val: boolean) { this._scrollable = val; }\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._prevPos = [0, 0];\n    this._isFirstTouch = false;\n    this._scrolling = false;\n    this._scrollable = false;\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.TOUCH_START, this._onTouchStart, { passive: false });\n    element.addEventListener(BROWSER.EVENTS.TOUCH_MOVE, this._onTouchMove, { passive: false });\n    element.addEventListener(BROWSER.EVENTS.TOUCH_END, this._onTouchEnd);\n\n    this._el = element;\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_START, this._onTouchStart);\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_MOVE, this._onTouchMove);\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_END, this._onTouchEnd);\n\n    this._el = null;\n  }\n\n  private _onTouchStart = (evt: TouchEvent) => {\n    if (evt.touches.length > 1 || this._scrolling) return;\n\n    const touch = evt.touches[0];\n\n    this._isFirstTouch = true;\n    this._prevPos[0] = touch.clientX;\n    this._prevPos[1] = touch.clientY;\n\n    this.trigger(CONTROL_EVENTS.INPUT_START, {\n      srcEvent: evt,\n      isTouch: true,\n      isKeyboard: false\n    });\n  };\n\n  private _onTouchMove = (evt: TouchEvent) => {\n    // Only the one finger motion should be considered\n    if (evt.touches.length > 1 || this._scrolling) return;\n\n    const touch = evt.touches[0];\n    const scrollable = this._scrollable;\n    const prevPos = this._prevPos;\n\n    const x = touch.clientX;\n    const y = touch.clientY;\n    const deltaX = x - prevPos[0];\n    const deltaY = y - prevPos[1];\n\n    if (this._isFirstTouch) {\n      if (scrollable && !isFullscreen()) {\n        if (Math.abs(deltaY) > Math.abs(deltaX)) {\n          // Assume Scrolling\n          this._scrolling = true;\n          return;\n        }\n      }\n\n      this._isFirstTouch = false;\n    }\n\n    if (evt.cancelable !== false) {\n      evt.preventDefault();\n    }\n\n    this.trigger(CONTROL_EVENTS.CHANGE, {\n      delta: {\n        x: deltaX,\n        y: deltaY\n      },\n      isTouch: true,\n      isKeyboard: false\n    });\n\n    prevPos[0] = x;\n    prevPos[1] = y;\n  };\n\n  private _onTouchEnd = (evt: TouchEvent) => {\n    if (evt.touches.length !== 0) return;\n\n    const touch = evt.touches[0];\n    const prevPos = this._prevPos;\n\n    if (touch) {\n      prevPos[0] = touch.clientX;\n      prevPos[1] = touch.clientY;\n    } else {\n      prevPos[0] = 0;\n      prevPos[1] = 0;\n\n      this.trigger(CONTROL_EVENTS.INPUT_END, {\n        isTouch: true,\n        isKeyboard: false,\n        scrolling: this._scrolling\n      });\n    }\n\n    if (evt.cancelable !== false) {\n      evt.preventDefault();\n    }\n\n    this._scrolling = false;\n  };\n}\n\nexport default TouchInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\n\nclass KeyboardInput extends Component<InputEvents<{ x: number, y: number }, KeyboardEvent>> {\n  private _el: HTMLElement | null;\n  private _pressed: {\n    LEFT: boolean;\n    UP: boolean;\n    RIGHT: boolean;\n    DOWN: boolean;\n  };\n\n  public get active() {\n    const pressed = this._pressed;\n    return pressed.LEFT || pressed.UP || pressed.RIGHT || pressed.DOWN;\n  }\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._clearPressedKeys();\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.KEY_DOWN, this._onKeyDown);\n    element.addEventListener(BROWSER.EVENTS.KEY_UP, this._onKeyUp);\n\n    this._el = element;\n    this._clearPressedKeys();\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.KEY_DOWN, this._onKeyDown);\n    element.removeEventListener(BROWSER.EVENTS.KEY_UP, this._onKeyUp);\n\n    this._el = null;\n    this._clearPressedKeys();\n  }\n\n  public update() {\n    const delta = this._getDeltaByPressedKeys();\n\n    if (delta.x !== 0 || delta.y !== 0) {\n      this.trigger(CONTROL_EVENTS.CHANGE, {\n        delta,\n        isTouch: false,\n        isKeyboard: true\n      });\n    }\n  }\n\n  private _clearPressedKeys() {\n    this._pressed = BROWSER.KEY_DIRECTION.reduce((obj, keyName) => {\n      return {\n        ...obj,\n        [keyName]: false\n      };\n    }, {} as KeyboardInput[\"_pressed\"]);\n  }\n\n  private _updateKeyPress(event: KeyboardEvent, isEnable: boolean): void {\n    const pressed = this._pressed;\n    const keyToUpdate = event.keyCode != null\n      ? BROWSER.DIRECTION_KEY_CODE[event.keyCode]\n      : BROWSER.DIRECTION_KEY_NAME[event.key];\n\n    if (!keyToUpdate) return;\n\n    pressed[keyToUpdate] = isEnable;\n  }\n\n  private _getPressedKeyCount() {\n    return BROWSER.KEY_DIRECTION.filter(key => this._pressed[key]).length;\n  }\n\n  private _getDeltaByPressedKeys() {\n    const pressed = this._pressed;\n    let x = 0;\n    let y = 0;\n\n    if (pressed.LEFT) {\n      x += 1;\n    }\n\n    if (pressed.RIGHT) {\n      x -= 1;\n    }\n\n    if (pressed.UP) {\n      y += 1;\n    }\n\n    if (pressed.DOWN) {\n      y -= 1;\n    }\n\n    return {\n      x, y\n    };\n  }\n\n  private _onKeyDown = (evt: KeyboardEvent) => {\n    // Ignore all other keypress except main arrow keys\n    if (evt.location !== KeyboardEvent.DOM_KEY_LOCATION_STANDARD) return;\n\n    this._updateKeyPress(evt, true);\n\n    const pressedCount = this._getPressedKeyCount();\n    if (pressedCount <= 0) return;\n\n    evt.preventDefault();\n    if (pressedCount === 1 && !evt.repeat) {\n      // On first keydown\n      this.trigger(CONTROL_EVENTS.INPUT_START, {\n        srcEvent: evt,\n        isTouch: false,\n        isKeyboard: true\n      });\n    }\n  };\n\n  private _onKeyUp = (evt: KeyboardEvent) => {\n    // Ignore all other keypress except main arrow keys\n    if (evt.location !== KeyboardEvent.DOM_KEY_LOCATION_STANDARD) return;\n\n    this._updateKeyPress(evt, false);\n\n    const pressedCount = this._getPressedKeyCount();\n    if (pressedCount > 0) return;\n\n    this.trigger(CONTROL_EVENTS.INPUT_END, {\n      isTouch: false,\n      isKeyboard: true,\n      scrolling: false\n    });\n  };\n}\n\nexport default KeyboardInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport CameraControl from \"./CameraControl\";\nimport MouseInput from \"./input/MouseInput\";\nimport TouchInput from \"./input/TouchInput\";\nimport KeyboardInput from \"./input/KeyboardInput\";\nimport Camera from \"../core/Camera\";\nimport Motion from \"../core/Motion\";\nimport { CONTROL_EVENTS, INFINITE_RANGE, DEFAULT_PITCH_RANGE, DEFAULT_ANIMATION_DURATION, DEFAULT_EASING, DEG_TO_RAD, RAD_TO_DEG } from \"../const/internal\";\nimport { toVerticalFov } from \"../utils\";\nimport { ControlEvents, InputEvents } from \"../type/internal\";\n\n/**\n * Options for {@link RotateControl}\n * @ko {@link RotateControl}용 옵션들\n * @since 4.0.0\n */\nexport interface RotateControlOptions {\n  /**\n   * @copy RotateControl#pointerScale\n   */\n  pointerScale: [number, number];\n  /**\n   * @copy RotateControl#keyboardScale\n   */\n  keyboardScale: [number, number];\n  /**\n   * @copy RotateControl#duration\n   */\n  duration: number;\n  /**\n   * @copy RotateControl#easing\n   */\n  easing: (x: number) => number;\n  /**\n   * @copy RotateControl#disablePitch\n   */\n  disablePitch: boolean;\n  /**\n   * @copy RotateControl#disableYaw\n   */\n  disableYaw: boolean;\n  /**\n   * @copy RotateControl#disableKeyboard\n   */\n  disableKeyboard: boolean;\n}\n\ntype RotateDeltaType = { x: number; y: number; };\nexport type RotateControlEvents = ControlEvents<RotateDeltaType>;\n\n/**\n * Camera's rotation control\n * @ko 카메라의 회전을 담당하는 컨트롤\n * @since 4.0.0\n */\nclass RotateControl extends Component<RotateControlEvents> implements CameraControl {\n  // Options\n  private _pointerScale: RotateControlOptions[\"pointerScale\"];\n  private _keyboardScale: RotateControlOptions[\"keyboardScale\"];\n  private _duration: RotateControlOptions[\"duration\"];\n  private _easing: RotateControlOptions[\"easing\"];\n  private _disablePitch: RotateControlOptions[\"disablePitch\"];\n  private _disableYaw: RotateControlOptions[\"disableYaw\"];\n  private _disableKeyboard: RotateControlOptions[\"disableKeyboard\"];\n\n  // Internal values\n  private _controlEl: HTMLElement;\n  private _enableBlocked: boolean;\n  private _mouseInput: MouseInput;\n  private _touchInput: TouchInput;\n  private _keyboardInput: KeyboardInput;\n  private _xMotion: Motion;\n  private _yMotion: Motion;\n  private _screenScale: [number, number];\n  private _zoomScale: number;\n  private _enabled: boolean;\n  private _changedWhileDragging: boolean;\n\n  /**\n   * @copy CameraControl#enabled\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * @hidden\n   */\n  public get enableBlocked() { return this._enableBlocked; }\n  /**\n   * @copy CameraControl#animating\n   */\n  public get animating() {\n    return this._keyboardInput.active\n      || this._xMotion.activated\n      || this._yMotion.activated;\n  }\n  /**\n   * Current yaw value\n   * @ko 현재 yaw 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get yaw() { return this._xMotion; }\n  /**\n   * Current pitch value\n   * @ko 현재 pitch 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get pitch() { return this._yMotion; }\n  /**\n   * @copy View360#scrollable\n   */\n  public get scrollable() { return this._touchInput.scrollable; }\n  public set scrollable(val: boolean) {\n    this._touchInput.scrollable = val;\n  }\n\n  /**\n   * Scale factor for mouse/touch rotation\n   * @ko 마우스/터치를 통한 회전 배율\n   * @default [1, 1]\n   * @since 4.0.0\n   */\n  public get pointerScale() { return this._pointerScale; }\n  public set pointerScale(val: RotateControlOptions[\"pointerScale\"]) {\n    this._pointerScale = val;\n  }\n\n  /**\n   * Scale factor for keyboard rotation\n   * @ko 키보드를 통한 회전 배율\n   * @default [1, 1]\n   * @since 4.0.0\n   */\n  public get keyboardScale() { return this._keyboardScale; }\n  public set keyboardScale(val: RotateControlOptions[\"keyboardScale\"]) {\n    this._keyboardScale = val;\n  }\n\n  /**\n   * Duration of the input animation (ms)\n   * @ko 회전 애니메이션의 시간 (ms)\n   * @default 300\n   */\n  public get duration() { return this._duration; }\n  public set duration(val: RotateControlOptions[\"duration\"]) {\n    this._duration = val;\n    this._xMotion.duration = val;\n    this._yMotion.duration = val;\n  }\n\n  /**\n   * Easing function of the animation\n   * @ko 회전 애니메이션에 적용할 easing 함수\n   * @default EASING.EASE_OUT_CUBIC\n   * @see EASING\n   */\n  public get easing() { return this._easing; }\n  public set easing(val: RotateControlOptions[\"easing\"]) {\n    this._easing = val;\n    this._xMotion.easing = val;\n    this._yMotion.easing = val;\n  }\n\n  /**\n   * Disable X-axis(pitch) rotation.\n   * @ko x축 회전(pitch)을 비활성화합니다.\n   * @default false\n   */\n  public get disablePitch() { return this._disablePitch; }\n  public set disablePitch(val: RotateControlOptions[\"disablePitch\"]) { this._disablePitch = val; }\n\n  /**\n   * Disable Y-axis(yaw) rotation.\n   * @ko y축 회전(yaw)을 비활성화합니다.\n   * @default false\n   */\n  public get disableYaw() { return this._disableYaw; }\n  public set disableYaw(val: RotateControlOptions[\"disableYaw\"]) { this._disableYaw = val; }\n\n  /**\n   * Disable rotation by keyboard.\n   * @ko 키보드를 이용한 회전을 비활성화합니다.\n   * @default false\n   */\n  public get disableKeyboard() { return this._disableKeyboard; }\n  public set disableKeyboard(val: RotateControlOptions[\"disableKeyboard\"]) { this._disableKeyboard = val; }\n\n  /**\n   * Create new RotateControl instance\n   * @ko RotateControl의 인스턴스를 생성합니다.\n   * @param controlEl - Element to attach handlers {@ko 입력을 받을 엘리먼트}\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\n   * @param options - Options for control {@ko 컨트롤 옵션들}\n   */\n  public constructor(controlEl: HTMLElement, enableBlocked: boolean, {\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING,\n    pointerScale = [1, 1],\n    keyboardScale = [1, 1],\n    disablePitch = false,\n    disableYaw = false,\n    disableKeyboard = false\n  }: Partial<RotateControlOptions> = {}) {\n    super();\n\n    this._controlEl = controlEl;\n    this._pointerScale = pointerScale;\n    this._keyboardScale = keyboardScale;\n    this._duration = duration;\n    this._easing = easing;\n    this._disablePitch = disablePitch;\n    this._disableYaw = disableYaw;\n    this._disableKeyboard = disableKeyboard;\n\n    this._enableBlocked = enableBlocked;\n    this._mouseInput = new MouseInput();\n    this._touchInput = new TouchInput();\n    this._keyboardInput = new KeyboardInput();\n    this._xMotion = new Motion({ duration, range: INFINITE_RANGE, easing });\n    this._yMotion = new Motion({ duration, range: DEFAULT_PITCH_RANGE, easing });\n    this._screenScale = [1, 1];\n    this._zoomScale = 1;\n    this._enabled = false;\n    this._changedWhileDragging = false;\n    this._bindInputs();\n  }\n\n  public destroy(): void {\n    this.disable();\n    this._mouseInput.off();\n    this._touchInput.off();\n    this._keyboardInput.off();\n    this.off();\n    this._changedWhileDragging = false;\n  }\n\n  /**\n   * @hidden\n   */\n  public update(delta: number): void {\n    if (!this._enabled) return;\n\n    const xMotion = this._xMotion;\n    const yMotion = this._yMotion;\n    const keyboardInput = this._keyboardInput;\n\n    if (!this._disableKeyboard) {\n      keyboardInput.update();\n    }\n\n    if (!this._disablePitch) {\n      yMotion.update(delta);\n    }\n\n    if (!this._disableYaw) {\n      xMotion.update(delta);\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  public updateRange(camera: Camera, zoom: number) {\n    const yawRange = camera.getYawRange(zoom);\n    const pitchRange = camera.getPitchRange(zoom);\n\n    this._xMotion.setRange(yawRange.min, yawRange.max);\n    this._yMotion.setRange(pitchRange.min, pitchRange.max);\n  }\n\n  /**\n   * @hidden\n   */\n  public setZoomScale(val: number) {\n    this._zoomScale = val;\n  }\n\n  /**\n   * Resize control to match target size.\n   * @ko 컨트롤의 내부 크기를 갱신합니다.\n   * @param hfov - Camera horizontal fov in degrees {@ko 카메라의 수평방향 fov값 (도 단위)}\n   * @param aspect - Camera aspect {@ko 카메라 가로/세로 비율}\n   * @param width - New width {@ko 갱신된 너비}\n   * @param height - New height {@ko 갱신된 높이}\n   */\n  public resize(hfov: number, aspect: number, width: number, height: number) {\n    const vfov = toVerticalFov(hfov * DEG_TO_RAD, aspect) * RAD_TO_DEG;\n\n    this._screenScale[0] = hfov / width;\n    this._screenScale[1] = vfov / height;\n  }\n\n  public enable(): void {\n    if (this._enabled) return;\n\n    const element = this._controlEl;\n\n    this._mouseInput.enable(element);\n    this._touchInput.enable(element);\n    this._keyboardInput.enable(element);\n\n    this._enabled = true;\n    this._enableBlocked = false;\n\n    this.trigger(CONTROL_EVENTS.ENABLE, { control: this, updateCursor: true });\n  }\n\n  public disable(): void {\n    if (!this._enabled) return;\n\n    this._mouseInput.disable();\n    this._touchInput.disable();\n    this._keyboardInput.disable();\n\n    this._enabled = false;\n\n    this.trigger(CONTROL_EVENTS.DISABLE, { updateCursor: true });\n  }\n\n  public sync(camera: Camera): void {\n    this.updateRange(camera, camera.zoom);\n\n    this._xMotion.reset(camera.yaw);\n    this._yMotion.reset(camera.pitch);\n  }\n\n  private _bindInputs() {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n    const keyboardInput = this._keyboardInput;\n\n    mouseInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    mouseInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    mouseInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    touchInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    touchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    touchInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    keyboardInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    keyboardInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    keyboardInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n  }\n\n  private _onInputStart = (evt: InputEvents<RotateDeltaType>[typeof CONTROL_EVENTS.INPUT_START]) => {\n    this._changedWhileDragging = false;\n    this.trigger(CONTROL_EVENTS.INPUT_START, {\n      ...evt,\n      inputType: \"rotate\"\n    });\n  };\n\n  private _onChange = (evt: InputEvents<RotateDeltaType>[typeof CONTROL_EVENTS.CHANGE]) => {\n    const delta = evt.delta;\n    const invZoomScale = 1 / this._zoomScale; // Reduce speed on zoom\n    const screenScale = this._screenScale;\n    const keyboardScale = this._keyboardScale;\n    const pointerScale = this._pointerScale;\n\n    let scale: [number, number];\n\n    if (evt.isKeyboard) {\n      scale = [\n        keyboardScale[0] * invZoomScale,\n        keyboardScale[1] * invZoomScale\n      ];\n    } else {\n      scale = [\n        pointerScale[0] * screenScale[0] * invZoomScale,\n        pointerScale[1] * screenScale[1] * invZoomScale\n      ];\n    }\n\n    const scaledX = delta.x * scale[0];\n    const scaledY = delta.y * scale[1];\n\n    this._xMotion.setNewEndByDelta(scaledX);\n    this._yMotion.setNewEndByDelta(scaledY);\n\n    this._changedWhileDragging = true;\n  }\n\n  private _onInputEnd = (evt: InputEvents<RotateDeltaType>[typeof CONTROL_EVENTS.INPUT_END]) => {\n    this.trigger(CONTROL_EVENTS.INPUT_END, {\n      ...evt,\n      inputType: \"rotate\"\n    });\n\n    if (!this._changedWhileDragging && !evt.isKeyboard && !evt.scrolling) {\n      this.trigger(CONTROL_EVENTS.STATIC_CLICK, {\n        isTouch: evt.isTouch\n      });\n    }\n\n    this._changedWhileDragging = false;\n  };\n}\n\nexport default RotateControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS, DEFAULT_ANIMATION_DURATION } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\n\nclass WheelInput extends Component<InputEvents<number, WheelEvent>> {\n  private _el: HTMLElement | null;\n  private _scrollable: boolean;\n  private _baseScale: number;\n  private _inputTimer: number;\n\n  public get scrollable() { return this._scrollable; }\n  public set scrollable(val: boolean) { this._scrollable = val; }\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._baseScale = 0.04;\n    this._scrollable = false;\n    this._inputTimer = -1;\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.WHEEL, this._onWheel, { passive: false, capture: false });\n\n    this._el = element;\n    this._clearTimer();\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.WHEEL, this._onWheel, false);\n\n    this._el = null;\n    this._clearTimer();\n  }\n\n  private _onWheel = (evt: WheelEvent) => {\n    const scrollable = this._scrollable;\n\n    if (evt.deltaY === 0 || scrollable) return;\n\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    if (this._inputTimer < 0) {\n      this.trigger(CONTROL_EVENTS.INPUT_START, {\n        srcEvent: evt,\n        isTouch: false,\n        isKeyboard: false\n      });\n    } else {\n      this._clearTimer();\n    }\n\n    const delta = this._baseScale * evt.deltaY;\n\n    this.trigger(CONTROL_EVENTS.CHANGE, {\n      delta,\n      isTouch: false,\n      isKeyboard: false\n    });\n\n    this._inputTimer = window.setTimeout(() => {\n      this.trigger(CONTROL_EVENTS.INPUT_END, {\n        isTouch: false,\n        isKeyboard: false,\n        scrolling: false\n      });\n      this._inputTimer = -1;\n    }, DEFAULT_ANIMATION_DURATION);\n  };\n\n  private _clearTimer() {\n    window.clearTimeout(this._inputTimer);\n    this._inputTimer = -1;\n  }\n}\n\nexport default WheelInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\n\nclass PinchInput extends Component<InputEvents<number, TouchEvent>> {\n  private _el: HTMLElement | null;\n  private _baseScale: number;\n  private _prevDistance: number;\n  private _isFirstTouch: boolean;\n\n  public constructor() {\n    super();\n\n    this._el = null;\n    this._baseScale = -0.2;\n    this._prevDistance = -1;\n    this._isFirstTouch = true;\n  }\n\n  public enable(element: HTMLElement) {\n    if (this._el) return;\n\n    element.addEventListener(BROWSER.EVENTS.TOUCH_MOVE, this._onTouchMove, { passive: false, capture: false });\n    element.addEventListener(BROWSER.EVENTS.TOUCH_END, this._onTouchEnd);\n\n    this._el = element;\n    this._prevDistance = -1;\n    this._isFirstTouch = true;\n  }\n\n  public disable() {\n    const element = this._el;\n    if (!element) return;\n\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_MOVE, this._onTouchMove, false);\n    element.removeEventListener(BROWSER.EVENTS.TOUCH_END, this._onTouchEnd);\n\n    this._el = null;\n  }\n\n  private _onTouchMove = (evt: TouchEvent) => {\n    const touches = evt.touches;\n    if (touches.length !== 2) return;\n\n    if (!evt.cancelable) return;\n\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const prevDistance = this._prevDistance;\n\n    const diff = [\n      touches[0].pageX - touches[1].pageX,\n      touches[0].pageY - touches[1].pageY\n    ];\n\n    const distance = Math.sqrt(diff[0] * diff[0] + diff[1] * diff[1]) * this._baseScale;\n    const delta = this._isFirstTouch\n      ? 0\n      : distance - prevDistance;\n\n    if (this._isFirstTouch) {\n      this.trigger(CONTROL_EVENTS.INPUT_START, {\n        srcEvent: evt,\n        isTouch: true,\n        isKeyboard: false\n      });\n    }\n\n    this._prevDistance = distance;\n    this._isFirstTouch = false;\n\n    this.trigger(CONTROL_EVENTS.CHANGE, {\n      delta,\n      isTouch: true,\n      isKeyboard: false\n    });\n  };\n\n  private _onTouchEnd = (evt: TouchEvent) => {\n    if (evt.touches.length !== 0) return;\n\n    if (!this._isFirstTouch) {\n      this.trigger(CONTROL_EVENTS.INPUT_END, {\n        isTouch: true,\n        isKeyboard: false,\n        scrolling: false\n      });\n    }\n\n    this._prevDistance = -1;\n    this._isFirstTouch = true;\n  };\n}\n\nexport default PinchInput;\n","/*\n* Copyright (c) 2023-present NAVER Corp.\n* egjs projects are licensed under the MIT license\n*/\nimport Component from \"@egjs/component\";\nimport CameraControl from \"./CameraControl\";\nimport WheelInput from \"./input/WheelInput\";\nimport PinchInput from \"./input/PinchInput\";\nimport Camera from \"../core/Camera\";\nimport Motion from \"../core/Motion\";\nimport {\n  CONTROL_EVENTS,\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_EASING,\n  INFINITE_RANGE\n} from \"../const/internal\";\nimport { ControlEvents, InputEvents } from \"../type/internal\";\n\n/**\n * Options for {@link ZoomControl}\n * @ko {@link ZoomControl}용 옵션들\n * @since 4.0.0\n */\nexport interface ZoomControlOptions {\n  /**\n   * @copy ZoomControl#scale\n   */\n  scale: number;\n  /**\n   * @copy ZoomControl#duration\n   */\n  duration: number;\n  /**\n   * @copy ZoomControl#easing\n   */\n  easing: (x: number) => number;\n}\n\ntype ZoomControlEvents = ControlEvents<number>;\n\n/**\n * Camera's zoom control\n * @ko 카메라의 줌 값을 담당하는 컨트롤\n * @since 4.0.0\n */\nclass ZoomControl extends Component<ZoomControlEvents> implements CameraControl {\n  // Options\n  private _scale: ZoomControlOptions[\"scale\"];\n\n  // Internal values\n  private _controlEl: HTMLElement;\n  private _enableBlocked: boolean;\n  private _wheelInput: WheelInput;\n  private _pinchInput: PinchInput;\n  private _motion: Motion;\n  private _enabled: boolean;\n\n  /**\n   * @copy CameraControl#enabled\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * @hidden\n   */\n  public get enableBlocked() { return this._enableBlocked; }\n  /**\n   * @copy CameraControl#animating\n   */\n  public get animating() { return this._motion.activated; }\n  /**\n   * Current zoom value\n   * @ko 현재 줌 값\n   * @since 4.0.0\n   * @readonly\n   */\n  public get zoom() { return this._motion.val; }\n  /**\n   * @copy View360#wheelScrollable\n   */\n  public get scrollable() { return this._wheelInput.scrollable; }\n  public set scrollable(val: boolean) {\n    this._wheelInput.scrollable = val;\n  }\n  /**\n   * @hidden\n   */\n  public get range() { return this._motion.range; }\n\n  /**\n   * Scale factor of the zoom\n   * @ko 입력에 의한 줌 배율\n   * @default 1\n   * @since 4.0.0\n   */\n  public get scale() { return this._scale; }\n  public set scale(val: ZoomControlOptions[\"scale\"]) { this._scale = val; }\n\n  /**\n   * Duration of the input animation (ms)\n   * @ko 회전 애니메이션의 시간 (ms)\n   * @default 300\n   * @since 4.0.0\n   */\n  public get duration() { return this._motion.duration; }\n\n  /**\n   * Easing function of the animation\n   * @ko 회전 애니메이션에 적용할 easing 함수\n   * @default EASING.EASE_OUT_CUBIC\n   * @see EASING\n   * @since 4.0.0\n   */\n  public get easing() { return this._motion.easing; }\n\n  /**\n   * Create new ZoomControl instance\n   * @ko ZoomControl의 인스턴스를 생성합니다.\n   * @param controlEl - Element to attach handlers {@ko 입력을 받을 엘리먼트}\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\n   * @param options - Options for control {@ko 컨트롤 옵션들}\n   */\n  public constructor(controlEl: HTMLElement, enableBlocked: boolean, {\n    scale = 1,\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING\n  }: Partial<ZoomControlOptions> = {}) {\n    super();\n\n    this._scale = scale;\n\n    this._controlEl = controlEl;\n    this._enableBlocked = enableBlocked;\n    this._wheelInput = new WheelInput();\n    this._pinchInput = new PinchInput();\n    this._motion = new Motion({\n      duration,\n      easing,\n      range: INFINITE_RANGE\n    });\n    this._enabled = false;\n\n    this._bindInputs();\n  }\n\n  public destroy(): void {\n    this.disable();\n    this._wheelInput.off();\n    this._pinchInput.off();\n    this.off();\n  }\n\n  /**\n   * @hidden\n   */\n  public update(delta: number): void {\n    if (!this._enabled) return;\n\n    const motion = this._motion;\n    motion.update(delta);\n  }\n\n  public enable(): void {\n    if (this._enabled) return;\n\n    const element = this._controlEl;\n    this._wheelInput.enable(element);\n    this._pinchInput.enable(element);\n\n    this._enabled = true;\n    this._enableBlocked = false;\n\n    this.trigger(CONTROL_EVENTS.ENABLE, { control: this, updateCursor: false });\n  }\n\n  public disable(): void {\n    if (!this._enabled) return;\n\n    this._wheelInput.disable();\n    this._pinchInput.disable();\n\n    this._enabled = false;\n\n    this.trigger(CONTROL_EVENTS.DISABLE, { updateCursor: false });\n  }\n\n  public sync(camera: Camera): void {\n    const motion = this._motion;\n    const range = camera.getZoomRange();\n\n    motion.setRange(range.min, range.max);\n    motion.reset(range.current);\n  }\n\n  private _bindInputs() {\n    const wheelInput = this._wheelInput;\n    const pinchInput = this._pinchInput;\n\n    wheelInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    wheelInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    wheelInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    pinchInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    pinchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    pinchInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n  }\n\n  private _onInputStart = (evt: InputEvents<number>[typeof CONTROL_EVENTS.INPUT_START]) => {\n    this.trigger(CONTROL_EVENTS.INPUT_START, {\n      ...evt,\n      inputType: \"zoom\"\n    });\n  };\n\n  private _onChange = ({ delta }: InputEvents<number>[typeof CONTROL_EVENTS.CHANGE]) => {\n    const scale = this._scale;\n    const scaledDelta = delta * scale;\n\n    this._motion.setNewEndByDelta(scaledDelta);\n  };\n\n  private _onInputEnd = (evt: InputEvents<number>[typeof CONTROL_EVENTS.INPUT_END]) => {\n    this.trigger(CONTROL_EVENTS.INPUT_END, {\n      ...evt,\n      inputType: \"zoom\"\n    });\n  };\n}\n\nexport default ZoomControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport { quat, vec3 } from \"gl-matrix\";\nimport * as BROWSER from \"../../const/browser\";\nimport { DEG_TO_RAD, RAD_TO_DEG } from \"../../const/internal\";\nimport { InputEvents } from \"../../type/internal\";\nimport { quatToEuler } from \"../../utils\";\n\nexport const ROTATE_CONSTANT = {\n  PITCH_DELTA: 1,\n  YAW_DELTA_BY_ROLL: 2,\n  YAW_DELTA_BY_YAW: 3\n} as const;\n\nROTATE_CONSTANT[ROTATE_CONSTANT.PITCH_DELTA] = {\n  targetAxis: [0, 1, 0],\n  meshPoint: [0, 0, 1]\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_ROLL] = {\n  targetAxis: [0, 1, 0],\n  meshPoint: [1, 0, 0]\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_YAW] = {\n  targetAxis: [1, 0, 0],\n  meshPoint: [0, 0, 1]\n};\n\nclass GyroInput extends Component<InputEvents<{ x: number, y: number, z: number }, MouseEvent>> {\n  public quaternion: quat;\n\n  private _ignoreRoll: boolean;\n\n  private _yawOrigin: number;\n  private _yawOffset: number;\n  private _orientation: {\n    alpha: number;\n    beta: number;\n    gamma: number;\n  }\n  private _orientationUpdated: boolean;\n  private _needsCalibrate: boolean;\n  private _screenOrientation: number;\n  private _enabled: boolean;\n\n  public get enabled() { return this._enabled; }\n  public get orientationUpdated() { return this._orientationUpdated; }\n  public get ignoreRoll() { return this._ignoreRoll; }\n  public set ignoreRoll(val: boolean) { this._ignoreRoll = val; }\n\n  public constructor() {\n    super();\n\n    this.quaternion = quat.create();\n\n    this._orientation = {\n      alpha: 0,\n      beta: 90,\n      gamma: 0\n    };\n    this._yawOrigin = 0;\n    this._yawOffset = 0;\n    this._orientationUpdated = false;\n    this._screenOrientation = 0;\n    this._needsCalibrate = true;\n    this._enabled = false;\n  }\n\n  public enable() {\n    if (this._enabled) return;\n\n    window.addEventListener(BROWSER.EVENTS.DEVICE_ORIENTATION, this._onDeviceOrientation);\n    window.addEventListener(BROWSER.EVENTS.ORIENTATION_CHANGE, this._updateScreenOrientation);\n\n    this._updateScreenOrientation();\n    this._orientationUpdated = false;\n    this._needsCalibrate = true;\n    this._enabled = true;\n  }\n\n  public disable() {\n    if (!this._enabled) return;\n\n    window.removeEventListener(BROWSER.EVENTS.DEVICE_ORIENTATION, this._onDeviceOrientation);\n    window.removeEventListener(BROWSER.EVENTS.ORIENTATION_CHANGE, this._updateScreenOrientation);\n\n    this._enabled = false;\n  }\n\n  public update() {\n    this._updateRotation();\n    this._orientationUpdated = false;\n  }\n\n  public collectDelta() {\n    if (!this._orientationUpdated) {\n      return {\n        pitch: 0,\n        yaw: 0\n      };\n    }\n\n    const prevRotation = quat.clone(this.quaternion);\n\n    this._updateRotation();\n    this._orientationUpdated = false;\n\n    return this._toEulerDelta(prevRotation, this.quaternion);\n  }\n\n  public setInitialRotation(yaw: number) {\n    this._yawOrigin = yaw;\n  }\n\n  private _onDeviceOrientation = (evt: DeviceOrientationEvent) => {\n    const prevOrientation = this._orientation;\n    const { alpha, beta, gamma } = evt;\n\n    if (\n      alpha == null\n      || beta == null\n      || gamma == null\n    ) return;\n\n    prevOrientation.alpha = alpha;\n    prevOrientation.beta = beta;\n    prevOrientation.gamma = gamma;\n\n    this._orientationUpdated = true;\n\n    if (this._needsCalibrate) {\n      this._needsCalibrate = false;\n      this._calibrateSensor();\n    }\n  };\n\n  private _calibrateSensor() {\n    const yawOrigin = this._yawOrigin;\n    const rotation = this.quaternion;\n\n    this._yawOffset = 0;\n    this._updateRotation();\n\n    const { yaw: sensorYaw } = quatToEuler(rotation);\n    this._yawOffset = sensorYaw - yawOrigin;\n    this._updateRotation();\n\n    this._needsCalibrate = false;\n  }\n\n  private _updateRotation() {\n    const rotation = this.quaternion;\n    const { alpha, beta, gamma } = this._orientation;\n\n    quat.identity(rotation);\n    quat.rotateY(rotation, rotation, (alpha - this._yawOffset) * DEG_TO_RAD);\n    quat.rotateX(rotation, rotation, beta * DEG_TO_RAD);\n    quat.rotateZ(rotation, rotation, -gamma * DEG_TO_RAD);\n\n    const screen = quat.create();\n    const screenAngle = -this._screenOrientation * 0.5 * DEG_TO_RAD;\n    const world = quat.fromValues(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n\n    quat.set(screen, 0, Math.sin(screenAngle), 0, Math.cos(screenAngle));\n    quat.multiply(rotation, rotation, screen);\n    quat.multiply(rotation, rotation, world);\n\n    quat.normalize(rotation, rotation);\n  }\n\n  private _updateScreenOrientation = () => {\n    if (window.screen && window.screen.orientation && window.screen.orientation.angle !== undefined) {\n      this._screenOrientation = screen.orientation.angle;\n    } else if (window.orientation !== undefined) {\n      this._screenOrientation = window.orientation >= 0 ?\n        window.orientation : 360 + window.orientation;\n    } else {\n      this._screenOrientation = 0;\n    }\n  }\n\n  private _toEulerDelta(prevQuat: quat, currentQuat: quat) {\n    return {\n      yaw: this._getDeltaYaw(prevQuat, currentQuat),\n      pitch: this._getDeltaPitch(prevQuat, currentQuat),\n    };\n  }\n\n  private _getDeltaYaw(prvQ: quat, curQ: quat): number {\n    const yawDeltaByYaw = this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_YAW);\n    const yawDeltaByRoll = this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_ROLL)\n      * Math.sin(this._extractPitchFromQuat(curQ));\n\n    return yawDeltaByRoll + yawDeltaByYaw;\n  }\n\n  private _getDeltaPitch(prvQ: quat, curQ: quat): number {\n    return this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.PITCH_DELTA);\n  }\n\n  private _getRotationDelta(prevQ: quat, curQ: quat, rotateKind: typeof ROTATE_CONSTANT[keyof typeof ROTATE_CONSTANT]) {\n    const targetAxis = vec3.fromValues(\n      ROTATE_CONSTANT[rotateKind].targetAxis[0],\n      ROTATE_CONSTANT[rotateKind].targetAxis[1],\n      ROTATE_CONSTANT[rotateKind].targetAxis[2]\n    );\n    const meshPoint = ROTATE_CONSTANT[rotateKind].meshPoint;\n\n    const prevQuaternion = quat.clone(prevQ);\n    const curQuaternion = quat.clone(curQ);\n\n    quat.normalize(prevQuaternion, prevQuaternion);\n    quat.normalize(curQuaternion, curQuaternion);\n\n    let prevPoint = vec3.fromValues(0, 0, 1);\n    let curPoint = vec3.fromValues(0, 0, 1);\n\n    vec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n    vec3.transformQuat(curPoint, curPoint, curQuaternion);\n    vec3.transformQuat(targetAxis, targetAxis, curQuaternion);\n\n    const rotateDistance = vec3.dot(targetAxis, vec3.cross(vec3.create(), prevPoint, curPoint));\n    const rotateDirection = rotateDistance > 0 ? 1 : -1;\n\n    // when counter clock wise, use vec3.fromValues(0,1,0)\n    // when clock wise, use vec3.fromValues(0,-1,0)\n    // const meshPoint1 = vec3.fromValues(0, 0, 0);\n    const meshPoint2 = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n\n    let meshPoint3;\n\n    if (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n      meshPoint3 = vec3.fromValues(0, rotateDirection, 0);\n    } else {\n      meshPoint3 = vec3.fromValues(rotateDirection, 0, 0);\n    }\n\n    vec3.transformQuat(meshPoint2, meshPoint2, curQuaternion);\n    vec3.transformQuat(meshPoint3, meshPoint3, curQuaternion);\n\n    const vecU = meshPoint2;\n    const vecV = meshPoint3;\n    const vecN = vec3.create();\n\n    vec3.cross(vecN, vecU, vecV);\n    vec3.normalize(vecN, vecN);\n\n    const coefficientA = vecN[0];\n    const coefficientB = vecN[1];\n    const coefficientC = vecN[2];\n\n    // a point on the plane\n    curPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n    vec3.transformQuat(curPoint, curPoint, curQuaternion);\n\n    // a point should project on the plane\n    prevPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n    vec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n\n    // distance between prevPoint and the plane\n    let distance = Math.abs(\n      prevPoint[0] * coefficientA +\n      prevPoint[1] * coefficientB +\n      prevPoint[2] * coefficientC\n    );\n\n    const projectedPrevPoint = vec3.create();\n\n    vec3.subtract(projectedPrevPoint, prevPoint, vec3.scale(vec3.create(), vecN, distance));\n\n    let trigonometricRatio =\n      (projectedPrevPoint[0] * curPoint[0] +\n      projectedPrevPoint[1] * curPoint[1] +\n      projectedPrevPoint[2] * curPoint[2]) /\n      (vec3.length(projectedPrevPoint) * vec3.length(curPoint));\n\n    // defensive block\n    if (trigonometricRatio > 1) {\n      trigonometricRatio = 1;\n    }\n\n    const theta = Math.acos(trigonometricRatio);\n\n    const crossVec = vec3.cross(vec3.create(), curPoint, projectedPrevPoint);\n\n    distance = coefficientA * crossVec[0]\n      + coefficientB * crossVec[1]\n      + coefficientC * crossVec[2];\n\n    let thetaDirection: number;\n\n    if (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n      thetaDirection = distance > 0 ? 1 : -1;\n    } else {\n      thetaDirection = distance < 0 ? 1 : -1;\n    }\n\n    const deltaRadian = theta * thetaDirection * rotateDirection;\n\n    return deltaRadian * RAD_TO_DEG;\n  }\n\n  private _extractPitchFromQuat(quaternion: quat) {\n    const baseV = vec3.fromValues(0, 0, 1);\n    vec3.transformQuat(baseV, baseV, quaternion);\n\n    return -1 * Math.atan2(\n      baseV[1],\n      Math.sqrt(Math.pow(baseV[0], 2) + Math.pow(baseV[2], 2)));\n  }\n}\n\nexport default GyroInput;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport CameraControl from \"./CameraControl\";\nimport GyroInput from \"./input/GyroInput\";\nimport Motion from \"../core/Motion\";\nimport Camera from \"../core/Camera\";\nimport * as BROWSER from \"../const/browser\";\nimport { CONTROL_EVENTS } from \"../const/internal\";\nimport { ControlEvents } from \"../type/internal\";\nimport { sensorCanBeEnabledIOS } from \"../utils\";\n\n/**\n * Options for {@link GyroControl}\n * @ko {@link GyroControl}용 옵션들\n * @since 4.0.0\n */\nexport interface GyroControlOptions {\n  /**\n   * @copy GyroControl#ignoreRoll\n   */\n  ignoreRoll: boolean;\n}\n\nexport type GyroControlEvents = ControlEvents<void>;\n\n/**\n * Camera's rotation control by gyroscope\n * @ko 자이로스코프를 이용한 회전 컨트롤\n * @since 4.0.0\n */\nclass GyroControl extends Component<GyroControlEvents> implements CameraControl {\n  // Options\n  private _ignoreRoll: GyroControlOptions[\"ignoreRoll\"];\n\n  // Internal values\n  private _enableBlocked: boolean;\n  private _input: GyroInput;\n\n  /**\n   * @copy CameraControl#enabled\n   */\n  public get enabled() { return this._input.enabled; }\n  /**\n   * @hidden\n   */\n  public get enableBlocked() { return this._enableBlocked; }\n  /**\n   * @copy CameraControl#animating\n   */\n  public get animating() {\n    return this._input.enabled && this._input.orientationUpdated;\n  }\n\n  /**\n   * When `true`, ignore gyroscope's roll(z-axis rotation) value.\n   * :::caution\n   * Setting `false` will ignore camera's range limit.\n   * Options like {@link View360Options#yawRange}, {@link View360Options#pitchRange} are ignored, and {@link CylinderProjection} also can't force it's camera range limit.\n   * :::\n   * @ko `true`일 경우 자이로스코프 입력의 roll(z축 회전)값을 무시합니다.\n   * :::caution\n   * 이 값을 `false`로 설정할 경우 카메라 범위 제약을 무시합니다.\n   * {@link View360Options#yawRange}, {@link View360Options#pitchRange}와 같은 값은 무시되며, {@link CylinderProjection} 사용시에도 범위를 벗어날 수 있습니다.\n   * :::\n   * @default true\n   * @since 4.0.0\n   */\n  public get ignoreRoll() { return this._ignoreRoll; }\n  public set ignoreRoll(val: GyroControlOptions[\"ignoreRoll\"]) { this._ignoreRoll = val; }\n\n  /**\n   * Return availability of the gyroscope.\n   * :::caution\n   * This will always return false until user permission under environments like iOS which requires user permission when using gyroscope.\n   * :::\n   * @ko 자이로스코프 사용 가능 여부를 반환합니다.\n   * :::caution\n   * iOS와 같이 GyroScope 사용시 사용자 Permission을 요구하는 환경에서는 사용자 Permission을 받기 전까지 항상 `false`입니다.\n   * :::\n   * @example\n   * ```ts\n   * const gyroAvailable = await GyroControl.isAvailable();\n   * ```\n   */\n  public static async isAvailable(): Promise<boolean> {\n    if (!DeviceMotionEvent) {\n      return false;\n    }\n\n    let onDeviceMotionChange: (evt: DeviceMotionEvent) => void;\n\n    const listenDeviceMotion = () => new Promise(res => {\n      onDeviceMotionChange = (evt: DeviceMotionEvent) => {\n        res(evt.rotationRate && evt.rotationRate.alpha != null);\n      };\n\n      window.addEventListener(BROWSER.EVENTS.DEVICE_MOTION, onDeviceMotionChange);\n    });\n\n    const timeout = () => new Promise(res => {\n      setTimeout(() => res(false), 1000);\n    });\n\n    return Promise.race([listenDeviceMotion(), timeout()])\n      .then((available: boolean) => {\n        window.removeEventListener(BROWSER.EVENTS.DEVICE_MOTION, onDeviceMotionChange);\n\n        return available;\n      });\n  }\n\n  /**\n   * Request user permission for gyroscope sensor.\n   * This can be used in environments like iOS which requires user permission when using gyroscope sensors.\n   * @ko 사용자의 sensor permission 취득을 요청합니다.\n   * iOS와 같이 gyroscope 사용시 사용자 Permission을 요구하는 환경에서 사용 가능합니다.\n   * @returns Whether the permission is granted {@ko 사용자 permission 취득 여부}\n   */\n  public static async requestSensorPermission(): Promise<boolean> {\n    // Request sensor permission, on iOS13+\n    if (sensorCanBeEnabledIOS()) {\n      return (DeviceMotionEvent as typeof DeviceMotionEvent & {\n        requestPermission: () => Promise<string>;\n      }).requestPermission().then(permissionState => {\n        return permissionState === \"granted\";\n      }).catch(() => false);\n    }\n\n    return true;\n  }\n\n  /**\n   * Create new GyroControl instance\n   * @ko GyroControl의 인스턴스를 생성합니다.\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\n   * @param options - Options for control {@ko 컨트롤 옵션들}\n   */\n  public constructor(enableBlocked: boolean, {\n    ignoreRoll = true\n  }: Partial<GyroControlOptions> = {}) {\n    super();\n\n    this._enableBlocked = enableBlocked;\n    this._ignoreRoll = ignoreRoll;\n    this._input = new GyroInput();\n  }\n\n  /**\n   * @copy CameraControl#destroy\n   */\n  public destroy(): void {\n    this.disable();\n    this._input.off();\n    this.off();\n  }\n\n  /**\n   * @hidden\n   */\n  public update(camera: Camera, yaw: Motion, pitch: Motion, zoom: number) {\n    if (!this._ignoreRoll) {\n      this._updateQuaternion(camera, zoom);\n    } else {\n      this._updateYawPitch(camera, yaw, pitch, zoom);\n    }\n  }\n\n  /**\n   * @copy CameraControl#enable\n   */\n  public enable(): void {\n    if (this._input.enabled) return;\n\n    this._input.enable();\n    this._enableBlocked = false;\n    this.trigger(CONTROL_EVENTS.ENABLE, { control: this, updateCursor: false });\n  }\n\n  /**\n   * @copy CameraControl#disable\n   */\n  public disable(): void {\n    if (!this._input.enabled) return;\n\n    this._input.disable();\n    this.trigger(CONTROL_EVENTS.DISABLE, { updateCursor: false });\n  }\n\n  /**\n   * @copy CameraControl#sync\n   */\n  public sync(): void {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  private _updateYawPitch(camera: Camera, yaw: Motion, pitch: Motion, zoom: number) {\n    const input = this._input;\n    if (!input.enabled) return;\n\n    const {\n      yaw: yawDelta,\n      pitch: pitchDelta\n    } = input.collectDelta();\n\n    yaw.add(yawDelta);\n    pitch.add(pitchDelta);\n\n    camera.lookAt({\n      yaw: yaw.val,\n      pitch: pitch.val,\n      zoom\n    });\n  }\n\n  private _updateQuaternion(camera: Camera, zoom: number) {\n    const input = this._input;\n    if (!input.enabled) return;\n\n    input.update();\n    camera.rotate(input.quaternion, zoom);\n  }\n}\n\nexport default GyroControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport CameraControl from \"./CameraControl\";\nimport RotateControl, { RotateControlEvents, RotateControlOptions } from \"./RotateControl\";\nimport ZoomControl, { ZoomControlOptions } from \"./ZoomControl\";\nimport GyroControl, { GyroControlOptions } from \"./GyroControl\";\nimport Camera from \"../core/Camera\";\nimport CameraAnimation from \"../core/CameraAnimation\";\nimport * as BROWSER from \"../const/browser\";\nimport { CAMERA_EVENTS, CONTROL_EVENTS } from \"../const/internal\";\nimport { ValueOf } from \"../type/utils\";\nimport { getObjectOption, hfovToZoom } from \"../utils\";\n\n/**\n * Options for {@link PanoControl}\n * @ko {@link PanoControl}용 옵션들\n * @since 4.0.0\n */\nexport interface PanoControlOptions {\n  /**\n   * @copy View360#useGrabCursor\n   */\n  useGrabCursor: boolean;\n  /**\n   * @copy View360#scrollable\n   */\n  scrollable: boolean;\n  /**\n   * @copy View360#wheelScrollable\n   */\n  wheelScrollable: boolean;\n  /**\n   * @copy View360#disableContextMenu\n   */\n  disableContextMenu: boolean;\n  /**\n   * Options for {@link RotateControl}.\n   * `false` to disable rotation.\n   * @ko {@link RotateControl}용 옵션들.\n   * `false`일 경우 회전이 비활성화됩니다.\n   * @since 4.0.0\n   */\n  rotate: boolean | Partial<RotateControlOptions>;\n  /**\n   * Options for {@link ZoomControl}.\n   * `false` to disable zoom.\n   * @ko {@link ZoomControl}용 옵션들.\n   * `false`일 경우 줌이 비활성화됩니다.\n   * @since 4.0.0\n   */\n  zoom: boolean | Partial<ZoomControlOptions>;\n  /**\n   * Options for {@link GyroControl}.\n   * `false` to disable gyroscope control.\n   * @ko {@link GyroControl}용 옵션들.\n   * `false`일 경우 자이로스코프를 통한 컨트롤이 비활성화됩니다.\n   * @since 4.0.0\n   */\n  gyro: boolean | Partial<GyroControlOptions>;\n}\n\n/**\n * Panorama control for View360\n * @ko View360용 파노라마 컨트롤\n * @since 4.0.0\n */\nclass PanoControl {\n  // Options\n  private _useGrabCursor: PanoControlOptions[\"useGrabCursor\"];\n  private _disableContextMenu: PanoControlOptions[\"disableContextMenu\"];\n\n  // Internal Values\n  private _camera: Camera;\n  private _controlEl: HTMLElement;\n  private _rotateControl: RotateControl;\n  private _zoomControl: ZoomControl;\n  private _gyroControl: GyroControl;\n  private _ignoreZoomScale: boolean;\n  private _enabled: boolean;\n\n  /**\n   * @copy View360#useGrabCursor\n   */\n  public get useGrabCursor() { return this._useGrabCursor; }\n  public set useGrabCursor(val: PanoControlOptions[\"useGrabCursor\"]) {\n    if (val === this._useGrabCursor) return;\n\n    this._useGrabCursor = val;\n\n    if (val && this._enabled) {\n      this._setCursor(BROWSER.CURSOR.GRAB);\n    } else if (!val) {\n      this._setCursor(BROWSER.CURSOR.NONE);\n    }\n  }\n\n  /**\n   * @copy View360#disableContextMenu\n   */\n  public get disableContextMenu() { return this._disableContextMenu; }\n  public set disableContextMenu(val: PanoControlOptions[\"disableContextMenu\"]) {\n    if (val === this._disableContextMenu) return;\n\n    this._disableContextMenu = val;\n\n    if (val && this._enabled) {\n      this._blockContextMenu();\n    } else if (!val) {\n      this._restoreContextMenu();\n    }\n  }\n\n  /**\n   * @copy View360#disableContextMenu\n   */\n  public get scrollable() { return this._rotateControl.scrollable; }\n  public set scrollable(val: PanoControlOptions[\"scrollable\"]) { this._rotateControl.scrollable = val; }\n  /**\n   * @copy View360#disableContextMenu\n   */\n  public get wheelScrollable() { return this._zoomControl.scrollable; }\n  public set wheelScrollable(val: PanoControlOptions[\"wheelScrollable\"]) { this._zoomControl.scrollable = val; }\n  /**\n   * When `true`, disables rotation slow-down by zoom-value.\n   * @ko `true`일 경우 줌 된 정도에 따라 회전속도를 늦추는 동작을 비활성화합니다.\n   * @since 4.0.0\n   */\n  public get ignoreZoomScale() { return this._ignoreZoomScale; }\n  public set ignoreZoomScale(val: boolean) { this._ignoreZoomScale = val; }\n\n  /**\n   * Whether the control is enabled or not\n   * @ko 컨트롤 활성화 여부를 가리키는 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * @copy View360#rotate\n   */\n  public get rotate() { return this._rotateControl; }\n  /**\n   * @copy View360#zoom\n   */\n  public get zoom() { return this._zoomControl; }\n  /**\n   * @copy View360#gyro\n   */\n  public get gyro() { return this._gyroControl; }\n\n  /**\n   * Whether one of the controls is animating at the moment\n   * @ko 현재 컨트롤 중 하나라도 동작중인지 여부를 나타내는 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get animating() {\n    return this._rotateControl.animating\n      || this._zoomControl.animating\n      || this._gyroControl.animating;\n  }\n\n  /**\n   * Create new instance.\n   * @ko 새 인스턴스를 생성합니다.\n   * @param element - Canvas element {@ko 캔버스 엘리먼트}\n   * @param camera - Camera instance {@ko Camera 인스턴스}\n   * @param options - Options for PanoControl {@ko PanoControl 옵션들}\n   */\n  public constructor(element: HTMLElement, camera: Camera, {\n    useGrabCursor,\n    scrollable,\n    wheelScrollable,\n    disableContextMenu,\n    rotate,\n    zoom,\n    gyro\n  }: PanoControlOptions) {\n    // Bind Options\n    this._useGrabCursor = useGrabCursor;\n    this._disableContextMenu = disableContextMenu;\n\n    // Set internal values\n    this._camera = camera;\n    this._controlEl = element;\n    this._ignoreZoomScale = false;\n    this._enabled = false;\n\n    this._rotateControl = new RotateControl(element, !rotate, getObjectOption(rotate));\n    this._zoomControl = new ZoomControl(element, !zoom, getObjectOption(zoom));\n    this._gyroControl = new GyroControl(!gyro, getObjectOption(gyro));\n\n    this._rotateControl.scrollable = scrollable;\n    this._zoomControl.scrollable = wheelScrollable;\n\n    this._bindEvents();\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached.\n   * This also will reset CSS cursor to initial.\n   * @ko 인스턴스를 삭제하고 부착된 모든 이벤트 리스너를 제거합니다.\n   * 또한, 캔버스에 적용된 CSS cursor도 제거합니다.\n   * @since 4.0.0\n   */\n  public destroy(): void {\n    this.disable();\n    this._rotateControl.destroy();\n    this._zoomControl.destroy();\n    this._setCursor(BROWSER.CURSOR.NONE);\n  }\n\n  /**\n   * Resize control to match target size.\n   * @ko 컨트롤이 내부에 캐시하고 있는 크기값을 갱신합니다.\n   * @param width New width {@ko 변경된 너비}\n   * @param height New height {@ko 변경된 높이}\n   * @since 4.0.0\n   */\n  public resize(width: number, height: number): void {\n    const camera = this._camera;\n\n    this._rotateControl.resize(camera.fov, camera.aspect, width, height);\n  }\n\n  /**\n   * Enable this control and add event listeners.\n   * @ko 컨트롤을 활성화하고 이벤트 리스너들을 추가합니다.\n   * @since 4.0.0\n   */\n  public async enable(): Promise<void> {\n    if (this._enabled) return;\n\n    if (!this._rotateControl.enableBlocked) {\n      this._rotateControl.enable();\n    }\n\n    if (!this._zoomControl.enableBlocked) {\n      this._zoomControl.enable();\n    }\n\n    if (!this._gyroControl.enableBlocked) {\n      if (await GyroControl.isAvailable()) {\n        this._gyroControl.enable();\n      }\n    }\n\n    this.sync();\n\n    if (this._disableContextMenu) {\n      this._blockContextMenu();\n    }\n\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control and remove all event listeners\n   * @ko 컨트롤을 비활성화하고 모든 이벤트 리스너들을 제거합니다.\n   * @since 4.0.0\n   */\n  public disable(): void {\n    if (!this._enabled) return;\n\n    this._rotateControl.disable();\n    this._zoomControl.disable();\n    this._gyroControl.disable();\n\n    this._restoreContextMenu();\n\n    this._enabled = false;\n  }\n\n  /**\n   * Update control by given deltaTime\n   * @ko 컨트롤을 주어진 시간만큼 업데이트합니다.\n   * @param delta Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\n   * @since 4.0.0\n   * @internal\n   */\n  public update(delta: number): void {\n    const camera = this._camera;\n    const rotateControl = this._rotateControl;\n    const zoomControl = this._zoomControl;\n    const gyroControl = this._gyroControl;\n\n    zoomControl.update(delta);\n    const zoom = hfovToZoom(camera.fov, zoomControl.zoom);\n\n    // Slow down rotation on zoom-in\n    const zoomScale = this._ignoreZoomScale ? 1 : Math.max(zoom, 1);\n    rotateControl.setZoomScale(zoomScale);\n    rotateControl.updateRange(camera, zoom);\n    rotateControl.update(delta);\n\n    const yaw = rotateControl.yaw;\n    const pitch = rotateControl.pitch;\n\n    if (gyroControl.enabled) {\n      gyroControl.update(camera, yaw, pitch, zoom);\n    } else {\n      camera.lookAt({\n        yaw: yaw.val,\n        pitch: pitch.val,\n        zoom\n      });\n    }\n  }\n\n  /**\n   * Synchronize this control's state to current camera state\n   * @ko 컨트롤을 카메라의 현재 상태와 동기화합니다.\n   * @since 4.0.0\n   */\n  public sync(): void {\n    const camera = this._camera;\n\n    this._zoomControl.sync(camera);\n    this._rotateControl.sync(camera);\n  }\n\n  private _blockContextMenu() {\n    const el = this._controlEl;\n\n    el.addEventListener(BROWSER.EVENTS.CONTEXT_MENU, this._preventContextMenu);\n  }\n\n  private _restoreContextMenu() {\n    const el = this._controlEl;\n\n    el.removeEventListener(BROWSER.EVENTS.CONTEXT_MENU, this._preventContextMenu);\n  }\n\n  private _preventContextMenu = (evt: MouseEvent) => {\n    evt.preventDefault();\n  };\n\n  private _setCursor(newCursor: ValueOf<typeof BROWSER.CURSOR>) {\n    if (!this._useGrabCursor && newCursor !== BROWSER.CURSOR.NONE) return;\n\n    const targetEl = this._controlEl;\n    targetEl.style.cursor = newCursor;\n  }\n\n  private _bindEvents() {\n    const rotateControl = this._rotateControl;\n    const zoomControl = this._zoomControl;\n\n    rotateControl.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    rotateControl.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    rotateControl.on(CONTROL_EVENTS.ENABLE, this._onEnable);\n    rotateControl.on(CONTROL_EVENTS.DISABLE, this._onDisable);\n    zoomControl.on(CONTROL_EVENTS.ENABLE, this._onEnable);\n    zoomControl.on(CONTROL_EVENTS.DISABLE, this._onDisable);\n    this._camera.on(CAMERA_EVENTS.ANIMATION_END, this._onCameraAnimationEnd);\n  }\n\n  private _onInputStart = (evt: RotateControlEvents[typeof CONTROL_EVENTS.INPUT_START]) => {\n    if (this._useGrabCursor && !evt.isKeyboard) {\n      this._setCursor(BROWSER.CURSOR.GRABBING);\n    }\n  };\n\n  private _onInputEnd = (evt: RotateControlEvents[typeof CONTROL_EVENTS.INPUT_END]) => {\n    if (this._useGrabCursor && !evt.isKeyboard) {\n      this._setCursor(BROWSER.CURSOR.GRAB);\n    }\n  };\n\n  private _onEnable = ({\n    control,\n    updateCursor\n  }: {\n    control: CameraControl;\n    updateCursor: boolean;\n  }) => {\n    if (updateCursor && this._useGrabCursor) {\n      this._setCursor(BROWSER.CURSOR.GRAB);\n    }\n\n    control.sync(this._camera);\n  };\n\n  private _onDisable = ({\n    updateCursor\n  }: {\n    updateCursor: boolean\n  }) => {\n    if (updateCursor) {\n      this._setCursor(BROWSER.CURSOR.NONE);\n    }\n  };\n\n  private _onCameraAnimationEnd = ({ animation }: { animation: CameraAnimation }) => {\n    animation.getFinishPromise().then(() => {\n      this.sync();\n    });\n  };\n}\n\nexport default PanoControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport TextureVideo from \"./TextureVideo\";\nimport TextureCube from \"./TextureCube\";\n\n/**\n * @hidden\n */\nabstract class Texture {\n  public width: number;\n  public height: number;\n  public flipY: boolean;\n  public wrapS: number;\n  public wrapT: number;\n\n  public constructor({\n    width,\n    height,\n    flipY\n  }: {\n    width: number;\n    height: number;\n    flipY: boolean;\n  }) {\n    this.width = width;\n    this.height = height;\n    this.flipY = flipY;\n    this.wrapS = WebGLRenderingContext.CLAMP_TO_EDGE;\n    this.wrapT = WebGLRenderingContext.CLAMP_TO_EDGE;\n  }\n\n  public destroy() {\n    // DO_NOTHING\n  }\n\n  public isVideo(): this is TextureVideo {\n    return false;\n  }\n\n  public isCube(): this is TextureCube {\n    return false;\n  }\n}\n\nexport default Texture;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture from \"./Texture\";\n\n/**\n * @hidden\n */\nclass Texture2D extends Texture {\n  public source: Exclude<TexImageSource, ImageData>;\n\n  public constructor({\n    source,\n    width,\n    height,\n    flipY\n  }: {\n    source: Exclude<TexImageSource, ImageData>;\n    width: number;\n    height: number;\n    flipY: boolean;\n  }) {\n    super({\n      width,\n      height,\n      flipY\n    });\n\n    this.source = source;\n  }\n}\n\nexport default Texture2D;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture2D from \"./Texture2D\";\n\n/**\n * @hidden\n */\nclass TextureVideo extends Texture2D {\n  public source: HTMLVideoElement;\n\n  public destroy() {\n    const video = this.source;\n\n    video.pause();\n    video.removeAttribute(\"src\");\n    video.load();\n  }\n\n  public isVideo(): this is TextureVideo { return true; }\n\n  public isPaused() {\n    const video = this.source;\n\n    return video.paused || video.ended || video.readyState <= 2;\n  }\n\n  public hasAudio() {\n    const video = this.source as any;\n\n    if (video.audioTracks) {\n      return video.audioTracks.length > 0;\n    }\n\n    if (video.webkitAudioDecodedByteCount != null) {\n      return video.webkitAudioDecodedByteCount > 0;\n    }\n\n    if (video.mozHasAudio != null) {\n      return video.mozHasAudio;\n    }\n\n    // We don't know whether the video has audio or not, return true\n    return true;\n  }\n}\n\nexport default TextureVideo;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture from \"./Texture\";\n\n/**\n * @hidden\n */\nclass TextureCube extends Texture {\n  public sources: TexImageSource[];\n\n  public constructor({\n    sources,\n    width,\n    height,\n    flipY\n  }: {\n    sources: TexImageSource[];\n    width: number;\n    height: number;\n    flipY: boolean;\n  }) {\n    super({\n      width,\n      height,\n      flipY\n    });\n\n    this.sources = sources;\n  }\n\n  public isCube(): this is TextureCube { return true; }\n}\n\nexport default TextureCube;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ImReady from \"@egjs/imready\";\nimport Texture from \"../texture/Texture\";\nimport Texture2D from \"../texture/Texture2D\";\nimport TextureVideo from \"../texture/TextureVideo\";\nimport TextureCube from \"../texture/TextureCube\";\nimport { getObjectOption, isString } from \"../utils\";\nimport { VideoConfig } from \"../type/external\";\nimport { ProjectionOptions } from \"../projection/Projection\";\n\n/**\n * @hidden\n */\nclass TextureLoader {\n  private _loadChecker: ImReady;\n\n  constructor() {\n    this._loadChecker = new ImReady();\n  }\n\n  public async load(src: ProjectionOptions[\"src\"], video: ProjectionOptions[\"video\"]): Promise<Texture> {\n    if (video) {\n      return this.loadVideo(src, getObjectOption(video));\n    } else {\n      if (Array.isArray(src) && src.length > 1) {\n        return this.loadCubeImage(src);\n      } else {\n        const imgSrc = Array.isArray(src) ? src[0] : src;\n        return this.loadImage(imgSrc);\n      }\n    }\n  }\n\n  public async loadImage(src: string | HTMLElement): Promise<Texture2D> {\n    const images = this._toImageArray(src);\n\n    return this._load(images, resolve => {\n      const image = images[0];\n\n      resolve(new Texture2D({\n        source: image,\n        width: image.naturalWidth,\n        height: image.naturalHeight,\n        flipY: true\n      }));\n    });\n  }\n\n  public async loadCubeImage(src: Array<string | HTMLElement>): Promise<TextureCube> {\n    const images = this._toImageArray(src);\n\n    return this._load(images, resolve => {\n      resolve(new TextureCube({\n        sources: images,\n        width: images[0].naturalWidth,\n        height: images[0].naturalHeight,\n        flipY: false\n      }));\n    });\n  }\n\n  public async loadVideo(src: ProjectionOptions[\"src\"], videoConfig: Partial<VideoConfig>): Promise<TextureVideo> {\n    const config: VideoConfig = {\n      autoplay: true,\n      muted: true,\n      loop: false,\n      volume: 1,\n      ...videoConfig,\n    };\n    const video = this._toVideoElement(src, config);\n\n    return this._load([video], resolve => {\n      const { autoplay, muted } = config;\n\n      video.currentTime = 0;\n      if (autoplay && muted) {\n        video.play().catch(() => void 0);\n      }\n\n      resolve(new TextureVideo({\n        source: video,\n        width: video.videoWidth,\n        height: video.videoHeight,\n        flipY: true\n      }));\n    });\n  }\n\n  private _load<T>(content: HTMLElement[], onLoad: (resolve: (value: T) => void) => void): Promise<T> {\n    const loader = this._loadChecker;\n\n    return new Promise((resolve, reject) => {\n      loader.once(\"ready\", evt => {\n        if (evt.errorCount > 0) return;\n\n        onLoad(resolve);\n      });\n\n      loader.once(\"error\", reject);\n      loader.check(content);\n    });\n  }\n\n  private _toImageArray(src: ProjectionOptions[\"src\"]): HTMLImageElement[] {\n    const srcs = Array.isArray(src) ? src : [src];\n\n    return srcs.map(source => {\n      if (isString(source)) {\n        const imgEl = new Image();\n\n        imgEl.crossOrigin = \"anonymous\";\n        imgEl.src = source;\n\n        return imgEl;\n      } else {\n        return source as HTMLImageElement;\n      }\n    });\n  }\n\n  private _toVideoElement(src: ProjectionOptions[\"src\"], {\n    muted,\n    loop,\n    volume\n  }: VideoConfig): HTMLVideoElement {\n    if (src instanceof HTMLVideoElement) {\n      return src;\n    }\n\n    const video = document.createElement(\"video\");\n\n    video.crossOrigin = \"anonymous\";\n    video.playsInline = true;\n    video.setAttribute(\"webkit-playsinline\", \"\");\n    video.muted = muted;\n    video.volume = volume;\n    video.loop = loop;\n\n    if (Array.isArray(src)) {\n      src.forEach(source => this._appendSourceElement(video, source));\n    } else {\n      this._appendSourceElement(video, src);\n    }\n\n    const sourceCount = video.querySelectorAll(\"source\").length;\n    if (sourceCount > 0 && video.readyState < 1) {\n      video.load();\n    }\n\n    return video;\n  }\n\n  private _appendSourceElement(video: HTMLMediaElement, src: string | HTMLElement) {\n    if (src instanceof HTMLSourceElement) {\n      return src;\n    }\n\n    const sourceEl = document.createElement(\"source\");\n    sourceEl.src = src as string;\n    video.appendChild(sourceEl);\n  }\n}\n\nexport default TextureLoader;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * @internal\n */\nclass FrameAnimator {\n  public maxDeltaTime: number;\n\n  private _context: Window | XRSession;\n  private _rafId: number;\n  private _rafTimer: number;\n  private _lastUpdateTime: number;\n\n  /** */\n  public constructor(maxDeltaTime: number, context: Window | XRSession = window) {\n    this.maxDeltaTime = maxDeltaTime;\n\n    this._context = context;\n    this._rafId = -1;\n    this._rafTimer = -1;\n    this._lastUpdateTime = -1;\n  }\n\n  public start(callback: (delta: number, ...args: any[]) => any) {\n    const context = this._context;\n\n    // No context / callback set\n    if (!context || !callback) return;\n\n    // Animation already started\n    if (this._rafId >= 0 || this._rafTimer >= 0) return;\n\n    const loop = (_time: number, frame?: XRFrame) => {\n      const time = Date.now();\n      const delta = Math.min(time - this._lastUpdateTime, this.maxDeltaTime * 1000);\n\n      callback(delta, frame);\n\n      this._lastUpdateTime = time;\n      this._rafId = context.requestAnimationFrame(loop);\n    };\n\n    this._lastUpdateTime = Date.now();\n    this._rafId = context.requestAnimationFrame(loop);\n  }\n\n  public stop() {\n    if (this._rafId >= 0) {\n      this._context.cancelAnimationFrame(this._rafId);\n    }\n\n    if (this._rafTimer >= 0) {\n      clearTimeout(this._rafTimer);\n    }\n\n    this._rafId = -1;\n    this._rafTimer = -1;\n  }\n\n  public changeContext(context: Window | XRSession) {\n    this.stop();\n    this._context = context;\n  }\n}\n\nexport default FrameAnimator;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport * as BROWSER from \"../const/browser\";\n\n/**\n * Automatic resizer that uses both ResizeObserver and window resize event\n */\nclass AutoResizer {\n  private _enabled: boolean;\n  private _resizeObserver: ResizeObserver | null;\n  private _useResizeObserver: boolean;\n  private _onResize: () => any;\n\n  public get useResizeObserver() { return this._useResizeObserver; }\n\n  /**\n   * Returns whether AutoResizer is enabled\n   */\n  public get enabled() { return this._enabled; }\n\n  /** */\n  public constructor(useResizeObserver: boolean, onResize: () => any) {\n    this._useResizeObserver = useResizeObserver;\n\n    this._enabled = false;\n    this._resizeObserver = null;\n    this._onResize = onResize;\n  }\n\n  /**\n   * Enable resizer\n   */\n  public enable(element: HTMLElement): this {\n    if (this._enabled) {\n      this.disable();\n    }\n\n    if (this._useResizeObserver && !!window.ResizeObserver) {\n      const bbox = element.getBoundingClientRect();\n      const resizeImmediate = bbox.width !== 0 || bbox.height !== 0;\n\n      const resizeObserver = new ResizeObserver(resizeImmediate ? this._skipFirstResize : this._onResize);\n\n      resizeObserver.observe(element);\n\n      this._resizeObserver = resizeObserver;\n    } else {\n      window.addEventListener(BROWSER.EVENTS.RESIZE, this._onResize);\n    }\n\n    this._enabled = true;\n\n    return this;\n  }\n\n  /**\n   * Disable resizer\n   */\n  public disable(): this {\n    if (!this._enabled) return this;\n\n    const resizeObserver = this._resizeObserver;\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      this._resizeObserver = null;\n    } else {\n      window.removeEventListener(BROWSER.EVENTS.RESIZE, this._onResize);\n    }\n\n    this._enabled = false;\n\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  private _skipFirstResize = (() => {\n    let isFirstResize = true;\n\n    return (() => {\n      if (isFirstResize) {\n        isFirstResize = false;\n\n        return;\n      }\n      this._onResize();\n    });\n  })();\n}\n\nexport default AutoResizer;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Camera from \"./Camera\";\nimport PanoControl from \"../control/PanoControl\";\nimport View360 from \"../View360\";\nimport * as BROWSER from \"../const/browser\";\nimport { CONTROL_EVENTS } from \"../const/internal\";\nimport { circulate, getObjectOption } from \"../utils\";\n\n/**\n * Options for {@link Autoplay}\n * @ko {@link Autoplay}용 옵션들\n * @since 4.0.0\n */\nexport interface AutoplayOptions {\n  /**\n   * @copy Autoplay#delay\n   */\n  delay: number;\n  /**\n   * @copy Autoplay#delayOnMouseLeave\n   */\n  delayOnMouseLeave: number;\n  /**\n   * @copy Autoplay#speed\n   */\n  speed: number;\n  /**\n   * @copy Autoplay#pauseOnHover\n   */\n  pauseOnHover: boolean;\n  /**\n   * @copy Autoplay#canInterrupt\n   */\n  canInterrupt: boolean;\n  /**\n   * @copy Autoplay#disableOnInterrupt\n   */\n  disableOnInterrupt: boolean;\n}\n\n/**\n * A manager class for autoplay feature.\n * @ko Autoplay 기능의 매니저 클래스.\n * @since 4.0.0\n */\nclass Autoplay {\n  // Options\n  private _delay: number;\n  private _delayOnMouseLeave: number;\n  private _speed: number;\n  private _pauseOnHover: boolean;\n  private _canInterrupt: boolean;\n  private _disableOnInterrupt: boolean;\n\n  // Internal values\n  private _enableBlocked: boolean;\n  private _camera: Camera;\n  private _control: PanoControl;\n  private _element: HTMLElement;\n  private _enabled: boolean;\n  private _interrupted: boolean;\n  private _interruptionTimer: number;\n  private _hovering: boolean;\n\n  /**\n   * Whether autoplay is enabled or not\n   * @ko 자동재생 활성화 여부를 나타내는 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * @hidden\n   */\n  public get enableBlocked() { return this._enableBlocked; }\n  /**\n   * Whether autoplay is updating the camera at the moment\n   * @ko 현재 자동재생이 동작중인지 여부를 나타내는 값\n   * @readonly\n   * @since 4.0.0\n   */\n  public get playing() {\n    return this._enabled && !this._interrupted;\n  }\n\n  /**\n   * Reactivation delay after mouse input in milisecond.\n   * @ko 재활성화되기까지의 시간 (밀리초 단위)\n   * @default 2000\n   * @since 4.0.0\n   */\n  public get delay() { return this._delay; }\n  public set delay(val: number) { this._delay = val; }\n\n  /**\n   * Reactivation delay after mouse leave when using {@link AutoplayOptions#pauseOnHover}\n   * @ko {@link AutoplayOptions#pauseOnHover} 사용시 마우스가 캔버스 영역을 떠난 뒤 자동재생이 다시 활성화되기까지의 시간\n   * @default 0\n   * @since 4.0.0\n   */\n  public get delayOnMouseLeave() { return this._delayOnMouseLeave; }\n  public set delayOnMouseLeave(val: number) { this._delayOnMouseLeave = val; }\n\n  /**\n   * Y-axis(yaw) rotation speed\n   * @ko Y-축 회전(yaw)의 속도\n   * @default 1\n   * @since 4.0.0\n   */\n  public get speed() { return this._speed; }\n  public set speed(val: number) { this._speed = val; }\n\n  /**\n   * Whether to pause rotation on mouse hover\n   * @ko 마우스가 캔버스 영역에 들어왔을 때 자동재생을 정지할지 여부\n   * @default false\n   * @since 4.0.0\n   */\n  public get pauseOnHover() { return this._pauseOnHover; }\n  public set pauseOnHover(val: boolean) { this._pauseOnHover = val; }\n\n  /**\n   * Whether user can interrupt the rotation with click/wheel input\n   * @ko 클릭이나 휠같은 사용자 인터랙션시 자동재생을 멈출지 여부\n   * @default true\n   * @since 4.0.0\n   */\n  public get canInterrupt() { return this._canInterrupt; }\n  public set canInterrupt(val: boolean) { this._canInterrupt = val; }\n\n  /**\n   * Whether to disable autoplay on user interrupt\n   * @ko 사용자 동작에 의해 자동재생이 정지할 때, {@link Autoplay#disable}을 호출하여 자동재생을 영구히 정지할지 여부\n   * @default false\n   * @since 4.0.0\n   */\n  public get disableOnInterrupt() { return this._disableOnInterrupt; }\n  public set disableOnInterrupt(val: boolean) { this._disableOnInterrupt = val; }\n\n  /**\n   * Create new AutoPlayer instance\n   * @param camera - Instance of the {@link Camera} {@ko Camera의 인스턴스}\n   * @param element - Canvas element {@ko 캔버스 엘리먼트}\n   * @param options - Autoplay options {@ko 자동재생 옵션들}\n   * @since 4.0.0\n   */\n  public constructor(viewer: View360, element: HTMLElement, options: boolean | Partial<AutoplayOptions>) {\n    this._camera = viewer.camera;\n    this._control = viewer.control;\n    this._element = element;\n\n    this._enabled = false;\n    this._interrupted = false;\n    this._interruptionTimer = -1;\n    this._hovering = false;\n\n    const {\n      delay = 2000,\n      delayOnMouseLeave = 0,\n      speed = 1,\n      pauseOnHover = false,\n      canInterrupt = true,\n      disableOnInterrupt = false\n    } = getObjectOption(options);\n\n    this._enableBlocked = !options;\n    this._delay = delay;\n    this._delayOnMouseLeave = delayOnMouseLeave;\n    this._speed = speed;\n    this._pauseOnHover = pauseOnHover;\n    this._canInterrupt = canInterrupt;\n    this._disableOnInterrupt = disableOnInterrupt;\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached\n   * @ko 인스턴스를 제거하고 연결된 모든 이벤트 핸들러를 삭제합니다.\n   * @since 4.0.0\n   */\n  public destroy(): void {\n    this.disable();\n  }\n\n  /**\n   * Rotate camera by given deltaTime\n   * @ko 주어진 deltaTime만큼 카메라를 회전시킵니다.\n   * @param deltaTime - Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\n   * @since 4.0.0\n   */\n  public update(deltaTime: number): void {\n    if (!this._enabled) return;\n    if (this._interrupted) {\n      if (this._disableOnInterrupt) {\n        this.disable();\n      }\n\n      return;\n    }\n\n    const camera = this._camera;\n    const delta = -this._speed * deltaTime / 100;\n\n    camera.yaw = circulate(camera.yaw + delta, 0, 360);\n  }\n\n  /**\n   * Enable autoplay and add event listeners.\n   * @ko 자동재생을 활성화하고 이벤트리스너들을 추가합니다.\n   * @since 4.0.0\n   */\n  public enable(): void {\n    const control = this._control;\n    const element = this._element;\n\n    if (this._enabled || control.gyro.enabled) return;\n\n    control.rotate.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.rotate.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    control.zoom.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.zoom.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    control.gyro.on(CONTROL_EVENTS.ENABLE, this._onGyroEnable);\n\n    element.addEventListener(BROWSER.EVENTS.MOUSE_ENTER, this._onMouseEnter, false);\n    element.addEventListener(BROWSER.EVENTS.MOUSE_LEAVE, this._onMouseLeave, false);\n\n    this._enabled = true;\n    this._enableBlocked = false;\n  }\n\n  /**\n   * Enable autoplay after current `delay` value.\n   * @ko 현재의 `delay`값만큼 시간이 지난 다음에 자동재생을 활성화합니다.\n   * @since 4.0.0\n   */\n  public enableAfterDelay() {\n    this.enable();\n    this._interrupted = true;\n    this._setUninterruptedAfterDelay(this._delay);\n  }\n\n  /**\n   * Disable autoplay and remove all event handlers.\n   * @ko 자동재생을 비활성화하고 모든 이벤트 핸들러를 제거합니다.\n   * @since 4.0.0\n   */\n  public disable(): void {\n    if (!this._enabled) return;\n\n    const control = this._control;\n    const element = this._element;\n\n    control.rotate.off(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.rotate.off(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    control.zoom.off(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.zoom.off(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n\n    control.gyro.off(CONTROL_EVENTS.ENABLE, this._onGyroEnable);\n\n    element.removeEventListener(BROWSER.EVENTS.MOUSE_ENTER, this._onMouseEnter, false);\n    element.removeEventListener(BROWSER.EVENTS.MOUSE_LEAVE, this._onMouseLeave, false);\n\n    this._enabled = false;\n    this._interrupted = false;\n    this._hovering = false;\n\n    this._clearTimeout();\n  }\n\n  private _onInputStart = () => {\n    if (!this._canInterrupt) return;\n\n    this._interrupted = true;\n    this._clearTimeout();\n  };\n\n  private _onInputEnd = () => {\n    this._setUninterruptedAfterDelay(this._delay);\n  };\n\n  private _onGyroEnable = () => {\n    this.disable();\n  };\n\n  private _onMouseEnter = () => {\n    if (!this._pauseOnHover) return;\n    this._interrupted = true;\n    this._hovering = true;\n  };\n\n  private _onMouseLeave = () => {\n    if (!this._pauseOnHover) return;\n    this._hovering = false;\n    this._setUninterruptedAfterDelay(this._delayOnMouseLeave);\n  };\n\n  private _setUninterruptedAfterDelay(delay: number): void {\n    if (this._hovering) return;\n\n    this._clearTimeout();\n\n    if (delay > 0) {\n      this._interruptionTimer = window.setTimeout(() => {\n        this._interrupted = false;\n        this._interruptionTimer = -1;\n      }, delay);\n    } else {\n      this._interrupted = false;\n      this._interruptionTimer = -1;\n    }\n  }\n\n  private _clearTimeout(): void {\n    if (this._interruptionTimer >= 0) {\n      window.clearTimeout(this._interruptionTimer);\n      this._interruptionTimer = -1;\n    }\n  }\n}\n\nexport default Autoplay;\n","import { mat4 } from \"gl-matrix\";\nimport Component from \"@egjs/component\";\nimport WebGLContext from \"./WebGLContext\";\nimport GyroControl from \"../control/GyroControl\";\nimport * as BROWSER from \"../const/browser\";\nimport { SESSION_VR, XR_REFERENCE_SPACE } from \"../const/internal\";\nimport { EVENTS } from \"../const/external\";\n\ninterface XRSessionOptions extends XRSessionInit {\n  [key: string]: any;\n}\n\n/**\n * WebXR manager class\n * @ko WebXR 매니저 클래스\n * @since 4.0.0\n */\nclass XRManager extends Component<{\n  /**\n   * An event that fires on entering VR session\n   * @ko VR 세션 진입시에 트리거되는 이벤트\n   * @eventName vrStart\n   * @eventOf XRManager\n   * @version 4.0.0\n   */\n  [EVENTS.VR_START]: {\n    session: XRSession;\n  };\n  /**\n   * An event that fires on exiting VR session\n   * @ko VR 세션에서 나갈 때 트리거되는 이벤트\n   * @eventName vrEnd\n   * @eventOf XRManager\n   * @version 4.0.0\n   */\n  [EVENTS.VR_END]: void;\n}> {\n  private _ctx: WebGLContext;\n  private _xrSession: XRSession | null;\n  private _xrRefSpace: XRReferenceSpace | null;\n  private _options: XRSessionOptions;\n\n  /**\n   * Create new instance.\n   * 새 인스턴스를 생성합니다.\n   * @param ctx - Instance of WebGL context helper {@ko WebGL 콘텍스트 헬퍼의 인스턴스}\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor(ctx: WebGLContext, options: XRSessionOptions = {}) {\n    super();\n\n    this._xrSession = null;\n    this._xrRefSpace = null;\n    this._ctx = ctx;\n    this._options = options;\n  }\n\n  /**\n   * Destroy instance and end XR session if there was any.\n   * @ko 인스턴스를 제거하고, XR 세션이 존재할 경우 종료합니다.\n   * @since 4.0.0\n   */\n  public destroy = () => {\n    this.exit();\n    this.off();\n  };\n\n  /**\n   * Returns WebXR availability.\n   * @ko WebXR 사용 가능 여부를 반환합니다.\n   * @since 4.0.0\n   */\n  public async isAvailable(): Promise<boolean> {\n    // eslint-disable-next-line compat/compat\n    const xr = window.navigator.xr;\n    if (!xr) return false;\n\n    return xr.isSessionSupported(SESSION_VR)\n      .then(available => {\n        return available;\n      }).catch(() => {\n        return false;\n      });\n  }\n\n  /**\n   * Enter VR session\n   * @ko VR 세션에 진입합니다.\n   * @since 4.0.0\n   */\n  public async enter() {\n    const ctx = this._ctx;\n\n    // eslint-disable-next-line compat/compat\n    const xr = window.navigator.xr;\n    if (!xr) return;\n\n    await GyroControl.requestSensorPermission();\n\n    const options = {\n      ...{\n        requiredFeatures: [XR_REFERENCE_SPACE]\n      },\n      ...this._options\n    };\n\n    await ctx.makeXRCompatible();\n\n    const session = await xr.requestSession(SESSION_VR, options);\n    ctx.bindXRLayer(session);\n\n    const refSpace = await session.requestReferenceSpace(XR_REFERENCE_SPACE);\n\n    this._setSession(session, refSpace);\n\n    this.trigger(EVENTS.VR_START, {\n      session\n    });\n  }\n\n  /**\n   * Exit VR session\n   * @ko VR 세션에서 나갑니다.\n   * @since 4.0.0\n   */\n  public exit() {\n    const xrSession = this._xrSession;\n\n    if (xrSession) {\n      xrSession.end()\n        .catch(() => void 0);\n    }\n\n    this._xrSession = null;\n    this._xrRefSpace = null;\n  }\n\n  /**\n   * @hidden\n   */\n  public canRender(frame: XRFrame) {\n    const refSpace = this._xrRefSpace;\n\n    if (!refSpace) return false;\n\n    const pose = frame.getViewerPose(refSpace);\n\n    return !!pose;\n  }\n\n  /**\n   * @hidden\n   */\n  public getEyeParams(frame: XRFrame): Array<{\n    viewport: XRViewport;\n    vMatrix: mat4;\n    pMatrix: mat4;\n  }> | null {\n    const session = frame.session;\n    const pose = frame.getViewerPose(this._xrRefSpace!);\n\n    if (!pose) return null;\n\n    const glLayer = session.renderState.baseLayer;\n\n    if (!glLayer) return null;\n\n    return pose.views.map(view => {\n      const viewport = glLayer.getViewport(view)!;\n      const vMatrix = view.transform.inverse.matrix;\n\n      return {\n        viewport,\n        vMatrix,\n        pMatrix: view.projectionMatrix\n      };\n    });\n  }\n\n  private _setSession(session: XRSession, refSpace: XRReferenceSpace) {\n    this._xrSession = session;\n    this._xrRefSpace = refSpace;\n\n    session.addEventListener(BROWSER.EVENTS.XR_END, this._onSessionEnd);\n  }\n\n  private _onSessionEnd = () => {\n    this.exit();\n    this.trigger(EVENTS.VR_END);\n  }\n}\n\nexport default XRManager;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { vec3 } from \"gl-matrix\";\n\n/**\n * Hotspot data\n * @ko 핫스팟 데이터\n * @since 4.0.0\n */\nclass Hotspot {\n  /**\n   * HTMLElement of the hotspot\n   * @ko 핫스팟의 HTMLElement\n   * @since 4.0.0\n   */\n  public readonly element: HTMLElement;\n  /**\n   * Position to render hotspot\n   * @ko 핫스팟을 렌더링할 위치\n   * @since 4.0.0\n   */\n  public readonly position: vec3;\n\n  public constructor(element: HTMLElement, position: vec3) {\n    this.element = element;\n    this.position = position;\n  }\n}\n\nexport default Hotspot;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { vec2, vec3 } from \"gl-matrix\";\nimport Hotspot from \"./Hotspot\";\nimport Camera from \"../core/Camera\";\nimport WebGLRenderer from \"../core/WebGLRenderer\";\nimport View360Error from \"../core/View360Error\";\nimport { getNullableElement } from \"../utils\";\nimport ERROR from \"../const/error\";\nimport { DEFAULT_CLASS } from \"../const/external\";\nimport { DEG_TO_RAD } from \"../const/internal\";\n\n/**\n * Options for {@link HotspotRenderer}\n * @ko {@link HotspotRenderer}용 옵션들\n * @since 4.0.0\n */\nexport interface HotspotOptions {\n  /**\n   * Apply scale for hotspots, makes their size sync with background panorama image.\n   * @ko 핫스팟에 스케일을 적용해서 배경 파노라마 이미지의 크기 변화와 동일하게 크기를 조절합니다.\n   * @since 4.0.0\n   */\n  zoom: boolean;\n}\n\n/**\n * Hotspot renderer\n * @ko Hotspot 렌더러\n * @since 4.0.0\n */\nclass HotspotRenderer {\n  // Options\n  private _zoom: HotspotOptions[\"zoom\"];\n\n  // Internal properties\n  private _containerEl: HTMLElement | null;\n  private _renderer: WebGLRenderer;\n  private _hotspots: Hotspot[];\n\n  /**\n   * Create new instance\n   * @ko 새 인스턴스를 생성합니다.\n   * @param rootEl - Container element for hotspots {@ko 핫스팟들의 컨테이너 엘리먼트}\n   * @param renderer - instance of WebGLRenderer {@ko WebGLRenderer의 인스턴스}\n   * @param options - Hotspot options {@ko Hotspot 옵션들 }\n   */\n  public constructor(rootEl: HTMLElement, renderer: WebGLRenderer, {\n    zoom = false\n  }: Partial<HotspotOptions>) {\n    this._containerEl = getNullableElement(`.${DEFAULT_CLASS.HOTSPOT_CONTAINER}`, rootEl);\n    this._renderer = renderer;\n    this._hotspots = [];\n\n    this._zoom = zoom;\n  }\n\n  /**\n   * Refresh hotspots by collecting hotspot elements from current hotspot root element\n   * @ko 현재 핫스팟 루트 엘리먼트 내에서 핫스팟 엘리먼트들을 수집하여 갱신합니다.\n   * @throws {ERROR_CODES.INSUFFICIENT_ARGS} if data-position doesn't include all x, y, z values {@ko data-position이 x, y, z좌표를 전부 포함하고 있지 않을 때}\n   */\n  public refresh() {\n    const container = this._containerEl;\n    if (!container) return;\n\n    const hotspotEls = [].slice.apply(container.querySelectorAll(`.${DEFAULT_CLASS.HOTSPOT}`)) as HTMLElement[];\n    this._hotspots = hotspotEls.map(el => this._parseHotspot(el));\n  }\n\n  /**\n   * Render hotspots\n   * @ko 핫스팟들을 렌더링합니다.\n   * @param camera - Instance of Camera {@ko Camera의 인스턴스}\n   */\n  public render(camera: Camera) {\n    const hotspots = this._hotspots;\n    const halfWidth = this._renderer.width * 0.5;\n    const halfHeight = this._renderer.height * 0.5;\n    const zoom = camera.zoom;\n    const centerTransform = \"translate(-50%, -50%)\";\n    const zoomTransform = this._zoom ? `scale(${zoom})` : \"\";\n\n    hotspots.forEach(hotspot => {\n      const position = hotspot.position;\n      const relPos = vec3.create();\n\n      vec3.copy(relPos, position);\n      vec3.transformMat4(relPos, relPos, camera.viewMatrix);\n      vec3.transformMat4(relPos, relPos, camera.projectionMatrix);\n\n      if (relPos[2] > 1 || relPos[2] < 0) {\n        hotspot.element.classList.remove(DEFAULT_CLASS.HOTSPOT_VISIBLE);\n        return;\n      }\n\n      const screenPos = vec2.fromValues(\n        relPos[0] * halfWidth + halfWidth,\n        -relPos[1] * halfHeight + halfHeight\n      );\n\n      hotspot.element.classList.add(DEFAULT_CLASS.HOTSPOT_VISIBLE);\n      hotspot.element.style.transform = [\n        centerTransform,\n        `translate(${screenPos[0]}px, ${screenPos[1]}px)`,\n        zoomTransform\n      ].join(\" \");\n    });\n  }\n\n  private _parseHotspot(element: HTMLElement): Hotspot {\n    const yawStr = element.dataset.yaw;\n    const pitchStr = element.dataset.pitch;\n    const positionStr = element.dataset.position;\n\n    if (yawStr || pitchStr) {\n      const yaw = yawStr ? parseFloat(yawStr) : 0;\n      const pitch = pitchStr ? parseFloat(pitchStr) : 0;\n\n      const position = this._yawPitchToVec3(yaw, pitch);\n\n      return new Hotspot(element, position);\n    } else if (positionStr) {\n      const pos: number[] = positionStr.split(\" \").map(val => parseFloat(val));\n      if (pos.length < 3) {\n        throw new View360Error(ERROR.MESSAGES.INSUFFICIENT_ARGS(positionStr, \"hotspot attribute \\\"data-position\\\"\"), ERROR.CODES.INSUFFICIENT_ARGS);\n      }\n\n      return new Hotspot(element, vec3.fromValues(pos[0], pos[1], pos[2]));\n    } else {\n      // Place hotspot at yaw: 0, pitch: 0\n      const defaultPos = vec3.fromValues(0, 0, -1);\n\n      return new Hotspot(element, defaultPos);\n    }\n  }\n\n  private _yawPitchToVec3(yaw: number, pitch: number) {\n    const yawRad = yaw * DEG_TO_RAD;\n    const pitchRad = pitch * DEG_TO_RAD;\n    const position = vec3.create();\n\n    position[1] = Math.sin(pitchRad);\n    position[2] = Math.cos(pitchRad);\n\n    position[0] = position[2] * Math.sin(-yawRad);\n    position[2] = -position[2] * Math.cos(-yawRad);\n\n    return position;\n  }\n}\n\nexport default HotspotRenderer;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"../geometry/Geometry\";\nimport { VAO } from \"../type/internal\";\n\n/**\n * @hidden\n */\nclass VertexArrayObject {\n  public readonly obj: VAO | null;\n  public readonly geometry: Geometry;\n  public readonly buffers: {\n    indicies: WebGLBuffer;\n    position: WebGLBuffer;\n    uv: WebGLBuffer;\n  }\n\n  public get count() { return this.geometry.indicies.count; }\n\n  constructor(obj: VAO | null, geometry: Geometry, buffers: VertexArrayObject[\"buffers\"]) {\n    this.obj = obj;\n    this.geometry = geometry;\n    this.buffers = buffers;\n  }\n}\n\nexport default VertexArrayObject;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { mat4 } from \"gl-matrix\";\nimport Uniform from \"../uniform/Uniform\";\nimport Camera from \"./Camera\";\nimport Object3D from \"./Object3D\";\nimport ShaderProgram from \"./ShaderProgram\";\nimport View360Error from \"./View360Error\";\nimport VertexArrayObject from \"./VertexArrayObject\";\nimport VertexData from \"./VertexData\";\nimport Texture from \"../texture/Texture\";\nimport Geometry from \"../geometry/Geometry\";\nimport * as BROWSER from \"../const/browser\";\nimport ERROR from \"../const/error\";\nimport { DEFAULT_CLASS } from \"../const/external\";\nimport { UniformLocations } from \"../type/internal\";\n\n/**\n * @hidden\n */\nclass WebGLContext {\n  private _canvas: HTMLCanvasElement;\n  private _gl: WebGLRenderingContext | WebGL2RenderingContext;\n  private _contextLost: boolean;\n  private _maxTextureSize: number;\n  private _isWebGL2: boolean;\n  private _debug: boolean;\n  private _extensions: {\n    vao: OES_vertex_array_object | null;\n    loseContext: WEBGL_lose_context | null;\n  };\n\n  public get canvas() { return this._canvas; }\n  public get maxTextureSize() { return this._maxTextureSize; }\n  public get isWebGL2() { return this._isWebGL2; }\n  public get supportVAO() { return this._isWebGL2 || !!this._extensions.vao; }\n  public get lost() { return this._contextLost; }\n  public get debug() { return this._debug; }\n\n  public constructor(canvas: HTMLCanvasElement, debug: boolean) {\n    this._canvas = canvas;\n    this._contextLost = false;\n    this._debug = debug;\n    this._extensions = {\n      vao: null,\n      loseContext: null\n    };\n  }\n\n  public init() {\n    const canvas = this._canvas;\n\n    const { gl, isWebGL2 } = this._getContext(canvas);\n\n    this._gl = gl;\n    this._maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this._isWebGL2 = isWebGL2;\n\n    if (!this._isWebGL2) {\n      this._extensions.vao = gl.getExtension(\"OES_vertex_array_object\");\n    }\n\n    this._extensions.loseContext = gl.getExtension(\"WEBGL_lose_context\");\n\n    canvas.addEventListener(BROWSER.EVENTS.CONTEXT_LOST, this._onContextLost);\n    canvas.addEventListener(BROWSER.EVENTS.CONTEXT_RESTORED, this._onContextRestore);\n\n    // gl.enable(gl.DEPTH_TEST);\n  }\n\n  public destroy() {\n    const gl = this._gl;\n    const canvas = this._canvas;\n\n    if (gl) {\n      // gl is not defined when destroy is called before init\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n\n    canvas.removeEventListener(BROWSER.EVENTS.CONTEXT_LOST, this._onContextLost);\n    canvas.removeEventListener(BROWSER.EVENTS.CONTEXT_RESTORED, this._onContextRestore);\n  }\n\n  public forceLoseContext() {\n    const extension = this._extensions.loseContext;\n\n    if (!extension) return;\n\n    extension.loseContext();\n  }\n\n  public forceRestoreContext() {\n    const extension = this._extensions.loseContext;\n\n    if (!extension) return;\n\n    extension.restoreContext();\n  }\n\n  public clear() {\n    const gl = this._gl;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n  }\n\n  public resize() {\n    const gl = this._gl;\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n\n  public viewport(x: number, y: number, width: number, height: number) {\n    const gl = this._gl;\n\n    gl.viewport(x, y, width, height);\n  }\n\n  public createVAO(geometry: Geometry, shaderProgram: ShaderProgram) {\n    const nativeVAO = this._createNativeVAO();\n\n    const vao = new VertexArrayObject(nativeVAO, geometry, {\n      indicies: this._createBuffer(),\n      position: this._createBuffer(),\n      uv: this._createBuffer()\n    });\n\n    if (nativeVAO) {\n      this._bindNativeVAO(nativeVAO);\n      this._supplyGeometryData(vao, shaderProgram);\n      this._bindNativeVAO(null);\n      this._unbindBuffers();\n    }\n\n    return vao;\n  }\n\n  public draw(vao: VertexArrayObject, shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    if (vao.obj) {\n      this._bindNativeVAO(vao.obj);\n    } else {\n      this._supplyGeometryData(vao, shaderProgram);\n    }\n\n    gl.drawElements(gl.TRIANGLES, vao.count, gl.UNSIGNED_SHORT, 0);\n\n    if (vao.obj) {\n      this._bindNativeVAO(null);\n    } else {\n      this._unbindBuffers();\n    }\n  }\n\n  public releaseVAO(vao: VertexArrayObject) {\n    if (vao.obj) {\n      this._deleteNativeVAO(vao.obj);\n    }\n\n    this._deleteBuffer(vao.buffers.indicies);\n    this._deleteBuffer(vao.buffers.position);\n    this._deleteBuffer(vao.buffers.uv);\n  }\n\n  public getUniformLocations<T extends Record<string, Uniform>>(program: WebGLProgram, uniforms: T): UniformLocations<T> {\n    const gl = this._gl;\n\n    const uniformLocations = Object.keys(uniforms).reduce((locations, key) => {\n      locations[key as keyof T] = gl.getUniformLocation(program, key)!;\n\n      return locations;\n    }, {} as UniformLocations<T>);\n\n    return {\n      ...this._getCommonUniformLocations(program),\n      ...uniformLocations\n    };\n  }\n\n  public updateCommonUniforms(entity: Object3D, camera: Camera, shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    const uniformLocations = shaderProgram.uniformLocations;\n\n    // We're using \"matrix\"(=local matrix) here for efficiency\n    // As projection doesn't require world matrix, as it doesn't have any parent or child\n    const matrix = entity.matrix;\n    const mvMatrix = mat4.create();\n    mat4.multiply(mvMatrix, camera.viewMatrix, matrix);\n\n    gl.uniformMatrix4fv(uniformLocations.uMVMatrix, false, mvMatrix);\n    gl.uniformMatrix4fv(uniformLocations.uPMatrix, false, camera.projectionMatrix);\n  }\n\n  public updateVRUniforms(shaderProgram: ShaderProgram, mvMatrix: mat4, pMatrix: mat4, eyeIndex: number) {\n    const gl = this._gl;\n\n    const uniformLocations = shaderProgram.uniformLocations;\n\n    gl.uniformMatrix4fv(uniformLocations.uMVMatrix, false, mvMatrix);\n    gl.uniformMatrix4fv(uniformLocations.uPMatrix, false, pMatrix);\n\n    if (uniformLocations.uEye) {\n      gl.uniform1f(uniformLocations.uEye, eyeIndex);\n    }\n  }\n\n  public updateUniforms(shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    const uniforms = shaderProgram.uniforms;\n    const uniformLocations = shaderProgram.uniformLocations;\n\n    for (const key in uniforms) {\n      const uniform = uniforms[key];\n      const location = uniformLocations[key];\n\n      if (!uniform) continue;\n\n      if (uniform.needsUpdate) {\n        uniform.update(gl, location, this._isWebGL2);\n      }\n    }\n  }\n\n  public releaseShaderResources(shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    const uniforms = shaderProgram.uniforms;\n\n    for (const key in uniforms) {\n      const uniform = uniforms[key];\n\n      if (!uniform) continue;\n\n      if (uniform.needsUpdate) {\n        uniform.destroy(gl);\n      }\n    }\n\n    gl.deleteProgram(shaderProgram.program);\n  }\n\n  public useProgram(shaderProgram: ShaderProgram) {\n    const gl = this._gl;\n\n    gl.useProgram(shaderProgram.program);\n  }\n\n  public createProgram(vertexShader: string, fragmentShader: string) {\n    const gl = this._gl;\n    const program = gl.createProgram()!;\n\n    const vs = this._compileShader(gl.VERTEX_SHADER, vertexShader);\n    const fs = this._compileShader(gl.FRAGMENT_SHADER, fragmentShader);\n\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.bindAttribLocation(program, 0, \"position\");\n    gl.bindAttribLocation(program, 1, \"uv\");\n    gl.linkProgram(program);\n\n    if (this._debug && !gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      let shaderLog: string | null = null;\n\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        shaderLog = gl.getShaderInfoLog(vs);\n      } else if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        shaderLog = gl.getShaderInfoLog(fs);\n      }\n\n      throw new View360Error(ERROR.MESSAGES.FAILED_LINKING_PROGRAM(gl.getProgramInfoLog(program), shaderLog), ERROR.CODES.FAILED_LINKING_PROGRAM);\n    }\n\n    gl.deleteShader(vs);\n    gl.deleteShader(fs);\n\n    return program;\n  }\n\n  public createWebGLTexture(texData: Texture): WebGLTexture {\n    const gl = this._gl;\n    const texture = gl.createTexture()!;\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, texData.wrapS);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, texData.wrapT);\n\n    if (!texData.isVideo() && this._isWebGL2) {\n      const gl2 = gl as WebGL2RenderingContext;\n\n      gl2.texStorage2D(gl2.TEXTURE_2D, 1, gl2.RGBA8, texData.width, texData.height);\n    }\n\n    return texture;\n  }\n\n  public createWebGLCubeTexture(texData: Texture, size: number): WebGLTexture {\n    const gl = this._gl;\n    const texture = gl.createTexture()!;\n\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, texData.wrapS);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, texData.wrapT);\n\n    if (this._isWebGL2) {\n      const gl2 = gl as WebGL2RenderingContext;\n\n      gl2.texStorage2D(gl2.TEXTURE_CUBE_MAP, 1, gl2.RGBA8, size, size);\n    }\n\n    return texture;\n  }\n\n  public async makeXRCompatible() {\n    const gl = this._gl;\n    const attributes = gl.getContextAttributes();\n\n    if (attributes && attributes.xrCompatible !== true) {\n      await gl.makeXRCompatible();\n    }\n  }\n\n  public bindXRLayer(session: XRSession) {\n    const gl = this._gl;\n    const xrLayer = new XRWebGLLayer(session, gl);\n    session.updateRenderState({ baseLayer: xrLayer });\n  }\n\n  public bindXRFrame(frame: XRFrame) {\n    const gl = this._gl;\n    const session = frame.session;\n    const baseLayer = session.renderState.baseLayer!;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, baseLayer.framebuffer);\n  }\n\n  public useDefaultFrameBuffer() {\n    const gl = this._gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  private _createBuffer(): WebGLBuffer {\n    return this._gl.createBuffer()!;\n  }\n\n  private _deleteBuffer(buffer: WebGLBuffer) {\n    return this._gl.deleteBuffer(buffer);\n  }\n\n  private _createNativeVAO() {\n    const gl = this._gl;\n\n    if (this._isWebGL2) {\n      return (gl as WebGL2RenderingContext).createVertexArray()!;\n    } else {\n      const ext = this._extensions.vao;\n\n      return ext?.createVertexArrayOES() || null;\n    }\n  }\n\n  private _bindNativeVAO(vao: WebGLVertexArrayObject | null) {\n    const gl = this._gl;\n\n    if (this._isWebGL2) {\n      (gl as WebGL2RenderingContext).bindVertexArray(vao);\n    } else {\n      const ext = this._extensions.vao;\n\n      ext?.bindVertexArrayOES(vao);\n    }\n  }\n\n  private _deleteNativeVAO(vao: WebGLVertexArrayObject | null) {\n    const gl = this._gl;\n\n    if (this._isWebGL2) {\n      (gl as WebGL2RenderingContext).deleteVertexArray(vao);\n    } else {\n      const ext = this._extensions.vao;\n\n      ext?.deleteVertexArrayOES(vao);\n    }\n  }\n\n  private _supplyGeometryData(vao: VertexArrayObject, shaderProgram: ShaderProgram) {\n    const geometry = vao.geometry;\n\n    this._supplyIndiciesData(geometry.indicies, vao.buffers.indicies);\n    this._supplyAttributeData(geometry.vertices, shaderProgram.program, \"position\", vao.buffers.position);\n    this._supplyAttributeData(geometry.uvs, shaderProgram.program, \"uv\", vao.buffers.uv);\n  }\n\n  private _unbindBuffers() {\n    const gl = this._gl;\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  private _supplyIndiciesData(indicies: VertexData<Uint16Array>, buffer: WebGLBuffer) {\n    const gl = this._gl;\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indicies.data, gl.STATIC_DRAW);\n  }\n\n  private _supplyAttributeData(attribute: VertexData<Float32Array>, program: WebGLProgram, name: string, buffer: WebGLBuffer) {\n    const gl = this._gl;\n    const attribLocation = gl.getAttribLocation(program, name);\n\n    // Attribute not used\n    if (attribLocation < 0) return;\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, attribute.data, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(attribLocation, attribute.itemSize, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(attribLocation);\n  }\n\n  private _compileShader(type: number, src: string) {\n    const gl = this._gl;\n    const shader = gl.createShader(type)!;\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    return shader;\n  }\n\n  private _getCommonUniformLocations(program: WebGLProgram) {\n    const gl = this._gl;\n\n    return {\n      uMVMatrix: gl.getUniformLocation(program, \"uMVMatrix\")!,\n      uPMatrix: gl.getUniformLocation(program, \"uPMatrix\")!\n    };\n  }\n\n  private _getContext(canvas: HTMLCanvasElement): {\n    gl: WebGLRenderingContext | WebGL2RenderingContext;\n    isWebGL2: boolean;\n  } {\n    const webglIdentifiers = [\"webgl2\", \"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\n    let context: WebGLRenderingContext | null = null;\n    let isWebGL2 = false;\n    const contextAttributes = {\n      preserveDrawingBuffer: false,\n      antialias: false\n    };\n\n    const onWebglContextCreationError = e => e.statusMessage;\n\n    canvas.addEventListener(BROWSER.EVENTS.CONTEXT_CREATE_ERROR, onWebglContextCreationError);\n\n    for (const identifier of webglIdentifiers) {\n      try {\n        context = canvas.getContext(identifier, contextAttributes) as WebGLRenderingContext;\n        isWebGL2 = identifier === \"webgl2\";\n      } catch (t) {} // eslint-disable-line no-empty\n      if (context) {\n        break;\n      }\n    }\n\n    canvas.removeEventListener(BROWSER.EVENTS.CONTEXT_CREATE_ERROR, onWebglContextCreationError);\n\n    if (!context) {\n      throw new View360Error(ERROR.MESSAGES.WEBGL_NOT_SUPPORTED, ERROR.CODES.WEBGL_NOT_SUPPORTED);\n    }\n\n    return {\n      gl: context,\n      isWebGL2\n    };\n  }\n\n  private _onContextLost = () => {\n    const canvas = this._canvas;\n    canvas.classList.add(DEFAULT_CLASS.CTX_LOST);\n    this._contextLost = true;\n  };\n\n  private _onContextRestore = () => {\n    const canvas = this._canvas;\n    canvas.classList.remove(DEFAULT_CLASS.CTX_LOST);\n    this._contextLost = false;\n  };\n}\n\nexport default WebGLContext;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { mat4 } from \"gl-matrix\";\nimport Camera from \"./Camera\";\nimport Projection from \"../projection/Projection\";\nimport WebGLContext from \"./WebGLContext\";\nimport XRManager from \"./XRManager\";\n\n/**\n * Projection renderer, based on WebGL\n * @ko WebGL 기반의 프로젝션 렌더러\n * @since 4.0.0\n */\nclass WebGLRenderer {\n  private _canvas: HTMLCanvasElement;\n  private _elementSize: { x: number, y: number };\n  private _pixelRatio: number;\n\n  public readonly ctx: WebGLContext;\n\n  /**\n   * Canvas element\n   * @ko 캔버스 엘리먼트\n   * @since 4.0.0\n   */\n  public get canvas() { return this._canvas; }\n  /**\n   * Canvas's width (`devicePixelRatio` is not applied)\n   * @ko 캔버스의 보이는 너비 (`devicePixelRatio`가 적용되지 않은)\n   * @since 4.0.0\n   */\n  public get width() { return this._elementSize.x; }\n  /**\n   * Canvas's height (`devicePixelRatio` is not applied)\n   * @ko 캔버스의 높이 (`devicePixelRatio`가 적용되지 않은)\n   * @since 4.0.0\n   */\n  public get height() { return this._elementSize.y; }\n  /**\n   * Current `devicePixelRatio` value.\n   * @ko 현재 `devicePixelRatio` 값.\n   * @since 4.0.0\n   * @example\n   * ```js\n   * cosnt renderingWidth = view360.renderer.width * view360.renderer.pixelRatio;\n   * ```\n   */\n  public get pixelRatio() { return this._pixelRatio; }\n  /**\n   * Width / height ratio (= width / height)\n   * @ko 너비 / 높이의 비율 (= width / height)\n   * @since 4.0.0\n   * @example\n   * ```js\n   * const aspect = view360.renderer.width / view360.renderer.pixelRatio;\n   * assert(aspect === view360.renderer.aspect);\n   * ```\n   */\n  public get aspect() { return this._elementSize.x / this._elementSize.y; }\n\n  /**\n   * Create new instance\n   * @ko 새 인스턴스를 생성합니다.\n   * @param canvas - Canvas element {@ko 캔버스 엘리먼트}\n   * @param debug - Whether to enable WebGL debugging {@ko WebGL debug 활성화 여부 }\n   */\n  public constructor(canvas: HTMLCanvasElement, debug: boolean) {\n    this._canvas = canvas;\n    this._elementSize = { x: 0, y: 0 };\n    this._pixelRatio = 1;\n    this.ctx = new WebGLContext(canvas, debug);\n  }\n\n  /**\n   * Destroy instance and release all resources.\n   * @ko 인스턴스를 제거하고 사용된 리소스를 전부 해제합니다.\n   * @since 4.0.0\n   */\n  public destroy() {\n    const canvas = this._canvas;\n\n    this.ctx.destroy();\n    canvas.width = 1;\n    canvas.height = 1;\n  }\n\n  /**\n   * Resize canvas and renew inner size cache.\n   * @ko 캔버스의 크기를 재계산해서 내부의 사이즈 캐시값을 갱신합니다.\n   * @since 4.0.0\n   */\n  public resize() {\n    const canvas = this._canvas;\n    const canvasSize = this._elementSize;\n    const devicePixelRatio = window.devicePixelRatio;\n\n    canvasSize.x = canvas.clientWidth;\n    canvasSize.y = canvas.clientHeight;\n\n    canvas.width = canvasSize.x * devicePixelRatio;\n    canvas.height = canvasSize.y * devicePixelRatio;\n\n    this._pixelRatio = devicePixelRatio;\n    this.ctx.resize();\n  }\n\n  /**\n   * Render projection\n   * @ko 프로젝션을 렌더링합니다.\n   * @param projection - Projection to render {@ko 렌더링할 프로젝션}\n   * @param cameraa - Camera instance {@ko 카메라의 인스턴스}\n   * @since 4.0.0\n   */\n  public render(projection: Projection, camera: Camera) {\n    const ctx = this.ctx;\n    const mesh = projection.getMesh();\n    if (ctx.lost || !mesh) return;\n\n    ctx.clear();\n    ctx.useProgram(mesh.program);\n    ctx.updateCommonUniforms(mesh, camera, mesh.program);\n    projection.update(camera);\n    ctx.updateUniforms(mesh.program);\n    ctx.draw(mesh.vao, mesh.program);\n  }\n\n  /**\n   * Render VR frame, only used for rendering frames inside VR sessions.\n   * @ko VR 프레임을 렌더링합니다. VR 세션 진입 도중에만 사용됩니다.\n   * @internal\n   * @param projection - Projection to render {@ko 렌더링할 프로젝션}\n   * @param vr - Instance of XRManager {@ko XRManager의 인스턴스}\n   * @param frame - VR frame {@ko VR 프레임}\n   * @since 4.0.0\n   */\n  public renderVR(projection: Projection, vr: XRManager, frame: XRFrame) {\n    const ctx = this.ctx;\n    const mesh = projection.getMesh();\n    const eyeParams = vr.getEyeParams(frame);\n\n    if (!eyeParams || !mesh) return;\n\n    ctx.bindXRFrame(frame);\n    ctx.useProgram(mesh.program);\n    ctx.updateUniforms(mesh.program);\n\n    eyeParams.forEach((eye, eyeIndex) => {\n      const viewport = eye.viewport;\n      // We're using \"mesh.matrix\"(=local matrix) here for efficiency\n      // As projection doesn't require world matrix, as it doesn't have any parent or child\n      const mvMatrix = mat4.multiply(mat4.create(), eye.vMatrix, mesh.matrix);\n\n      ctx.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n      ctx.updateVRUniforms(mesh.program, mvMatrix, eye.pMatrix, eyeIndex);\n      ctx.draw(mesh.vao, mesh.program);\n    });\n  }\n}\n\nexport default WebGLRenderer;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport Camera, { CameraOptions } from \"./core/Camera\";\nimport PanoControl, { PanoControlOptions } from \"./control/PanoControl\";\nimport TextureLoader from \"./core/TextureLoader\";\nimport FrameAnimator from \"./core/FrameAnimator\";\nimport AutoResizer from \"./core/AutoResizer\";\nimport Autoplay, { AutoplayOptions } from \"./core/Autoplay\";\nimport XRManager from \"./core/XRManager\";\nimport View360Error from \"./core/View360Error\";\nimport Projection from \"./projection/Projection\";\nimport HotspotRenderer, { HotspotOptions } from \"./hotspot/HotspotRenderer\";\nimport WebGLRenderer from \"./core/WebGLRenderer\";\nimport Texture from \"./texture/Texture\";\nimport View360Plugin from \"./plugin/View360Plugin\";\nimport ERROR from \"./const/error\";\nimport { CONTROL_EVENTS } from \"./const/internal\";\nimport { DEFAULT_CLASS, EVENTS } from \"./const/external\";\nimport { findCanvas, getElement } from \"./utils\";\nimport * as EVENT_TYPES from \"./type/events\";\nimport { EventParams } from \"./type/utils\";\n\n/**\n * Events that {@link View360} can trigger\n * @ko {@link View360}가 트리거할 수 있는 이벤트들\n * @see [Detailed Example](/docs/events/ready)\n * @since 4.0.0\n */\nexport interface View360Events {\n  [EVENTS.READY]: EVENT_TYPES.ReadyEvent;\n  [EVENTS.LOAD_START]: EVENT_TYPES.LoadStartEvent;\n  [EVENTS.LOAD]: EVENT_TYPES.LoadEvent;\n  [EVENTS.PROJECTION_CHANGE]: EVENT_TYPES.ProjectionChangeEvent;\n  [EVENTS.RESIZE]: EVENT_TYPES.ResizeEvent;\n  [EVENTS.BEFORE_RENDER]: EVENT_TYPES.BeforeRenderEvent;\n  [EVENTS.RENDER]: EVENT_TYPES.RenderEvent;\n  [EVENTS.INPUT_START]: EVENT_TYPES.InputStartEvent;\n  [EVENTS.INPUT_END]: EVENT_TYPES.InputEndEvent;\n  [EVENTS.VIEW_CHANGE]: EVENT_TYPES.ViewChangeEvent;\n  [EVENTS.STATIC_CLICK]: EVENT_TYPES.StaticClickEvent;\n  [EVENTS.VR_START]: EVENT_TYPES.VRStartEvent;\n  [EVENTS.VR_END]: EVENT_TYPES.VREndEvent;\n}\n\n/**\n * Options for {@link View360}\n * @ko {@link View360}용 옵션들\n * @see [Detailed Example](/docs/options)\n * @since 4.0.0\n */\nexport interface View360Options extends CameraOptions, PanoControlOptions {\n  projection: Projection | null;\n  hotspot: Partial<HotspotOptions>;\n  autoplay: boolean | Partial<AutoplayOptions>;\n  autoInit: boolean;\n  autoResize: boolean;\n  canvasSelector: string;\n  useResizeObserver: boolean;\n  tabIndex: number | null;\n  on: Partial<{ [key in keyof View360Events]: (evt: View360Events[key]) => any }>;\n  plugins: View360Plugin[];\n  maxDeltaTime: number;\n  debug: boolean;\n}\n\n/**\n * Panorama 360 image viewer\n * @ko 파노라마 360 이미지 뷰어\n * @since 4.0.0\n * @see View360Options\n * @see View360Events\n */\nclass View360 extends Component<View360Events> {\n  /**\n   * Current version string of the View360\n   * @ko View360의 현재 버젼 문자열\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * // If the installed version of the View360 is v4.0.0, View360.VERSION is equal to \"4.0.0\"\n   * console.log(View360.VERSION) // 4.0.0\n   * ```\n   */\n  public static readonly VERSION = \"#__VERSION__#\";\n\n  private _rootEl: HTMLElement;\n  private _renderer: WebGLRenderer;\n  private _camera: Camera;\n  private _control: PanoControl;\n  private _animator: FrameAnimator;\n  private _autoplay: Autoplay;\n  private _hotspot: HotspotRenderer;\n  private _projection: Projection | null;\n  private _autoResizer: AutoResizer;\n  private _vr: XRManager;\n  private _plugins: View360Plugin[];\n  private _initialized: boolean;\n\n  private _autoInit: View360Options[\"autoInit\"];\n  private _autoResize: View360Options[\"autoResize\"];\n  private _canvasSelector: View360Options[\"canvasSelector\"];\n  private _useResizeObserver: View360Options[\"useResizeObserver\"];\n  private _tabIndex: View360Options[\"tabIndex\"];\n  private _debug: View360Options[\"debug\"];\n\n  /**\n   * Root element (`.view360-container`)\n   * @ko 루트 엘리먼트 (`.view360-container`)\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```html\n   * <div id=\"viewer\" class=\"view360-container\">\n   *   <canvas class=\"view360-canvas\"></canvas>\n   * </div>\n   * ```\n   * ```ts\n   * import View360 from \"@egjs/view360\";\n   *\n   * const viewer = new View360(\"#viewer\");\n   * console.log(viewer.rootEl); // Element with id \"viewer\"\n   * ```\n   */\n  public get rootEl() { return this._rootEl; }\n  /**\n   * Projection renderer.\n   * @ko 프로젝션 렌더러.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get renderer() { return this._renderer; }\n  /**\n   * Projection camera.\n   * @ko 프로젝션 카메라.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get camera() { return this._camera; }\n  /**\n   * Rotate/Zoom Controller.\n   * @ko 회전/줌 컨트롤러.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get control() { return this._control; }\n  /**\n   * WebXR-based VR manager.\n   * @ko WebXR 기반의 VR 기능 매니저 인스턴스.\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * // Example: Enter VR\n   * // This must be called on user interaction, else will be rejected.\n   * viewer.vr.enter();\n   * ```\n   */\n  public get vr() { return this._vr; }\n  /**\n   * Hotspot renderer.\n   * You can also change options of {@link View360Options#hotspot} with this.\n   * @ko 핫스팟 렌더러 인스턴스.\n   * {@link View360Options#hotspot} 옵션 변경도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get hotspot() { return this._hotspot; }\n  /**\n   * An array of plugins added.\n   * @ko 추가된 플러그인의 배열\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   plugins: [new ControlBar()]\n   * });\n   *\n   * console.log(viewer.plugins); // [ControlBar]\n   *\n   * viewer.addPlugins(new LoadingSpinner()) // [ControlBar, LoadingSpinner];\n   * ```\n   */\n  public get plugins() { return this._plugins; }\n  /**\n   * A instance of {@link Projection} that currently enabled. `null` if not initialized yet.\n   * You should call {@link View360#load} to change panorama src or projection type.\n   * @ko 현재 사용중인 {@link Projection}의 인스턴스. 프로젝션을 활성화하지 않았을 경우 `null`입니다.\n   * 파노라마 이미지 소스나 프로젝션 타입을 변경하려면 {@link View360#load}를 호출하면 됩니다.\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * const viewer = new View360\n   * ```\n   */\n  public get projection() { return this._projection; }\n  public set projection(val: View360Options[\"projection\"]) {\n    if (this._initialized && val) {\n      this.load(val);\n    } else {\n      this._projection = val;\n    }\n  }\n  /**\n   * A boolean value whether {@link View360#init init()} is called before.\n   * @ko {@link View360#init init()}이 호출되었는지 여부를 가리키는 값\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el\", { autoInit: false });\n   *\n   * console.log(viewer.initialized); // false\n   *\n   * await viewer.init();\n   *\n   * console.log(viewer.initialized); // true\n   * ```\n   */\n  public get initialized() { return this._initialized; }\n  /**\n   * Instance of the Autoplay manager.\n   * You can also change {@link View360Options#autoplay} options with this.\n   * @ko Autoplay 기능의 매니저 인스턴스.\n   * 이 인스턴스를 통해 {@link View360Options#autoplay} 옵션을 변경하는 것도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   * @example\n   * ```ts\n   * // Disable autoplay\n   * viewer.autoplay.disable();\n   * ```\n   */\n  public get autoplay() { return this._autoplay; }\n  /**\n   * When this value is `true` and {@link View360Options#projection} is set, {@link View360#init init()} will be called automatically when instance is created.\n   * @ko 이 값이 `true`이고, {@link View360Options#projection}이 설정되었으면, 인스턴스 생성 시점에 자동으로 {@link View360#init init()}을 호출합니다.\n   * @default true\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * import View360, { EquirectProjection, EVENTS } from \"@egjs/view360\";\n   *\n   * // viewer.init() is called on instance creation\n   * // But as `init` is asynchronous, you should wait for \"ready\" event if you want to do something after initialization.\n   * const viewer = new View360(\"#el_id\", {\n   *   autoInit: true,\n   *   projection: new EquirectProjection({ src: \"SRC_TO_URL\" })\n   * });\n   *\n   * console.log(viewer.initialized); // false, as `init` is asynchronous\n   *\n   * viewer.once(EVENTS.READY, () => {\n   *   console.log(viewer.initialized); // true\n   * });\n   * ```\n   */\n  public get autoInit() { return this._autoInit; }\n  /**\n   * When `true`, {@link View360#resize} is called when the canvas size is changed.\n   * @ko `true`일 경우, 캔버스의 크기가 변경되었을 때 자동으로 {@link View360#resize}를 호출합니다.\n   * @default true\n   * @since 4.0.0\n   * @see View360#useResizeObserver\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   autoResize: true\n   * });\n   *\n   * // This can trigger `viewer.resize()` if the canvas size was not 400px\n   * const canvas = viewer.renderer.canvas;\n   * canvas.style.width = \"400px\";\n   * ```\n   */\n  public get autoResize() { return this._autoResize; }\n  /**\n   * CSS selector for canvas element to render panorama image/video.\n   * The canvas element should be placed inside the root element. (Dont' have to be direct child)\n   * @ko 파노라마 이미지/비디오를 렌더링할 canvas 엘리먼트의 CSS 선택자\n   * 캔버스 엘리먼트는 루트 엘리먼트 내부에 있어야합니다. 루트 엘리먼트의 직계 자식 엘리먼트(Direct child element)일 필요는 없습니다.\n   * @default \"canvas\"\n   * @since 4.0.0\n   * @example\n   * ```html\n   * <div class=\"view360-container\">\n   *   <canvas id=\"not_this_one\"></canvas>\n   *   <!-- This will be selected -->\n   *   <canvas id=\"canvas_to_select\"></canvas>\n   * </div>\n   * ```\n   *\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   canvasSelector: \"#canvas_to_select\"\n   * });\n   * ```\n   */\n  public get canvasSelector() { return this._canvasSelector; }\n  /**\n   * When `true`, it will use {@link ResizeObserver} API to detect canvas size change when {@link View360Options#autoResize} is enabled.\n   * @ko `true`일 때 {@link View360Options#autoResize}가 활성화되었으면, 사용 가능한 환경에서 {@link ResizeObserver} API를 사용해서 캔버스 크기 변화를 추적합니다.\n   * @default true\n   * @since 4.0.0\n   */\n  public get useResizeObserver() { return this._useResizeObserver; }\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex tabindex} attribute for the canvas element.\n   * This is necessary for the keyboard controls.\n   * By default, `0` will be assigned. `null` to disable.\n   * @ko 캔버스 엘리먼트에 적용할 {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex tabindex} 어트리뷰트의 값.\n   * 이 값을 설정해야만 키보드 컨트롤을 사용 가능합니다.\n   * 기본값으로 `0`이 설정됩니다. `null`로 지정하면 `tabindex`를 설정하지 않습니다.\n   * @see RotateControlOptions#disableKeyboard\n   * @default 0\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   tabindex: 5\n   * });\n   * ```\n   *\n   * ```html\n   * <!-- After init -->\n   * <div class=\"view360-container\">\n   *   <canvas class=\"view360-canvas\" tabindex=\"5\"></canvas>\n   * </div>\n   * ```\n   */\n  public get tabIndex() { return this._tabIndex; }\n  public set tabIndex(val: View360Options[\"tabIndex\"]) {\n    const canvas = this._renderer.canvas;\n    this._tabIndex = val;\n\n    if (val != null) {\n      canvas.tabIndex = val;\n    } else {\n      canvas.removeAttribute(\"tabindex\");\n    }\n  }\n  /**\n   * A maximum delta time between frames in seconds.\n   * It can prevent camera or control changing too fast when frame being late.\n   * @ko 프레임간 시간 차이의 최대값. (초 단위)\n   * 퍼포먼스 등의 이유로 프레임 렌더링이 늦어졌을 때, 화면이 갑작스럽게 바뀌는 것을 막아줍니다.\n   * @default 1 / 30\n   * @since 4.0.0\n   */\n  public get maxDeltaTime() { return this._animator.maxDeltaTime; }\n  public set maxDeltaTime(val: View360Options[\"maxDeltaTime\"]) { this._animator.maxDeltaTime = val; }\n  /**\n   * Enable WebGL debugging. Setting this to `true` can decrease performance.\n   * This is used internally on developing View360.\n   * @ko WebGL 디버깅을 활성화합니다. 이 값을 `true`로 할 경우 성능이 하락할 수 있습니다.\n   * 이 옵션은 View360을 개발하기 위해 내부적으로 사용됩니다.\n   * @default false\n   */\n  public get debug() { return this._debug; }\n  public set debug(val: View360Options[\"debug\"]) { this._debug = val; }\n\n  // Camera options\n  /**\n   * Initial yaw (y-axis rotation) value for camera. (in degrees, °)\n   * As View360 uses right-handed coordinate system internally, camera will rotate counter-clockwise by this value.\n   * @ko 카메라의 초기 yaw(y축 회전)값 (도 단위, °)\n   * View360은 오른손 좌표계를 사용하기 때문에, 카메라가 해당 값만큼 시계 반대방향으로 회전합니다.\n   * @default 0\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   initialYaw: 30\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.yaw); // 30\n   * });\n   * ```\n   */\n  public get initialYaw() { return this._camera.initialYaw; }\n  public set initialYaw(val: View360Options[\"initialYaw\"]) { this._camera.initialYaw = val; }\n  /**\n   * Initial pitch (x-axis rotation) value for camera. (in degrees, °)\n   * As View360 uses right-handed coordinate system internally, positive value will make camera to look upside, while negative value will look down.\n   * @ko 카메라의 초기 pitch(x축 회전)값 (도 단위, °)\n   * View360은 오른손 좌표계를 사용하기 때문에, 양(+)의 값은 카메라가 위를 보게 하고, 음(-)의 값은 카메라가 아래를 보게 합니다.\n   * @default 0\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   initialPitch: 60\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.pitch); // 60\n   * });\n   * ```\n   */\n  public get initialPitch() { return this._camera.initialPitch; }\n  public set initialPitch(val: View360Options[\"initialPitch\"]) { this._camera.initialPitch = val; }\n  /**\n   * Initial zoom value for camera.\n   * Setting this value to `2` will enlarge panorama 200% by width.\n   * @ko 카메라의 초기 줌 값.\n   * 이 값을 `2`로 설정할 경우 파노라마 이미지를 가로 기준 200%만큼 확대합니다.\n   * @default 1\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   initialZoom: 2\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.zoom); // 2\n   * });\n   * ```\n   */\n  public get initialZoom() { return this._camera.initialZoom; }\n  public set initialZoom(val: View360Options[\"initialZoom\"]) { this._camera.initialZoom = val; }\n  /**\n   * Restrict yaw(y-axis rotation) range. (in degrees, °)\n   * @ko yaw(y축 회전) 범위를 제한합니다. (도 단위, °)\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   yawRange: [-30, 30]\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.yaw); // 0\n   *   viewer.camera.lookAt({ yaw: 60  });\n   *   console.log(viewer.camera.yaw); // 30\n   * });\n   * ```\n   */\n  public get yawRange() { return this._camera.yawRange; }\n  public set yawRange(val: View360Options[\"yawRange\"]) {\n    this._camera.yawRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\n   * Restrict pitch(x-axis rotation) range. (in degrees, °)\n   * @ko pitch(x축 회전) 범위를 제한합니다. (도 단위, °)\n   * @default null\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   pitchRange: [-45, 45]\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.pitch); // 0\n   *   viewer.camera.lookAt({ pitch: 60  });\n   *   console.log(viewer.camera.pitch); // 45\n   * });\n   * ```\n   */\n  public get pitchRange() { return this._camera.pitchRange; }\n  public set pitchRange(val: View360Options[\"pitchRange\"]) {\n    this._camera.pitchRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\n   * Restrict camera zoom range.\n   * If `null`, a default zoom range from `0.6` to `10` will be used.\n   * @ko 카메라 줌 범위를 제한합니다.\n   * `null`일 경우 기본값으로 `0.6`에서 `10`의 범위를 사용합니다.\n   * @default null\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * const viewer = new View360(\"#el_id\", {\n   *   zoomRange: [0.5, 4]\n   * });\n   *\n   * viewer.on(\"ready\", () => {\n   *   console.log(viewer.camera.zoom); // 1\n   *   viewer.camera.lookAt({ zoom: 6  });\n   *   console.log(viewer.camera.zoom); // 4\n   * });\n   * ```\n   */\n  public get zoomRange() { return this._camera.zoomRange; }\n  public set zoomRange(val: View360Options[\"zoomRange\"]) {\n    this._camera.zoomRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\n   * Camera's horizontal FOV(Field of View). (in degrees, °)\n   * @ko 카메라의 수평 FOV(Field of View) 값. (도 단위, °)\n   * @default 90\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * // Init with fov: 120\n   * const viewer = new View360(\"#el_id\", { fov: 120 });\n   *\n   * // Back to 90\n   * viewer.fov = 90;\n   * ```\n   */\n  public get fov() { return this._camera.fov; }\n  public set fov(val: View360Options[\"fov\"]) {\n    const camera = this._camera;\n    const control = this._control;\n\n    camera.fov = val;\n    camera.updateMatrix();\n    control.sync();\n  }\n\n  // Control options\n  /**\n   * A control for camera rotation.\n   * You can also change options of {@link View360Options#rotate} with this.\n   * @ko 카메라 회전을 담당하는 컨트롤.\n   * {@link View360Options#rotate} 옵션 변경도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get rotate() { return this._control.rotate; }\n  /**\n   * A control for camera zoom.\n   * You can also change options of {@link View360Options#zoom} with this.\n   * @ko 카메라 줌을 담당하는 컨트롤.\n   * {@link View360Options#zoom} 옵션 변경도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get zoom() { return this._control.zoom; }\n  /**\n   * A control for camera rotation with gyroscope input.\n   * You can also change options of {@link View360Options#gyro} with this.\n   * @ko 자이로스코프를 통한 카메라 회전을 담당하는 컨트롤.\n   * {@link View360Options#gyro} 옵션 변경도 가능합니다.\n   * @since 4.0.0\n   * @readonly\n   */\n  public get gyro() { return this._control.gyro; }\n  /**\n   * Apply CSS {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor cursor} by current state of input when using mouse.\n   * If `true`, this will add CSS style to canvas element. It'll apply `cursor: \"grab\"` by default and `cursor: \"grabbing\"` when holding the mouse button.\n   * @ko 마우스 사용시 CSS {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor cursor}값을 자동으로 변경할지 여부.\n   * `true`일 경우 기본 상태에서 `cursor: \"grab\"`을, 입력 도중에 `cursor: \"grabbing\"`을 캔버스에 적용합니다.\n   * @default true\n   * @since 4.0.0\n   */\n  public get useGrabCursor() { return this._control.useGrabCursor; }\n  public set useGrabCursor(val: View360Options[\"useGrabCursor\"]) { this._control.useGrabCursor = val; }\n  /**\n   * Disable context menu which pops up on mouse right click.\n   * @ko 마우스 우클릭시 표시되는 컨텍스트 메뉴를 비활성화합니다.\n   * @default false\n   * @since 4.0.0\n   */\n  public get disableContextMenu() { return this._control.disableContextMenu; }\n  public set disableContextMenu(val: View360Options[\"disableContextMenu\"]) { this._control.disableContextMenu = val; }\n  /**\n   * If `true`, enables scroll on mobile(touch) devices on canvas.\n   * :::caution\n   * When this option is enabled, users must swipe horizontally first then vertically to change view up or down.\n   * :::\n   * @ko `true`로 설정할 경우, 모바일(터치) 환경의 캔버스 영역 내에서 스크롤을 가능하게 합니다.\n   * :::caution\n   * 이 값을 활성화할 경우, 사용자가 카메라 뷰를 위/아래로 바꾸기 위해서는 먼저 가로로 스와이프한 이후에 세로로 스와이프해야만 합니다.\n   * :::\n   * @since 4.0.0\n   * @default true\n   */\n  public get scrollable() { return this._control.scrollable; }\n  public set scrollable(val: View360Options[\"scrollable\"]) { this._control.scrollable = val; }\n  /**\n   * If `true`, enables scroll by mouse wheel on canvas.\n   * :::caution\n   * When this option is enabled, zoom by mouse wheel will be disabled.\n   * :::\n   * @ko `true`로 설정할 경우, 캔버스 영역 내에서 마우스 휠을 이용한 페이지 스크롤이 가능해집니다.\n   * :::caution\n   * 이 값을 활성화할 경우, 마우스 휠을 통한 줌이 불가능하게 됩니다.\n   * :::\n   * @since 4.0.0\n   * @default false\n   */\n  public get wheelScrollable() { return this._control.wheelScrollable; }\n  public set wheelScrollable(val: View360Options[\"wheelScrollable\"]) { this._control.wheelScrollable = val; }\n\n  /**\n   * Create new instance of View360\n   * @ko View360의 새로운 인스턴스를 생성합니다\n   * @param root - Root element(`.view360-container`) to mount View360\n   * Can be either a CSS selector or HTMLElement.\n   * {@ko View360을 마운트할 루트 엘리먼트, CSS 셀렉터나 HTMLElement를 지정 가능합니다.}\n   * @param options - Options to apply\n   * {@ko 적용할 옵션들}\n   * @example\n   * ```ts\n   * import View360, { EquirectProjection } from \"@egjs/view360\";\n   *\n   * // Create new View360 instance\n   * const viewer = new View360(\"#id-of-a-container\", {\n   *   projection: new EquirectProjection({\n   *     src: \"URL_TO_PANORAMA_IMAGE_OR_VIDEO\",\n   *   })\n   * });\n   * ```\n   */\n  public constructor(root: string | HTMLElement, {\n    projection = null,\n    initialYaw = 0,\n    initialPitch = 0,\n    initialZoom = 1,\n    yawRange = null,\n    pitchRange = null,\n    zoomRange = null,\n    fov = 90,\n    useGrabCursor = true,\n    disableContextMenu = false,\n    rotate = true,\n    zoom = true,\n    gyro = false,\n    scrollable = true,\n    wheelScrollable = false,\n    autoplay = false,\n    hotspot = {},\n    autoInit = true,\n    autoResize = true,\n    canvasSelector = \"canvas\",\n    useResizeObserver = true,\n    on = {},\n    plugins = [],\n    maxDeltaTime = 1 / 30,\n    tabIndex = 0,\n    debug = false\n  }: Partial<View360Options> = {}) {\n    super();\n\n    this._rootEl = getElement(root);\n    this._plugins = plugins;\n    this._initialized = false;\n\n    // Options\n    this._autoInit = autoInit;\n    this._autoResize = autoResize;\n    this._canvasSelector = canvasSelector;\n    this._useResizeObserver = useResizeObserver;\n    this._tabIndex = tabIndex;\n    this._debug = debug;\n\n    // Core components\n    const canvas = findCanvas(this._rootEl, canvasSelector);\n    this._renderer = new WebGLRenderer(canvas, debug);\n    this._camera = new Camera({\n      initialYaw,\n      initialPitch,\n      initialZoom,\n      fov,\n      yawRange,\n      pitchRange,\n      zoomRange\n    });\n    this._control = new PanoControl(canvas, this._camera, {\n      useGrabCursor,\n      scrollable,\n      wheelScrollable,\n      disableContextMenu,\n      rotate,\n      zoom,\n      gyro\n    });\n    this._animator = new FrameAnimator(maxDeltaTime);\n    this._autoplay = new Autoplay(this, canvas, autoplay);\n    this._projection = projection;\n    this._autoResizer = new AutoResizer(useResizeObserver, () => this.resize());\n    this._vr = new XRManager(this._renderer.ctx);\n    this._hotspot = new HotspotRenderer(this._rootEl, this._renderer, hotspot);\n\n    this._addEventHandlers(on);\n\n    if (projection && autoInit) {\n      this.init();\n    }\n  }\n\n  /**\n   * Destroy instance and release all resources.\n   * @ko 인스턴스를 제거하고 모든 리소스를 해제합니다.\n   * @since 4.0.0\n   */\n  public destroy() {\n    this._camera.destroy();\n    this._animator.stop();\n    this._renderer.destroy();\n    this._control.destroy();\n    this._autoResizer.disable();\n\n    if (this._projection) {\n      this._projection.releaseAllResources(this._renderer.ctx);\n      this._projection = null;\n    }\n\n    this._plugins.forEach(plugin => plugin.destroy(this));\n\n    this._initialized = false;\n  }\n\n  /**\n   * Initialize inner components and load projection src.\n   * @ko 내부 컴포넌트들을 초기화하고 프로젝션 소스를 로드합니다.\n   * @since 4.0.0\n   */\n  public async init() {\n    if (!this._projection) {\n      throw new View360Error(ERROR.MESSAGES.PROVIDE_PROJECTION_FIRST, ERROR.CODES.PROVIDE_PROJECTION_FIRST);\n    }\n\n    const renderer = this._renderer;\n    const camera = this._camera;\n    const control = this._control;\n    const animator = this._animator;\n    const hotspot = this._hotspot;\n    const projection = this._projection;\n    const canvas = renderer.canvas;\n\n    this._bindComponentEvents();\n    renderer.ctx.init();\n    this._resizeComponents();\n    camera.updateMatrix();\n\n    if (this._autoResize) {\n      this._autoResizer.enable(canvas);\n    }\n\n    if (!this._autoplay.enableBlocked) {\n      this._autoplay.enable();\n    }\n\n    this._plugins.forEach(plugin => {\n      plugin.init(this);\n    });\n\n    const texture = await this._loadTexture(projection);\n    this._applyProjection(projection, texture, null);\n    hotspot.refresh();\n    animator.start(this._renderFrameOnDemand);\n    await control.enable();\n\n    if (this._tabIndex != null && !canvas.hasAttribute(\"tabIndex\")) {\n      canvas.tabIndex = this._tabIndex;\n    }\n\n    this._initialized = true;\n    this.renderFrame(0);\n\n    this._emit(EVENTS.READY);\n  }\n\n  /**\n   * Load new panorama image/video and display it.\n   * This will {@link View360#init init()} View360 if it's not initialized yet.\n   * @ko 새로운 파노라마 이미지 혹은 비디오를 로드하고 표시합니다.\n   * 만약 View360이 아직 초기화되지 않았다면, {@link View360#init init()}을 호출합니다.\n   * @param projection - Projection & video options for new source. {@ko 새로운 파노라마 이미지/비디오에 적용할 옵션들}\n   * @returns `Promise<true>` if load was successful. {@ko 프로젝션 로드에 성공했을 경우 `Promise<true>`를 반환합니다. }\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * // Change to video\n   * viewer.load({\n   *   src: \"URL_TO_NEW_VIDEO\",\n   *   video: true\n   * });\n   * ```\n   */\n  public async load(projection: Projection): Promise<boolean> {\n    if (!projection) return false;\n\n    if (this._initialized) {\n      const texture = await this._loadTexture(projection);\n      this._applyProjection(projection, texture, this._projection);\n      this.renderFrame(0);\n    } else {\n      // Should update internal options before init\n      this._projection = projection;\n      this.init();\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh component's size by current\n   * @ko View360이 내부적으로 캐시하고 있는 엘리먼트 크기를 현재 크기로 갱신합니다.\n   * @since 4.0.0\n   */\n  public resize() {\n    if (!this._initialized) return;\n\n    this._resizeComponents();\n\n    // To prevent flickering, render immediately after resizing components\n    this.renderFrame(0);\n\n    const { width, height } = this._renderer;\n\n    this._emit(EVENTS.RESIZE, {\n      width,\n      height\n    });\n  }\n\n  /**\n   * Add new plugins\n   * @ko 새로운 플러그인을 추가합니다.\n   * @param plugins Plugins to add {@ko 추가할 플러그인들}\n   * @see View360Options#plugins\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * // Add a single plugin\n   * viewer.addPlugins(new ControlBar());\n   *\n   * // Add multiple plugins\n   * viewer.addPlugins(new ControlBar(), new LoadingSpinner());\n   * ```\n   */\n  public addPlugins(...plugins: View360Plugin[]) {\n    if (this._initialized) {\n      plugins.forEach(plugin => { plugin.init(this); });\n    }\n\n    this._plugins.push(...plugins);\n  }\n\n  /**\n   * Remove plugins.\n   * @ko 플러그인을 제거합니다.\n   * @param plugins Plugins to remove {@ko 제거할 플러그인들}\n   * @since 4.0.0\n   * @example\n   * ```ts\n   * // Remove a single plugin\n   * viewer.removePlugins(plugin1);\n   *\n   * // Remove multiple plugins\n   * viewer.removePlugins(plugin2, plugin3);\n   * ```\n   */\n  public removePlugins(...plugins: View360Plugin[]) {\n    plugins.forEach(plugin => {\n      const pluginIdx = this._plugins.indexOf(plugin);\n\n      if (pluginIdx < 0) return;\n\n      plugin.destroy(this);\n      this._plugins.splice(pluginIdx, 1);\n    });\n  }\n\n  /**\n   * Render a single panorama image/video frame.\n   * Rendering is performed automatically on demand, so you usually don't have to call this.\n   * Call this when a frame is not renewed after changing options.\n   * @ko 파노라마 이미지/비디오의 한 프레임을 렌더링합니다.\n   * 프레임 갱신은 보통 필요한 때에만 자동적으로 이루어지기 때문에, 보통은 이 메소드를 호출할 필요는 없습니다.\n   * 옵션 변경 이후에도 프레임 갱신이 이루어지지 않는다면, 이 메소드를 호출해주세요.\n   * @param delta Delta time in milisec. {@ko 프레임간 시간 차이, 밀리초 단위}\n   * @since 4.0.0\n   */\n  public renderFrame = (delta: number) => {\n    const camera = this._camera;\n    const renderer = this._renderer;\n    const control = this._control;\n    const hotspot = this._hotspot;\n    const autoPlayer = this._autoplay;\n    const projection = this._projection;\n\n    if (!projection) return;\n\n    this._emit(EVENTS.BEFORE_RENDER);\n\n    if (autoPlayer.playing) {\n      autoPlayer.update(delta);\n      control.sync();\n    }\n\n    if (camera.animation) {\n      camera.animation.update(delta);\n    } else {\n      control.update(delta);\n    }\n\n    renderer.render(projection, camera);\n    hotspot.render(camera);\n\n    if (camera.changed) {\n      this._emit(EVENTS.VIEW_CHANGE, {\n        yaw: camera.yaw,\n        pitch: camera.pitch,\n        zoom: camera.zoom,\n        quaternion: [\n          camera.quaternion[0],\n          camera.quaternion[1],\n          camera.quaternion[2],\n          camera.quaternion[3]\n        ]\n      });\n    }\n    camera.onFrameRender();\n\n    this._emit(EVENTS.RENDER);\n  };\n\n  private _emit<K extends keyof View360Events>(eventName: K, ...params: EventParams<View360Events, K>) {\n    const evtParams = params ? params[0] : {};\n\n    this.trigger(eventName as any, {\n      type: eventName,\n      target: this,\n      ...evtParams\n    });\n  }\n\n  private _renderFrameOnDemand = (delta: number) => {\n    const camera = this._camera;\n    const control = this._control;\n    const autoplay = this._autoplay;\n    const texture = this._projection?.getTexture();\n\n    if (!this._initialized || !texture) return;\n    if (\n      !camera.animation\n      && !control.animating\n      && !autoplay.playing\n      && !texture.isVideo()\n    ) return;\n\n    this.renderFrame(delta);\n  };\n\n  private _renderVRFrame = (_delta: number, frame: XRFrame) => {\n    const vr = this._vr;\n    const projection = this._projection;\n    const renderer = this._renderer;\n\n    if (!projection) return;\n\n    this._emit(EVENTS.BEFORE_RENDER);\n\n    renderer.renderVR(projection, vr, frame);\n\n    this._emit(EVENTS.RENDER);\n  }\n\n  private _applyProjection(projection: Projection, texture: Texture, prevProjection: Projection | null) {\n    const camera = this._camera;\n    const control = this._control;\n    const renderer = this._renderer;\n\n    // Remove previous projection\n    if (prevProjection) {\n      prevProjection.releaseAllResources(this._renderer.ctx);\n    }\n\n    projection.applyTexture(renderer.ctx, texture);\n    projection.updateCamera(camera);\n    projection.updateControl(control);\n\n    this._projection = projection;\n    this._emit(EVENTS.PROJECTION_CHANGE, {\n      projection\n    });\n  }\n\n  private async _loadTexture(projection: Projection): Promise<Texture> {\n    const contentLoader = new TextureLoader();\n    const { src, video } = projection;\n\n    this._emit(EVENTS.LOAD_START, {\n      src,\n      video\n    });\n\n    const texture = await contentLoader.load(src, video);\n\n    this._emit(EVENTS.LOAD, {\n      src,\n      video\n    });\n\n    return texture;\n  }\n\n  private _resizeComponents() {\n    const renderer = this._renderer;\n    const camera = this._camera;\n    const control = this._control;\n\n    renderer.resize();\n    camera.resize(renderer.width, renderer.height);\n    control.resize(renderer.width, renderer.height);\n  }\n\n  private _addEventHandlers(events: View360Options[\"on\"]) {\n    // Bind option \"on\"\n    Object.keys(events).forEach((evtName: keyof typeof EVENT_TYPES) => {\n      this.on(evtName, events[evtName]);\n    });\n  }\n\n  private _bindComponentEvents() {\n    // Bind internal component events\n    const root = this._rootEl;\n    const control = this._control;\n    const animator = this._animator;\n    const renderer = this._renderer;\n    const vr = this._vr;\n\n    const controlEventsToPropagate = [\n      CONTROL_EVENTS.STATIC_CLICK,\n      CONTROL_EVENTS.INPUT_START,\n      CONTROL_EVENTS.INPUT_END\n    ];\n\n    controlEventsToPropagate.forEach(evtName => {\n      control.rotate.on(evtName, evt => {\n        this._emit(evtName, evt);\n      });\n\n      control.zoom.on(evtName, evt => {\n        this._emit(evtName, evt);\n      });\n    });\n\n    vr.on(EVENTS.VR_START, evt => {\n      root.classList.add(DEFAULT_CLASS.IN_VR);\n\n      animator.changeContext(evt.session);\n      animator.start(this._renderVRFrame);\n\n      this._emit(EVENTS.VR_START);\n    });\n\n    vr.on(EVENTS.VR_END, () => {\n      root.classList.remove(DEFAULT_CLASS.IN_VR);\n\n      renderer.ctx.useDefaultFrameBuffer();\n      animator.changeContext(window);\n      animator.start(this._renderFrameOnDemand);\n\n      this.resize();\n\n      this._emit(EVENTS.VR_END);\n    });\n  }\n}\n\nexport default View360;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { mat4, quat, vec3 } from \"gl-matrix\";\n\n/**\n * Base class for 3D objects\n * @ko 3D 오브젝트의 베이스 클래스\n * @since 4.0.0\n * @internal\n */\nclass Object3D {\n  /**\n   * Local matrix of the object\n   * @ko 오브젝트의 local matrix\n   * @since 4.0.0\n   */\n  public matrix: mat4;\n  /**\n   * Rotation quaternion\n   * @ko 현재 오브젝트의 회전을 나타내는 사원수 값\n   * @since 4.0.0\n   */\n  public rotation: quat;\n  /**\n   * Position of the object\n   * @ko 오브젝트의 위치\n   * @since 4.0.0\n   */\n  public position: vec3;\n  /**\n   * A scale vector of the object\n   * @ko 오브젝트가 각 축으로 확대된 정도를 나타내는 벡터\n   * @since 4.0.0\n   */\n  public scale: vec3;\n\n  /**\n   * Create new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   */\n  public constructor() {\n    this.matrix = mat4.create();\n    this.rotation = quat.create();\n    this.position = vec3.fromValues(0, 0, 0);\n    this.scale = vec3.fromValues(1, 1, 1);\n  }\n\n  /**\n   * Update local matrix of the object.\n   * @ko 오브젝트의 local matrix를 갱신합니다.\n   * @since 4.0.0\n   */\n  public updateMatrix() {\n    mat4.fromRotationTranslationScale(this.matrix, this.rotation, this.position, this.scale);\n  }\n}\n\nexport default Object3D;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport View360Plugin from \"../View360Plugin\";\nimport View360 from \"../../View360\";\nimport { EVENTS } from \"../../const/external\";\nimport { createElement } from \"../../utils\";\nimport { LoadStartEvent } from \"../../type/events\";\n\n/**\n * Options for {@link LoadingSpinner}\n * @ko {@link LoadingSpinner}용 옵션들\n * @since 4.0.0\n * @category Plugin\n */\nexport interface LoadingSpinnerOptions {\n  /**\n   * Override default class names.\n   * @ko 디폴트 클래스 이름들을 오버라이드합니다.\n   * @since 4.0.0\n   */\n  className: Partial<{ -readonly [key in keyof typeof LoadingSpinner.DEFAULT_CLASS]: string }>;\n}\n\n/**\n * A plugin that displays loading spinner while loading the projection.\n * @ko 프로젝션 로딩중에 로딩 스피너를 보여주는 플러그인\n * @since 4.0.0\n * @category Plugin\n */\nclass LoadingSpinner implements View360Plugin {\n  /**\n   * Default class names that LoadingSpinner uses\n   * @ko LoadingSpinner가 사용하는 디폴트 클래스 이름\n   * @since 4.0.0\n   */\n  public static readonly DEFAULT_CLASS = {\n    /**\n     * A class name for the container element\n     * @ko 컨테이너 엘리먼트의 클래스 이름\n     * @since 4.0.0\n     */\n    CONTAINER: \"view360-spinner\",\n    /**\n     * A class name for the spinning ring element\n     * @ko 돌아가는 링 엘리먼트의 클래스 이름\n     * @since 4.0.0\n     */\n    RING: \"view360-spinner-ring\"\n  } as const;\n\n  /**\n   * A class names overriding\n   * @ko 현재 오버라이드 중인 클래스 이름\n   * @since 4.0.0\n   */\n  public readonly className: LoadingSpinnerOptions[\"className\"];\n\n  private _container: HTMLElement;\n\n  /**\n   * Create a new instance of LoadingSpinner. {@ko LoadingSpinner의 새 인스턴스를 생성합니다.}\n   * @param options Options {@ko 옵션들}\n   */\n  public constructor({\n    className = {}\n  }: Partial<LoadingSpinnerOptions> = {}) {\n    this.className = className;\n    this._container = this._createElements();\n  }\n\n  public init(viewer: View360) {\n    viewer.on(EVENTS.LOAD_START, this._startLoading);\n  }\n\n  public destroy(viewer: View360): void {\n    viewer.off(EVENTS.LOAD_START, this._startLoading);\n    this._detachElements({ target: viewer });\n  }\n\n  private _startLoading = ({ target: viewer }: LoadStartEvent) => {\n    viewer.rootEl.appendChild(this._container);\n\n    if (viewer.initialized) {\n      viewer.once(EVENTS.LOAD, this._detachElements);\n    } else {\n      viewer.once(EVENTS.READY, this._detachElements);\n    }\n  };\n\n  private _detachElements = ({ target: viewer }: { target: View360 }) => {\n    const container = this._container;\n    if (!container) return;\n\n    if (container.parentElement === viewer.rootEl) {\n      viewer.rootEl.removeChild(container);\n    }\n  };\n\n  private _createElements() {\n    const className = {\n      ...this.className,\n      ...LoadingSpinner.DEFAULT_CLASS\n    };\n\n    const container = createElement(className.CONTAINER);\n    const ring = createElement(className.RING);\n\n    container.appendChild(ring);\n\n    return container;\n  }\n}\n\nexport default LoadingSpinner;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport ControlBar from \"./ControlBar\";\nimport View360 from \"../../View360\";\n\n/**\n * Common options for {@link ControlBarItem}\n * @ko {@link ControlBarItem}의 공통 옵션들\n * @category Plugin\n * @since 4.0.0\n */\nexport interface ControlBarItemOptions {\n  /**\n   * @copy ControlBarItem#position\n   */\n  position: typeof ControlBar.POSITION[keyof typeof ControlBar.POSITION];\n  /**\n   * @copy ControlBarItem#order\n   */\n  order: number;\n}\n\n/**\n * Interface of the ControlBar items\n * @ko 컨트롤바 아이템의 인터페이스\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nabstract class ControlBarItem {\n  /**\n   * Element of the item.\n   * @ko 아이템의 엘리먼트\n   * @since 4.0.0\n   */\n  public abstract element: HTMLElement;\n\n  /**\n   * Position to display item.\n   * @ko 아이템을 표시할 위치.\n   * @since 4.0.0\n   */\n  public position: ControlBarItemOptions[\"position\"];\n  /**\n   * Order within the same position.\n   * The lowest one will be shown first.\n   * @ko 동일한 position 내에서의 순서, 작을수록 먼저 표시됩니다.\n   * @since 4.0.0\n   */\n  public order: ControlBarItemOptions[\"order\"];\n\n  /**\n   * Create new instance of the ControlBarItem\n   * @ko ControlBarItem의 새로운 인스턴스를 생성합니다.\n   * @param options Options {@ko 옵션들}\n   */\n  public constructor(options: ControlBarItemOptions) {\n    this.position = options.position;\n    this.order = options.order;\n  }\n\n  /**\n   * Initialize item.\n   * @ko 아이템을 초기화합니다.\n   * @param viewer - A instance of viewer to attach item {@ko 아이템을 부착할 뷰어의 인스턴스}\n   * @param controlBar - A instance of control bar to attach item {@ko 아이템을 부착할 컨트롤바의 인스턴스}\n   * @since 4.0.0\n   */\n  public abstract init(viewer: View360, controlBar: ControlBar): any;\n  /**\n   * Destroy item and release all resources & event handlers.\n   * @ko 아이템을 제거하고 할당된 모든 리소스 및 이벤트 핸들러를 제거합니다.\n   * @param viewer - A instance of viewer to detach item {@ko 아이템을 떼어 낼 뷰어의 인스턴스}\n   * @param controlBar - A instance of control bar to detach item {@ko 아이템을 떼어 낼 컨트롤바의 인스턴스}\n   * @since 4.0.0\n   */\n  public abstract destroy(viewer: View360, controlBar: ControlBar): any;\n}\n\nexport default ControlBarItem;\n","export const CONTROL_BAR_DEFAULT_CLASS = {\n  CONTROLS_ROOT: \"view360-controls\",\n  CONTROLS_BG: \"view360-controls-background\",\n  CONTROLS_MAIN: \"view360-controls-main\",\n  CONTROLS_TOP: \"view360-controls-top\",\n  CONTROLS_BOTTOM: \"view360-controls-bottom\",\n  CONTROLS_MID: \"view360-controls-mid\",\n  CONTROLS_LEFT: \"view360-controls-left\",\n  CONTROLS_RIGHT: \"view360-controls-right\",\n  CONTROLS_FLOAT_LEFT: \"view360-controls-float-left\",\n  CONTROLS_FLOAT_RIGHT: \"view360-controls-float-right\",\n  CONTROLS_BUTTON: \"view360-controls-button\",\n  PROGRESS_ROOT: \"view360-controls-progress\",\n  VOLUME_ROOT: \"view360-controls-volume\",\n  RANGE_ROOT: \"view360-range\",\n  RANGE_TRACK: \"view360-range-track\",\n  RANGE_THUMB: \"view360-range-thumb\",\n  RANGE_FILLER: \"view360-range-filler\",\n  PLAY_BUTTON: \"view360-controls-play\",\n  PAUSE_BUTTON: \"view360-controls-pause\",\n  UNMUTED_BUTTON: \"view360-controls-unmuted\",\n  MUTED_BUTTON: \"view360-controls-muted\",\n  FULLSCREEN_BUTTON: \"view360-controls-fullscreen\",\n  FULLSCREEN_EXIT_BUTTON: \"view360-controls-fullscreen-exit\",\n  VR_BUTTON: \"view360-controls-vr\",\n  GYRO_ENABLED: \"view360-controls-gyro-enabled\",\n  GYRO_DISABLED: \"view360-controls-gyro-disabled\",\n  VIDEO_TIME_DISPLAY: \"view360-controls-time\",\n  PIEVIEW_ROOT: \"view360-controls-pie\",\n  FIXED: \"view360-controls-fixed\",\n  UNAVAILABLE: \"view360-controls-unavailable\",\n  HIDDEN: \"view360-controls-hidden\"\n} as const;\n\nexport const CONTROL_BAR_ITEM_POSITION = {\n  /**\n   * Place control bar item floating at top-left corner\n   * @ko 아이템을 왼쪽 위 구석에 표시합니다.\n   * @since 4.0.0\n   */\n  TOP_LEFT: \"top-left\",\n  /**\n   * Place control bar item floating at top-right corner\n   * @ko 아이템을 오른쪽 위 구석에 표시합니다.\n   * @since 4.0.0\n   */\n  TOP_RIGHT: \"top-right\",\n  /**\n   * Place control bar item at upper block inside the bottom control bar.\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 위쪽 블럭에 표시합니다.\n   * @since 4.0.0\n   */\n  MAIN_TOP: \"main-top\",\n  /**\n   * Place control bar item at lower block inside the bottom control bar.\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 하단 블럭에 표시합니다.\n   * @since 4.0.0\n   */\n  MAIN_BOTTOM: \"main-bottom\",\n  /**\n   * Place control bar item at center-left block inside the bottom control bar.\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 중간 왼쪽 블럭에 표시합니다.\n   * @since 4.0.0\n   */\n  MAIN_LEFT: \"main-left\",\n  /**\n   * Place control bar item at center-right block inside the bottom control bar.\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 중간 오른쪽 블럭에 표시합니다.\n   * @since 4.0.0\n   */\n  MAIN_RIGHT: \"main-right\"\n} as const;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\nimport { ControlBarOptions } from \"./ControlBar\";\nimport { CONTROL_BAR_DEFAULT_CLASS } from \"./const\";\nimport Motion from \"../../core/Motion\";\nimport MouseInput from \"../../control/input/MouseInput\";\nimport TouchInput from \"../../control/input/TouchInput\";\nimport { CONTROL_EVENTS, INFINITE_RANGE } from \"../../const/internal\";\nimport { clamp } from \"../../utils\";\nimport { InputEvents } from \"../../type/internal\";\nimport { EL_DIV } from \"../../const/browser\";\n\nclass RangeControl extends Component<{\n  [CONTROL_EVENTS.INPUT_START]: number;\n  [CONTROL_EVENTS.CHANGE]: number;\n  [CONTROL_EVENTS.INPUT_END]: void;\n}> {\n  public readonly rootEl: HTMLElement;\n  public readonly thumbEl: HTMLElement;\n  public readonly trackEl: HTMLElement;\n  public readonly fillerEl: HTMLElement;\n\n  private _motion: Motion;\n  private _mouseInput: MouseInput;\n  private _touchInput: TouchInput;\n  private _fixedClass: string;\n  private _bbox: DOMRect;\n\n  /**\n   *\n   */\n  public constructor() {\n    super();\n\n    const root = document.createElement(EL_DIV);\n    const track = document.createElement(EL_DIV);\n    const thumb = document.createElement(EL_DIV);\n    const filler = document.createElement(EL_DIV);\n\n    root.draggable = false;\n\n    track.appendChild(filler);\n    track.appendChild(thumb);\n    root.appendChild(track);\n\n    this.rootEl = root;\n    this.trackEl = track;\n    this.thumbEl = thumb;\n    this.fillerEl = filler;\n\n    this._mouseInput = new MouseInput();\n    this._touchInput = new TouchInput();\n    this._motion = new Motion({ duration: 1, range: INFINITE_RANGE, easing: x => x });\n    this._bbox = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      top: 0\n    } as DOMRect;\n    this._fixedClass = CONTROL_BAR_DEFAULT_CLASS.FIXED;\n  }\n\n  public init(className: Required<ControlBarOptions[\"className\"]>) {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n\n    this.rootEl.classList.add(className.RANGE_ROOT);\n    this.trackEl.classList.add(className.RANGE_TRACK);\n    this.thumbEl.classList.add(className.RANGE_THUMB);\n    this.fillerEl.classList.add(className.RANGE_FILLER);\n    this._fixedClass = className.FIXED;\n\n    mouseInput.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    touchInput.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n\n    mouseInput.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n    touchInput.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n\n    mouseInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    touchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n\n    mouseInput.enable(this.rootEl);\n    touchInput.enable(this.rootEl);\n\n    this.resize();\n  }\n\n  public destroy() {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n\n    this.rootEl.className = \"\";\n    this.trackEl.className = \"\";\n    this.thumbEl.className = \"\";\n    this.fillerEl.className = \"\";\n\n    mouseInput.off();\n    touchInput.off();\n    mouseInput.disable();\n    touchInput.disable();\n  }\n\n  public resize() {\n    this._bbox = this.trackEl.getBoundingClientRect();\n  }\n\n  public updateStyle(progress: number) {\n    const width = this._bbox.width;\n    const clampedProgress = clamp(progress, 0, 1);\n\n    this.fillerEl.style.width = `${clampedProgress * 100}%`;\n    this.thumbEl.style.transform = `translateX(${clampedProgress * width}px)`;\n  }\n\n  private _onHold = ({ srcEvent, isTouch }: InputEvents<{ x: number; y: number }>[typeof CONTROL_EVENTS.INPUT_START]) => {\n    const bbox = this._bbox;\n    if (!bbox) return;\n\n    const x = isTouch\n      ? (srcEvent as TouchEvent).touches[0].pageX\n      : (srcEvent as MouseEvent).pageX;\n    const elX = bbox.x + (window.scrollX ?? window.pageXOffset);\n\n    const clamepdX = clamp(x, elX, elX + bbox.width);\n    const progress = (clamepdX - elX) / bbox.width;\n\n    this._motion.reset(clamepdX);\n    this.thumbEl.classList.add(this._fixedClass);\n\n    this.trigger(CONTROL_EVENTS.INPUT_START, progress);\n  };\n\n  private _onChange = ({ delta }: InputEvents<{ x: number; y: number }>[typeof CONTROL_EVENTS.CHANGE]) => {\n    const motion = this._motion;\n    const bbox = this._bbox;\n    if (!bbox) return;\n\n    motion.setNewEndByDelta(delta.x);\n    motion.update(1);\n\n    const elX = bbox.x + (window.scrollX ?? window.pageXOffset);\n    const clampedX = clamp(motion.val, elX, elX + bbox.width);\n    const progress = (clampedX - elX) / bbox.width;\n\n    this.trigger(CONTROL_EVENTS.CHANGE, progress);\n  };\n\n  private _onRelease = () => {\n    const bbox = this._bbox;\n    if (!bbox) return;\n\n    this.thumbEl.classList.remove(this._fixedClass);\n\n    this.trigger(CONTROL_EVENTS.INPUT_END);\n  };\n}\n\nexport default RangeControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport RangeControl from \"./RangeControl\";\nimport View360 from \"../../View360\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport { CONTROL_EVENTS, VIDEO_TIME_CHANGE_EVENT } from \"../../const/internal\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport { EVENTS } from \"../../const/external\";\nimport * as BROWSER from \"../../const/browser\";\n\n/**\n * Show video progress bar.\n * @ko 비디오의 프로그레스 바를 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass ProgressBar extends ControlBarItem {\n  public get element() { return this._rangeControl.rootEl; }\n\n  private _controlBar: ControlBar | null;\n  private _video: TextureVideo | null;\n  private _rangeControl: RangeControl;\n\n  private _wasPaused: boolean;\n  private _currentTime: number;\n  private _duration: number;\n  private _playPromise: Promise<void> | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_TOP,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.position = position;\n    this.order = order;\n\n    this._controlBar = null;\n    this._rangeControl = new RangeControl();\n\n    this._video = null;\n    this._wasPaused = false;\n    this._currentTime = 0;\n    this._duration = 0;\n    this._playPromise = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const video = viewer.projection?.getTexture();\n    const element = this.element;\n    const rangeControl = this._rangeControl;\n    const unavailableClass = controlBar.className.UNAVAILABLE;\n\n    if (!video || !video.isVideo()) {\n      element.classList.add(unavailableClass);\n      return;\n    }\n\n    element.classList.remove(unavailableClass);\n    element.classList.add(controlBar.className.PROGRESS_ROOT);\n    viewer.on(EVENTS.RESIZE, this._onResize);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.addEventListener(VIDEO_TIME_CHANGE_EVENT, this._onTimeUpdate);\n    rangeControl.init(controlBar.className);\n    rangeControl.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    rangeControl.on(CONTROL_EVENTS.CHANGE, this._onControl);\n    rangeControl.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n\n    this._video = video;\n    this._currentTime = video.source.currentTime;\n    this._duration = video.source.duration;\n    this._controlBar = controlBar;\n\n    rangeControl.updateStyle(this._currentTime / this._duration);\n  }\n\n  public destroy(viewer: View360) {\n    const video = this._video;\n\n    viewer.off(EVENTS.RESIZE, this._onResize);\n\n    if (video) {\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_DURATION_CHANGE, this._onDurationChange);\n      video.source.removeEventListener(VIDEO_TIME_CHANGE_EVENT, this._onTimeUpdate);\n    }\n\n    this._rangeControl.destroy();\n    this._video = null;\n    this._playPromise = null;\n  }\n\n  private _onResize = () => {\n    this._rangeControl.resize();\n  }\n\n  private _onTimeUpdate = () => {\n    const video = this._video;\n    if (!video) return;\n\n    this._currentTime = video.source.currentTime;\n    this._rangeControl.updateStyle(this._currentTime / this._duration);\n  };\n\n  private _onDurationChange = () => {\n    const video = this._video;\n    if (!video) return;\n\n    this._duration = video.source.duration;\n    this._rangeControl.updateStyle(this._currentTime / this._duration);\n  };\n\n  private _onHold = (progress: number) => {\n    const video = this._video;\n    const controlBar = this._controlBar;\n    if (!video || !controlBar) return;\n\n    const paused = video.isPaused();\n\n    video.source.pause();\n\n    const time = video.source.duration * progress;\n    video.source.currentTime = time;\n    video.source.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, { detail: { time }}));\n\n    controlBar.rootEl.classList.add(controlBar.className.FIXED);\n    this._wasPaused = !this._playPromise && paused;\n  };\n\n  private _onControl = (progress: number) => {\n    const video = this._video;\n    if (!video) return;\n\n    const time = video.source.duration * progress;\n    video.source.currentTime = time;\n    video.source.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, { detail: { time }}));\n  };\n\n  private _onRelease = () => {\n    const video = this._video;\n    const controlBar = this._controlBar;\n\n    if (video && controlBar) {\n      if (!this._wasPaused && !this._playPromise) {\n        this._playPromise = video.source.play()\n          .catch(() => void 0);\n\n        // This should not be chained\n        this._playPromise.then(() => {\n          this._playPromise = null;\n        });\n\n        controlBar.rootEl.classList.remove(controlBar.className.FIXED);\n      }\n    }\n\n    this._wasPaused = false;\n  };\n}\n\nexport default ProgressBar;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport * as BROWSER from \"../../const/browser\";\n\n/**\n * Show video play / pause button.\n * @ko 비디오 재생 / 일시정지 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass PlayButton extends ControlBarItem {\n  public readonly element: HTMLElement;\n  private _controlBar: ControlBar | null;\n  private _video: TextureVideo | null;\n  private _paused: boolean;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_LEFT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_BUTTON);\n\n    this._video = null;\n    this._paused = true;\n    this._controlBar = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n    const video = viewer.projection?.getTexture();\n    const className = controlBar.className;\n    const unavailableClass = className.UNAVAILABLE;\n\n    if (!video || !video.isVideo()) {\n      element.classList.add(unavailableClass);\n      return;\n    }\n\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.remove(unavailableClass);\n\n    const paused = video.isPaused();\n    this._video = video;\n    this._paused = paused;\n    this._controlBar = controlBar;\n\n    if (paused) {\n      this._onPause();\n    } else {\n      this._onPlay();\n    }\n\n    element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_PLAY, this._onPlay);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_PAUSE, this._onPause);\n  }\n\n  public destroy() {\n    const video = this._video;\n    const element = this.element;\n\n    if (!video) return;\n\n    element.className = \"\";\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    video.source.removeEventListener(BROWSER.EVENTS.VIDEO_PLAY, this._onPlay);\n    video.source.removeEventListener(BROWSER.EVENTS.VIDEO_PAUSE, this._onPause);\n\n    this._video = null;\n    this._paused = true;\n    this._controlBar = null;\n  }\n\n  private _onClick = () => {\n    const video = this._video;\n    if (!video) return;\n\n    if (this._paused) {\n      video.source.play();\n    } else {\n      video.source.pause();\n    }\n  };\n\n  private _onPlay = () => {\n    if (!this._controlBar) return;\n\n    const element = this.element;\n    const className = this._controlBar.className;\n\n    element.classList.add(className.PAUSE_BUTTON);\n    element.classList.remove(className.PLAY_BUTTON);\n    element.title = \"Pause Video\";\n\n    this._paused = false;\n  };\n\n  private _onPause = () => {\n    if (!this._controlBar) return;\n\n    const element = this.element;\n    const className = this._controlBar.className;\n\n    element.classList.add(className.PLAY_BUTTON);\n    element.classList.remove(className.PAUSE_BUTTON);\n    element.title = \"Play Video\";\n\n    this._paused = true;\n  };\n}\n\nexport default PlayButton;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport RangeControl from \"./RangeControl\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport * as BROWSER from \"../../const/browser\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { EVENTS } from \"../../const/external\";\n\n/**\n * Show video volume control.\n * @ko 비디오 볼륨 조절 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass VolumeControl extends ControlBarItem {\n  public get element() { return this._rootEl; }\n\n  private _controlBar: ControlBar | null;\n  private _rootEl: HTMLButtonElement;\n  private _buttonEl: HTMLElement;\n  private _rangeControl: RangeControl;\n  private _video: TextureVideo | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this._controlBar = null;\n    this._rangeControl = new RangeControl();\n    this._createElements();\n\n    this._video = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const video = viewer.projection?.getTexture();\n    const root = this._rootEl;\n    const button = this._buttonEl;\n    const rangeControl = this._rangeControl;\n    const className = controlBar.className;\n    const unavailableClass = className.UNAVAILABLE;\n\n    if (!video || !video.isVideo()) {\n      root.classList.add(unavailableClass);\n      return;\n    }\n\n    root.classList.remove(unavailableClass);\n    root.classList.add(className.CONTROLS_BUTTON);\n    root.classList.add(className.VOLUME_ROOT);\n    button.classList.add(className.CONTROLS_BUTTON);\n\n    if (video.source.muted) {\n      button.classList.add(className.MUTED_BUTTON);\n    } else {\n      button.classList.add(className.UNMUTED_BUTTON);\n    }\n\n    viewer.on(EVENTS.RESIZE, this._onResize);\n    root.addEventListener(BROWSER.EVENTS.TRANSITION_END, this._onResize);\n    button.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_VOLUME_CHANGE, this._onVolumeChange);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_LOADED_DATA, this._updateDisplay);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_CAN_PLAYTHROUGH, this._updateDisplay);\n\n    rangeControl.init(className);\n    rangeControl.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    rangeControl.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    rangeControl.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n\n    this._controlBar = controlBar;\n    this._video = video;\n\n    this._updateDisplay();\n  }\n\n  public destroy(viewer: View360) {\n    const video = this._video;\n    const button = this._buttonEl;\n    const root = this._rootEl;\n\n    root.className = \"\";\n    button.className = \"\";\n\n    viewer.off(EVENTS.RESIZE, this._onResize);\n    root.removeEventListener(BROWSER.EVENTS.TRANSITION_END, this._onResize);\n    button.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n\n    if (video) {\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_VOLUME_CHANGE, this._onVolumeChange);\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_LOADED_DATA, this._updateDisplay);\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_CAN_PLAYTHROUGH, this._updateDisplay);\n    }\n\n    this._controlBar = null;\n    this._rangeControl.destroy();\n    this._video = null;\n  }\n\n  private _onResize = () => {\n    this._rangeControl.resize();\n    this._updateDisplay();\n  }\n\n  private _onClick = () => {\n    const video = this._video;\n    if (!video || this._rootEl.disabled) return;\n\n    video.source.muted = !video.source.muted;\n  };\n\n  private _onVolumeChange = () => {\n    const button = this._buttonEl;\n    const video = this._video;\n    const controlBar = this._controlBar;\n\n    if (!video || !controlBar) return;\n\n    const className = controlBar.className;\n\n    if (video.source.muted || video.source.volume === 0) {\n      button.classList.add(className.MUTED_BUTTON);\n      button.classList.remove(className.UNMUTED_BUTTON);\n    } else {\n      button.classList.add(className.UNMUTED_BUTTON);\n      button.classList.remove(className.MUTED_BUTTON);\n    }\n\n    this._updateDisplay();\n  };\n\n  private _createElements() {\n    const root = document.createElement(BROWSER.EL_BUTTON);\n    const buttonEl = document.createElement(BROWSER.EL_DIV);\n\n    root.appendChild(this._rangeControl.rootEl);\n    root.appendChild(buttonEl);\n    root.title = \"Toggle Mute\";\n\n    this._rootEl = root;\n    this._buttonEl = buttonEl;\n  }\n\n  private _onHold = (progress: number) => {\n    const video = this._video;\n    const controlBar = this._controlBar;\n\n    if (!video || !controlBar) return;\n\n    const className = controlBar.className;\n\n    video.source.volume = progress;\n\n    this._rootEl.classList.add(className.FIXED);\n    controlBar.containerEl.classList.add(className.FIXED);\n\n    this._updateDisplay();\n  };\n\n  private _onChange = (progress: number) => {\n    const video = this._video;\n    if (!video) return;\n\n    video.source.volume = progress;\n    if (progress > 0) {\n      video.source.muted = false;\n    } else {\n      video.source.muted = true;\n    }\n\n    this._updateDisplay();\n  };\n\n  private _onRelease = () => {\n    const controlBar = this._controlBar;\n    if (!controlBar) return;\n\n    const className = controlBar.className;\n\n    this._rootEl.classList.remove(className.FIXED);\n    controlBar.containerEl.classList.remove(className.FIXED);\n  };\n\n  private _updateDisplay = () => {\n    const video = this._video;\n    const root = this._rootEl;\n    if (!video) return;\n\n    if (!video.hasAudio()) {\n      root.disabled = true;\n      return;\n    }\n\n    root.disabled = false;\n\n    const volume = video.source.muted ? 0 : video.source.volume;\n\n    this._rangeControl.updateStyle(volume);\n  };\n}\n\nexport default VolumeControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport * as BROWSER from \"../../const/browser\";\nimport { isFullscreen } from \"../../utils\";\n\n/**\n * Show fullscreen enter / exit button.\n * @ko 풀스크린 진입 / 해제 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass FullscreenButton extends ControlBarItem {\n  public readonly element: HTMLElement;\n  private _controlBar: ControlBar | null;\n  private _targetEl: HTMLElement | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_BUTTON);\n    this.element.title = \"Toggle Fullscreen\";\n    this._controlBar = null;\n    this._targetEl = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n\n    if (!this._fullscreenAvailable()) {\n      element.classList.add(className.UNAVAILABLE);\n      return;\n    }\n\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.remove(className.UNAVAILABLE);\n    element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    this._addFullscreenHandlers();\n\n    if (isFullscreen()) {\n      element.classList.add(className.FULLSCREEN_EXIT_BUTTON);\n    } else {\n      element.classList.add(className.FULLSCREEN_BUTTON);\n    }\n\n    this._controlBar = controlBar;\n    this._targetEl = viewer.rootEl;\n  }\n\n  public destroy() {\n    const element = this.element;\n\n    element.className = \"\";\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    this._removeFullscreenHandlers();\n\n    this._controlBar = null;\n    this._targetEl = null;\n  }\n\n  private _onClick = () => {\n    const target = this._targetEl;\n    if (!target) return;\n\n    if (isFullscreen()) {\n      this._exitFullscreen();\n    } else {\n      this._requestFullscreen(target);\n    }\n  };\n\n  private _fullscreenAvailable() {\n    return BROWSER.FULLSCREEN_REQUEST.some(key => !!document[key]);\n  }\n\n  private _requestFullscreen(el: HTMLElement) {\n    for (const key of BROWSER.FULLSCREEN_REQUEST) {\n      const request = el[key];\n      if (request) {\n        request.call(el);\n        return;\n      }\n    }\n  }\n\n  private _exitFullscreen() {\n    for (const key of BROWSER.FULLSCREEN_EXIT) {\n      const exit = document[key];\n\n      if (exit) {\n        exit.call(document);\n        return;\n      }\n    }\n  }\n\n  private _addFullscreenHandlers() {\n    BROWSER.FULLSCREEN_CHANGE.forEach(evtName => {\n      document.addEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n\n  private _removeFullscreenHandlers() {\n    BROWSER.FULLSCREEN_CHANGE.forEach(evtName => {\n      document.removeEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n\n  private _onFullscreenChange = () => {\n    const element = this.element;\n    const controlBar = this._controlBar;\n\n    if (!controlBar) return;\n\n    const className = controlBar.className;\n\n    if (isFullscreen()) {\n      element.classList.add(className.FULLSCREEN_EXIT_BUTTON);\n      element.classList.remove(className.FULLSCREEN_BUTTON);\n    } else {\n      element.classList.add(className.FULLSCREEN_BUTTON);\n      element.classList.remove(className.FULLSCREEN_EXIT_BUTTON);\n    }\n  };\n}\n\nexport default FullscreenButton;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport * as BROWSER from \"../../const/browser\";\nimport { VIDEO_TIME_CHANGE_EVENT } from \"../../const/internal\";\n\n/**\n * Show video current / total time.\n * @ko 비디오의 현재 / 총 재생시간을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass VideoTime extends ControlBarItem {\n  public readonly element: HTMLElement;\n  private _video: TextureVideo | null;\n  private _currentTime: number;\n  private _duration: number;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_LEFT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_DIV);\n\n    this._video = null;\n    this._currentTime = 0;\n    this._duration = 0;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const video = viewer.projection?.getTexture();\n    const element = this.element;\n    const className = controlBar.className;\n\n    if (!video || !video.isVideo()) {\n      element.classList.add(className.UNAVAILABLE);\n      return;\n    }\n\n    element.classList.add(className.VIDEO_TIME_DISPLAY);\n    element.classList.remove(className.UNAVAILABLE);\n\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.addEventListener(VIDEO_TIME_CHANGE_EVENT, this._onCustomTimeChange);\n\n    this._video = video;\n    this._currentTime = video.source.currentTime;\n    this._duration = video.source.duration;\n\n    this._updateDisplay();\n  }\n\n  public destroy() {\n    const video = this._video;\n\n    if (!video) return;\n\n    this.element.className = \"\";\n    video.source.removeEventListener(BROWSER.EVENTS.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.removeEventListener(BROWSER.EVENTS.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.removeEventListener(VIDEO_TIME_CHANGE_EVENT, this._onCustomTimeChange);\n\n    this._video = null;\n  }\n\n  private _onTimeUpdate = () => {\n    const video = this._video;\n    if (!video) return;\n\n    this._currentTime = video.source.currentTime;\n    this._updateDisplay();\n  };\n\n  private _onDurationChange = () => {\n    const video = this._video;\n    if (!video) return;\n\n    this._duration = video.source.duration;\n    this._updateDisplay();\n  };\n\n  private _onCustomTimeChange = (evt: CustomEvent<{ time: number }>) => {\n    this._currentTime = evt.detail.time;\n    this._updateDisplay();\n  };\n\n  private _updateDisplay() {\n    const time = this._currentTime;\n    const timeMinute = Math.floor(time / 60);\n    const timeSeconds = Math.floor(time - timeMinute * 60);\n    const timeSecondsFormatted = timeSeconds < 10 ? `0${timeSeconds}` : timeSeconds;\n\n    const duration = this._duration;\n    const durationMinute = Math.floor(duration / 60);\n    const durationSeconds = Math.floor(duration - durationMinute * 60);\n    const durationSecondsFormatted = durationSeconds < 10 ? `0${durationSeconds}` : durationSeconds;\n\n    this.element.innerText = `${timeMinute}:${timeSecondsFormatted} / ${durationMinute}:${durationSecondsFormatted}`;\n  }\n}\n\nexport default VideoTime;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport { circulate, getObjectOption } from \"../../utils\";\nimport * as BROWSER from \"../../const/browser\";\nimport { EVENTS } from \"../../const/external\";\nimport { SVG_NAMESPACE } from \"../../const/internal\";\n\n/**\n * Options for {@link PieView}\n * @ko {@link PieView}용 옵션들\n * @category Plugin\n */\nexport interface PieViewOptions extends ControlBarItemOptions {\n  /**\n   * @copy PieView#resetCamera\n   */\n  resetCamera: boolean | Partial<{\n    yaw: number;\n    pitch: number;\n    zoom: number;\n    duration: number;\n    easing: (x: number) => number;\n  }>;\n}\n\n/**\n * Show camera direction/fov indicator.\n * @ko 카메라가 향하는 방향 및 FOV를 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass PieView extends ControlBarItem {\n  public readonly element: HTMLElement;\n\n  /**\n   * Set rotation to reset camera to when PieView is clicked.\n   * `false` will disable this value, and `true` will enable with default options.\n   * @ko PieView가 클릭되었을 때 카메라를 리셋할 방향을 지정합니다.\n   * `false`일 경우 이 동작을 비활성화하며, `true`일 경우 기본값을 사용합니다.\n   * @since 4.0.0\n   */\n  public resetCamera: PieViewOptions[\"resetCamera\"];\n\n  private _viewer: View360 | null;\n  private _piePathEl: SVGPathElement;\n  private _rangeCircleEl: SVGCircleElement;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    resetCamera = true,\n    position = CONTROL_BAR_ITEM_POSITION.TOP_RIGHT,\n    order = 9999\n  }: Partial<PieViewOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_DIV);\n    this.element.title = \"Reset view\";\n    this.resetCamera = resetCamera;\n    this._createPieElements();\n    this._viewer = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n\n    if (!viewer.initialized) {\n      viewer.once(EVENTS.READY, this._updatePie);\n    } else {\n      this._updatePie({ target: viewer });\n    }\n\n    const rootClass = controlBar.className.PIEVIEW_ROOT;\n    element.classList.add(rootClass);\n\n    if (this.resetCamera) {\n      element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    }\n\n    viewer.on(EVENTS.VIEW_CHANGE, this._updatePie);\n\n    this._viewer = viewer;\n  }\n\n  public destroy(viewer: View360) {\n    const element = this.element;\n\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    element.className = \"\";\n    viewer.off(EVENTS.READY, this._updatePie);\n    viewer.off(EVENTS.VIEW_CHANGE, this._updatePie);\n\n    this._viewer = null;\n  }\n\n  private _onClick = () => {\n    const viewer = this._viewer;\n    const resetCamera = this.resetCamera;\n\n    if (!viewer || !resetCamera) return;\n\n    const {\n      yaw = viewer.initialYaw,\n      pitch = viewer.initialPitch,\n      zoom = viewer.initialZoom,\n      duration = 500\n    } = getObjectOption(resetCamera);\n\n    viewer.camera.animateTo({\n      yaw,\n      pitch,\n      zoom,\n      duration\n    });\n  };\n\n  private _createPieElements() {\n    const root = this.element;\n    const pieSVG = document.createElementNS(SVG_NAMESPACE, \"svg\");\n    pieSVG.setAttribute(\"viewBox\", \"0 0 48 48\");\n    pieSVG.setAttribute(\"width\", \"100%\");\n    pieSVG.setAttribute(\"height\", \"100%\");\n\n    const piePath = document.createElementNS(SVG_NAMESPACE, \"circle\");\n\n    piePath.setAttribute(\"stroke\", \"currentColor\");\n    piePath.setAttribute(\"fill\", \"transparent\");\n    piePath.setAttribute(\"cx\", \"24\");\n    piePath.setAttribute(\"cy\", \"24\");\n    piePath.setAttribute(\"r\", \"12\");\n    piePath.setAttribute(\"stroke-width\", \"24\");\n    pieSVG.appendChild(piePath);\n\n    const rangeCircle = document.createElementNS(SVG_NAMESPACE, \"circle\");\n\n    rangeCircle.setAttribute(\"stroke\", \"currentColor\");\n    rangeCircle.setAttribute(\"fill\", \"transparent\");\n    rangeCircle.setAttribute(\"cx\", \"24\");\n    rangeCircle.setAttribute(\"cy\", \"24\");\n    rangeCircle.setAttribute(\"r\", \"22.5\");\n    rangeCircle.setAttribute(\"stroke-width\", \"3\");\n    pieSVG.appendChild(rangeCircle);\n\n    root.appendChild(pieSVG);\n\n    this._piePathEl = piePath;\n    this._rangeCircleEl = rangeCircle;\n  }\n\n  private _updatePie = ({ target: viewer }: { target: View360 }) => {\n    const piePath = this._piePathEl;\n    const rangeCircle = this._rangeCircleEl;\n    const camera = viewer.camera;\n    const fov = camera.getHorizontalFov();\n    const yawRange = camera.getYawRange(camera.zoom);\n    const halfFov = fov * 0.5;\n\n    const pieRadius = 24 * Math.PI;\n    const pieDeg = pieRadius * fov / 360;\n    const pieOffset = pieRadius * (camera.yaw + halfFov + 90) / 360;\n\n    piePath.setAttribute(\"stroke-dasharray\", `${pieDeg} ${pieRadius - pieDeg}`);\n    piePath.setAttribute(\"stroke-dashoffset\", `${pieOffset}`);\n\n    if (isFinite(yawRange.min) && isFinite(yawRange.max)) {\n      const radius = 45 * Math.PI; // 2 * PI * r\n      const min = (circulate(yawRange.min, -180, 180) - halfFov) / 360;\n      const max = (circulate(yawRange.max, -180, 180) + halfFov) / 360;\n\n      const rangeDiff = radius * Math.abs(max - min);\n      const offset = -radius * (min - 0.25);\n\n      rangeCircle.setAttribute(\"stroke-dasharray\", `${rangeDiff} ${radius - rangeDiff}`);\n      rangeCircle.setAttribute(\"stroke-dashoffset\", `${offset}`);\n    } else {\n      rangeCircle.setAttribute(\"stroke-dasharray\", \"\");\n      rangeCircle.setAttribute(\"stroke-dashoffset\", \"\");\n    }\n  };\n}\n\nexport default PieView;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport * as BROWSER from \"../../const/browser\";\n\n/**\n * Show VR enter button.\n * @ko VR 진입 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass VRButton extends ControlBarItem {\n  public readonly element: HTMLElement;\n\n  private _viewer: View360 | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_BUTTON);\n    this.element.title = \"Enter VR\";\n    this._viewer = null;\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n\n    element.classList.add(className.UNAVAILABLE);\n    element.classList.add(className.VR_BUTTON);\n    element.classList.add(className.CONTROLS_BUTTON);\n\n    viewer.vr.isAvailable()\n      .then(available => {\n        if (available) {\n          element.classList.remove(className.UNAVAILABLE);\n        }\n      });\n\n    element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    this._viewer = viewer;\n  }\n\n  public destroy() {\n    const element = this.element;\n\n    element.className = \"\";\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n\n    this._viewer = null;\n  }\n\n  private _onClick = () => {\n    const viewer = this._viewer;\n    if (!viewer) return;\n\n    viewer.vr.enter();\n  };\n}\n\nexport default VRButton;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport { CONTROL_BAR_ITEM_POSITION } from \"./const\";\nimport View360 from \"../../View360\";\nimport * as BROWSER from \"../../const/browser\";\nimport GyroControl from \"../../control/GyroControl\";\nimport { CONTROL_EVENTS } from \"../../const/internal\";\nimport { sensorCanBeEnabledIOS } from \"../../utils\";\n\n/**\n * Show gyroscope control enable / disable button\n * @ko 자이로스코프 컨트롤 활성화 / 비활성화 버튼을 표시합니다.\n * @category Plugin\n * @group ControlBar\n * @since 4.0.0\n */\nclass GyroButton extends ControlBarItem {\n  public readonly element: HTMLElement;\n  private _viewer: View360 | null;\n  private _controlBar: ControlBar | null;\n\n  /**\n   * Create a new instance.\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  }: Partial<ControlBarItemOptions> = {}) {\n    super({\n      position,\n      order\n    });\n\n    this.element = document.createElement(BROWSER.EL_DIV);\n    this.element.title = \"Toggle gyroscope control\";\n  }\n\n  public init(viewer: View360, controlBar: ControlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n\n    element.addEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.add(className.UNAVAILABLE);\n\n    const enableButton = () => {\n      element.classList.remove(className.UNAVAILABLE);\n      viewer.control.gyro.on(CONTROL_EVENTS.ENABLE, this._updateStyle);\n      viewer.control.gyro.on(CONTROL_EVENTS.DISABLE, this._updateStyle);\n    };\n\n    if (sensorCanBeEnabledIOS()) {\n      enableButton();\n    } else {\n      GyroControl.isAvailable().then(available => {\n        if (!available) return;\n        enableButton();\n      });\n    }\n\n    this._controlBar = controlBar;\n    this._viewer = viewer;\n    this._updateStyle();\n  }\n\n  public destroy(viewer: View360) {\n    const element = this.element;\n\n    viewer.control.gyro.off(CONTROL_EVENTS.ENABLE, this._updateStyle);\n    viewer.control.gyro.off(CONTROL_EVENTS.DISABLE, this._updateStyle);\n    element.removeEventListener(BROWSER.EVENTS.CLICK, this._onClick);\n    element.className = \"\";\n\n    this._controlBar = null;\n    this._viewer = null;\n  }\n\n  private _onClick = () => {\n    const viewer = this._viewer;\n    const controlBar = this._controlBar;\n\n    if (!viewer || !controlBar) return;\n\n    const gyroControl = viewer.control.gyro;\n    if (gyroControl.enabled) {\n      gyroControl.disable();\n    } else {\n      GyroControl.requestSensorPermission().then(available => {\n        if (available) {\n          gyroControl.enable();\n        } else {\n          this.element.classList.add(controlBar.className.UNAVAILABLE);\n        }\n      });\n    }\n  };\n\n  private _updateStyle = () => {\n    const element = this.element;\n    const viewer = this._viewer;\n    const controlBar = this._controlBar;\n\n    if (!viewer || !controlBar) return;\n\n    const gyroControl = viewer.control.gyro;\n    const className = controlBar.className;\n\n    if (gyroControl.enabled) {\n      element.classList.add(className.GYRO_ENABLED);\n      element.classList.remove(className.GYRO_DISABLED);\n    } else {\n      element.classList.add(className.GYRO_DISABLED);\n      element.classList.remove(className.GYRO_ENABLED);\n    }\n  };\n}\n\nexport default GyroButton;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBar from \"./ControlBar\";\nimport View360 from \"../../View360\";\nimport * as BROWSER from \"../../const/browser\";\nimport { FULLSCREEN_CHANGE } from \"../../const/browser\";\nimport TextureVideo from \"../../texture/TextureVideo\";\nimport { isFullscreen } from \"../../utils\";\n\n/**\n * Options for ControlBar's {@link ControlBarOptions#autoHide}\n * @ko ControlBar의 {@link ControlBarOptions#autoHide}용 옵션\n * @category Plugin\n * @since 4.0.0\n */\nexport interface AutoHideOptions {\n  /**\n   * Initial delay before the control bar hides (ms)\n   * @ko 컨트롤바가 처음으로 표시되고 사라지기까지 걸리는 시간 (ms)\n   * @default 3000\n   * @since 4.0.0\n   */\n  initialDelay: number;\n  /**\n   * Delay time before hiding the control bar after mouse leave (ms)\n   * @ko 마우스가 컨트롤바 영역을 떠난 뒤 컨트롤바가 사라지기까지 걸리는 시간 (ms)\n   * @default 0\n   * @since 4.0.0\n   */\n  delay: number;\n  /**\n   * Delay time before hiding the control bar becomes active, like touch on mobile device or mouse move in fullscreen mode (ms)\n   * @ko 모바일이나 풀스크린 환경 등에서 사용자 입력이 없을 때 컨트롤바가 사라지기까지 걸리는 시간 (ms)\n   * @default 3000\n   * @since 4.0.0\n   */\n  idleDelay: number;\n}\n\nclass AutoHide {\n  private _initialDelay: AutoHideOptions[\"initialDelay\"];\n  private _delay: AutoHideOptions[\"delay\"];\n  private _idleDelay: AutoHideOptions[\"idleDelay\"];\n\n  private _controlBar: ControlBar;\n  private _timer: number;\n  private _isGrabbing: boolean;\n  private _isCursorInside: boolean;\n  private _isFullscreen: boolean;\n  private _targetEl: HTMLElement | null;\n  private _video: TextureVideo | null;\n\n  public get enabled() { return !!this._targetEl; }\n  public get hidden() { return this._controlBar.containerEl.classList.contains(this._hiddenClass); }\n\n  private get _hiddenClass() { return this._controlBar.className.HIDDEN; }\n  private get _fixedClass() { return this._controlBar.className.FIXED; }\n\n  public constructor(controlBar: ControlBar, {\n    initialDelay = 3000,\n    delay = 0,\n    idleDelay: activationDelay = 3000\n  }: Partial<AutoHideOptions>) {\n    this._controlBar = controlBar;\n    this._initialDelay = initialDelay;\n    this._delay = delay;\n    this._idleDelay = activationDelay;\n    this._timer = -1;\n    this._isCursorInside = false;\n    this._isGrabbing = false;\n    this._isFullscreen = false;\n    this._video = null;\n    this._targetEl = null;\n  }\n\n  public enable(viewer: View360) {\n    if (this._targetEl) {\n      this.disable(viewer);\n    }\n\n    const initialDelay = this._initialDelay;\n    const root = viewer.rootEl;\n\n    this._targetEl = viewer.rootEl;\n    this._timer = window.setTimeout(() => {\n      this.hide();\n    }, initialDelay);\n\n    root.addEventListener(BROWSER.EVENTS.MOUSE_DOWN, this._onHold);\n    root.addEventListener(BROWSER.EVENTS.MOUSE_ENTER, this._onMouseEnter);\n    root.addEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove);\n    root.addEventListener(BROWSER.EVENTS.MOUSE_LEAVE, this._onMouseLeave);\n    this._addFullscreenHandlers();\n\n    const video = viewer.projection?.getTexture();\n    if (!video || !video.isVideo()) {\n      return;\n    }\n\n    if (video.isPaused()) {\n      this._controlBar.containerEl.classList.add(this._fixedClass);\n    }\n\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_PLAY, this._onVideoPlay);\n    video.source.addEventListener(BROWSER.EVENTS.VIDEO_PAUSE, this._onVideoPause);\n\n    this._video = video;\n  }\n\n  public disable(viewer: View360) {\n    if (!this._targetEl) return;\n\n    const controlBar = this._controlBar;\n    const root = viewer.rootEl;\n    const video = this._video;\n\n    root.removeEventListener(BROWSER.EVENTS.MOUSE_DOWN, this._onHold);\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_UP, this._onRelease);\n    root.removeEventListener(BROWSER.EVENTS.MOUSE_ENTER, this._onMouseEnter);\n    root.removeEventListener(BROWSER.EVENTS.MOUSE_MOVE, this._onMouseMove);\n    root.removeEventListener(BROWSER.EVENTS.MOUSE_LEAVE, this._onMouseLeave);\n    this._removeFullscreenHandlers();\n\n    window.clearTimeout(this._timer);\n    controlBar.containerEl.classList.remove(this._fixedClass);\n\n    if (video) {\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_PLAY, this._onVideoPlay);\n      video.source.removeEventListener(BROWSER.EVENTS.VIDEO_PAUSE, this._onVideoPause);\n    }\n\n    this._isCursorInside = false;\n    this._isGrabbing = false;\n    this._video = null;\n    this._targetEl = null;\n  }\n\n  public show() {\n    this._clearHideTimer();\n    this._controlBar.containerEl.classList.remove(this._hiddenClass);\n  }\n\n  public showTemporaliy() {\n    this.show();\n    this._hideAfterDelay(this._idleDelay);\n  }\n\n  public hide() {\n    this._clearHideTimer();\n    this._controlBar.containerEl.classList.add(this._hiddenClass);\n  }\n\n  private _clearHideTimer() {\n    if (this._timer) {\n      window.clearTimeout(this._timer);\n      this._timer = -1;\n    }\n  }\n\n  private _hideAfterDelay(delay = this._delay) {\n    if (this._isGrabbing || (!this._isFullscreen && this._isCursorInside)) return;\n\n    this._clearHideTimer();\n    if (delay <= 0) {\n      this.hide();\n    } else {\n      this._timer = window.setTimeout(() => {\n        this.hide();\n      }, delay);\n    }\n  }\n\n  private _onMouseEnter = () => {\n    this._isCursorInside = true;\n    this.show();\n  };\n\n  private _onMouseLeave = () => {\n    this._isCursorInside = false;\n    this._hideAfterDelay();\n  };\n\n  private _onMouseMove = () => {\n    if (!this._isFullscreen) return;\n\n    this.showTemporaliy();\n  }\n\n  private _onHold = (evt: PointerEvent) => {\n    this._isGrabbing = true;\n\n    if (evt.pointerType === \"mouse\") {\n      this._isCursorInside = true;\n    }\n\n    window.addEventListener(BROWSER.EVENTS.MOUSE_UP, this._onRelease);\n\n    this.show();\n  };\n\n  private _onRelease = () => {\n    this._isGrabbing = false;\n\n    window.removeEventListener(BROWSER.EVENTS.MOUSE_UP, this._onRelease);\n\n    this._hideAfterDelay();\n  };\n\n  private _onVideoPlay = () => {\n    const root = this._targetEl;\n    if (!root) return;\n\n    this._controlBar.containerEl.classList.remove(this._fixedClass);\n  };\n\n  private _onVideoPause = () => {\n    const root = this._targetEl;\n    if (!root) return;\n\n    this._controlBar.containerEl.classList.add(this._fixedClass);\n  };\n\n  private _addFullscreenHandlers() {\n    FULLSCREEN_CHANGE.forEach(evtName => {\n      document.addEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n\n  private _removeFullscreenHandlers() {\n    FULLSCREEN_CHANGE.forEach(evtName => {\n      document.removeEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n\n  private _onFullscreenChange = () => {\n    this._isFullscreen = isFullscreen();\n\n    if (this._isFullscreen) {\n      this._hideAfterDelay();\n    }\n  };\n}\n\nexport default AutoHide;\n","import TextureVideo from \"../../texture/TextureVideo\";\nimport * as BROWSER from \"../../const/browser\";\nimport { clamp } from \"../../utils\";\nimport { VIDEO_TIME_CHANGE_EVENT } from \"../../const/internal\";\n\nclass VideoControl {\n  private _video: TextureVideo | null;\n\n  public enable(root: HTMLElement, video: TextureVideo) {\n    this._video = video;\n    // capture is needed for resolving conflict with keyboard control\n    root.addEventListener(BROWSER.EVENTS.KEY_DOWN, this._onKeyDown, true);\n  }\n\n  public disable(root: HTMLElement) {\n    this._video = null;\n    root.removeEventListener(BROWSER.EVENTS.KEY_DOWN, this._onKeyDown, true);\n  }\n\n  private _onKeyDown = (event: KeyboardEvent) => {\n    const video = this._video;\n    if (!video) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    const videoEl = video.source;\n    const keyPressed = event.keyCode != null\n      ? BROWSER.DIRECTION_KEY_CODE[event.keyCode]\n      : BROWSER.DIRECTION_KEY_NAME[event.key];\n\n    switch (keyPressed) {\n      case \"LEFT\":\n      case \"RIGHT\":\n        return this._changeVideoTime(videoEl, keyPressed === \"RIGHT\");\n      case \"UP\":\n      case \"DOWN\":\n        return this._changeVideoVolume(videoEl, keyPressed === \"UP\");\n    }\n\n    const spacePressed = event.keyCode === BROWSER.SPACE_KEY_CODE || event.key === BROWSER.SPACE_KEY_NAME;\n    if (spacePressed) {\n      this._toggleVideo(video);\n    }\n  }\n\n  private _changeVideoTime(video: HTMLVideoElement, forward: boolean) {\n    const delta = forward ? 5 : -5;\n\n    video.currentTime += delta;\n    video.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, { detail: { time: video.currentTime }}));\n  }\n\n  private _changeVideoVolume(video: HTMLVideoElement, increase: boolean) {\n    const delta = increase ? 0.1 : -0.1;\n\n    if (video.muted) {\n      video.volume = clamp(delta, 0, 1);\n    } else {\n      video.volume = clamp(video.volume + delta, 0, 1);\n    }\n\n    if (video.volume > 0) {\n      video.muted = false;\n    } else {\n      video.muted = true;\n    }\n  }\n\n  private _toggleVideo(video: TextureVideo) {\n    if (video.isPaused()) {\n      video.source.play();\n    } else {\n      video.source.pause();\n    }\n  }\n}\n\nexport default VideoControl;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport ControlBarItem, { ControlBarItemOptions } from \"./ControlBarItem\";\nimport ProgressBar from \"./ProgressBar\";\nimport PlayButton from \"./PlayButton\";\nimport VolumeControl from \"./VolumeControl\";\nimport FullscreenButton from \"./FullscreenButton\";\nimport VideoTime from \"./VideoTime\";\nimport PieView, { PieViewOptions } from \"./PieView\";\nimport VRButton from \"./VRButton\";\nimport GyroButton from \"./GyroButton\";\nimport AutoHide, { AutoHideOptions } from \"./AutoHide\";\nimport VideoControl from \"./VideoControl\";\nimport View360, { View360Events } from \"../../View360\";\nimport View360Plugin from \"../View360Plugin\";\nimport { EVENTS } from \"../../const/external\";\nimport { createElement, findIndex, getObjectOption } from \"../../utils\";\nimport { ValueOf } from \"../../type/utils\";\nimport { StaticClickEvent } from \"../../type/events\";\nimport { CONTROL_BAR_DEFAULT_CLASS, CONTROL_BAR_ITEM_POSITION } from \"./const\";\n\n/**\n * Options for {@link ControlBar}\n * @ko {@link ControlBar}용 옵션들\n * @category Plugin\n * @since 4.0.0\n */\nexport interface ControlBarOptions {\n  /**\n   * @copy ControlBar#autoHide\n   */\n  autoHide: boolean | Partial<AutoHideOptions>;\n  /**\n   * @copy ControlBar#showBackground\n   */\n  showBackground: boolean;\n  /**\n   * @copy ControlBar#clickToPlay\n   */\n  clickToPlay: boolean;\n  /**\n   * @copy ControlBar#keyboardControls\n   */\n  keyboardControls: boolean;\n  /**\n   * @copy ControlBar#progressBar\n   */\n  progressBar: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#playButton\n   */\n  playButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#volumeButton\n   */\n  volumeButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#fullscreenButton\n   */\n  fullscreenButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#videoTime\n   */\n  videoTime: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#pieView\n   */\n  pieView: boolean | Partial<PieViewOptions>;\n  /**\n   * @copy ControlBar#vrButton\n   */\n  vrButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#gyroButton\n   */\n  gyroButton: boolean | Partial<ControlBarItemOptions>;\n  /**\n   * @copy ControlBar#className\n   */\n  className: Partial<{ -readonly [key in keyof typeof ControlBar.DEFAULT_CLASS]: string }>;\n  /**\n   * @copy ControlBar#customItems\n   */\n  customItems: ControlBarItem[];\n}\n\n/**\n * A plugin that displays extra buttons & controls that controls {@link View360}.\n * @ko {@link View360}에 부가적인 버튼과 컨트롤을 추가해주는 플러그인.\n * @category Plugin\n * @since 4.0.0\n */\nclass ControlBar implements View360Plugin {\n  /**\n   * Default class names that ControlBar uses\n   * @ko ControlBar가 사용하는 디폴트 클래스 이름들\n   * @since 4.0.0\n   */\n  public static readonly DEFAULT_CLASS = CONTROL_BAR_DEFAULT_CLASS;\n\n  /**\n   * Constants for {@link ControlBarItemOptions#position}\n   * @ko {@link ControlBarItemOptions#position}에 사용 가능한 값들\n   */\n  public static readonly POSITION = CONTROL_BAR_ITEM_POSITION;\n\n  /**\n   * Automatically hide control bar on video plays.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오 재생시 자동으로 컨트롤바를 숨깁니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly autoHide?: ControlBarOptions[\"autoHide\"];\n  /**\n   * Show background element.\n   * @ko 배경 엘리먼트를 표시합니다.\n   * @since 4.0.0\n   */\n  public readonly showBackground?: ControlBarOptions[\"showBackground\"];\n  /**\n   * Whether to play / pause video on canvas click\n   * @ko 캔버스 클릭시에 비디오를 재생 / 일시정지 토글합니다.\n   * @since 4.0.0\n   */\n  public readonly clickToPlay: ControlBarOptions[\"clickToPlay\"];\n  /**\n   * Enable keyboard controls for video.\n   * Pressing up / down arrow will control video volume, and pressing left / right arrow will control video time.\n   * @ko 비디오 키보드 컨트롤을 활성화합니다.\n   * 위 / 아래 화살표키를 누를 시 비디오 볼륨을, 왼쪽 / 오른쪽 화살표키를 누를 시 비디오 시간을 조정합니다.\n   * @since 4.0.0\n   */\n  public readonly keyboardControls: ControlBarOptions[\"keyboardControls\"];\n  /**\n   * Show video progress bar.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오 프로그레스 바를 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly progressBar: ControlBarOptions[\"progressBar\"];\n  /**\n   * Show video play / pause button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오 재생 / 일시정지 버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly playButton: ControlBarOptions[\"playButton\"];\n  /**\n   * Show video volume control button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오 볼륨 조절 버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly volumeButton: ControlBarOptions[\"volumeButton\"];\n  /**\n   * Show fullscreen button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 풀스크린 진입 / 해제 버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly fullscreenButton: ControlBarOptions[\"fullscreenButton\"];\n  /**\n   * Show video current / total time\n   * `true` to enable with default values, `false` to disable.\n   * @ko 비디오의 현재 시간 / 총 시간을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly videoTime: ControlBarOptions[\"videoTime\"];\n  /**\n   * Show camera pie view.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 현재 카메라가 가리키는 방향을 표시하는 파이 뷰를 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly pieView: ControlBarOptions[\"pieView\"];\n  /**\n   * Show VR button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko VR 진입버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly vrButton: ControlBarOptions[\"vrButton\"];\n  /**\n   * Show gyroscope control enable / disable button.\n   * `true` to enable with default values, `false` to disable.\n   * @ko 자이로스코프 컨트롤을 활성화 / 비활성화하는 버튼을 표시합니다.\n   * `true`일 경우 기본값을 적용하고, `false`일 경우 비활성화합니다.\n   * @since 4.0.0\n   */\n  public readonly gyroButton: ControlBarOptions[\"gyroButton\"];\n  /**\n   * Override default class names.\n   * @ko 디폴트 클래스 이름들을 오버라이드합니다.\n   * @since 4.0.0\n   */\n  public readonly className: Required<ControlBarOptions[\"className\"]>;\n\n  /**\n   * Root element of the control bar\n   * @ko 컨트롤바의 루트 엘리먼트\n   * @since 4.0.0\n   */\n  public get rootEl() { return this._rootEl; }\n  /**\n   * Container element of the control bar\n   * @ko 컨트롤바의 컨테이너 엘리먼트\n   * @since 4.0.0\n   */\n  public get containerEl() { return this._containerEl; }\n  /**\n   * Background element of the control bar\n   * @ko 컨트롤바의 배경 엘리먼트\n   * @since 4.0.0\n   */\n  public get backgroundEl() { return this._bgEl; }\n  /**\n   * Control bar's default items created by {@link ControlBarOptions}\n   * @ko 주어진 {@link ControlBarOptions}에 의해 생성된 디폴트 아이템들\n   * @since 4.0.0\n   */\n  public get items() { return this._items; }\n  /**\n   * Custom control bar items\n   * @ko 커스텀 컨트롤바 아이템들을 추가합니다.\n   * @since 4.0.0\n   */\n  public get customItems() { return this._customItems; }\n\n  private _rootEl: HTMLElement;\n  private _containerEl: HTMLElement;\n  private _bgEl: HTMLElement;\n  private _wrapperEl: Record<ValueOf<typeof ControlBar.POSITION>, HTMLElement>;\n  private _items: Record<ValueOf<typeof ControlBar.POSITION>, ControlBarItem[]>;\n  private _customItems: ControlBarItem[];\n  private _autoHider: AutoHide;\n  private _videoControl: VideoControl;\n\n  /**\n   * Create new instance of ControlBar.\n   * @ko ControlBar의 새 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    autoHide,\n    showBackground,\n    clickToPlay = true,\n    keyboardControls = true,\n    progressBar = true,\n    playButton = true,\n    volumeButton = true,\n    fullscreenButton = true,\n    videoTime = true,\n    pieView = true,\n    vrButton = true,\n    gyroButton = true,\n    className = {},\n    customItems = []\n  }: Partial<ControlBarOptions> = {}) {\n    this.autoHide = autoHide;\n    this.showBackground = showBackground;\n    this.clickToPlay = clickToPlay;\n    this.keyboardControls = keyboardControls;\n    this.progressBar = progressBar;\n    this.playButton = playButton;\n    this.volumeButton = volumeButton;\n    this.fullscreenButton = fullscreenButton;\n    this.videoTime = videoTime;\n    this.pieView = pieView;\n    this.vrButton = vrButton;\n    this.gyroButton = gyroButton;\n    this.className = {\n      ...ControlBar.DEFAULT_CLASS,\n      ...className\n    };\n\n    const rootClass = className.CONTROLS_ROOT ?? ControlBar.DEFAULT_CLASS.CONTROLS_ROOT;\n\n    this._rootEl = createElement(rootClass);\n    this._createPositionWrappers();\n    this._items = Object.keys(ControlBar.POSITION).reduce((items, key) => {\n      items[ControlBar.POSITION[key]] = [];\n      return items;\n    }, {}) as Record<ValueOf<typeof ControlBar.POSITION>, ControlBarItem[]>;\n    this._customItems = customItems;\n    this._autoHider = new AutoHide(this, getObjectOption(autoHide));\n    this._videoControl = new VideoControl();\n\n    customItems.forEach(item => {\n      this._items[item.position].push(item);\n    });\n  }\n\n  public init(viewer: View360) {\n    const panoRoot = viewer.rootEl;\n    const controlsRoot = this._rootEl;\n    const defaultItems = this._createDefaultItems();\n\n    this._updateBackground(viewer);\n    this._updateAutoHide(viewer);\n    this._updateKeyboardHandler(viewer);\n\n    panoRoot.appendChild(controlsRoot);\n    this._addItem(viewer, defaultItems);\n    this._addItem(viewer, this._customItems);\n\n    viewer.on(EVENTS.PROJECTION_CHANGE, this._onNewSrcLoad);\n    viewer.on(EVENTS.STATIC_CLICK, this._onStaticClick);\n  }\n\n  public destroy(viewer: View360): void {\n    // Remove controls root from pano root\n    const panoRoot = viewer.rootEl;\n    const controlsRoot = this._rootEl;\n    const items = this._items;\n\n    if (controlsRoot.parentElement === panoRoot) {\n      panoRoot.removeChild(controlsRoot);\n    }\n\n    Object.keys(items).forEach((key: ValueOf<typeof ControlBar.POSITION>) => {\n      const category = items[key];\n\n      category.forEach(item => {\n        item.destroy(viewer, this);\n      });\n\n      items[key] = [];\n    });\n\n    this._clearItemElements();\n    this._autoHider.disable(viewer);\n    this._videoControl.disable(panoRoot);\n\n    viewer.off(EVENTS.PROJECTION_CHANGE, this._onNewSrcLoad);\n    viewer.off(EVENTS.STATIC_CLICK, this._onStaticClick);\n  }\n\n  private _addItem(viewer: View360, items: ControlBarItem[]) {\n    for (const item of items) {\n      const category = this._items[item.position];\n      const wrapper = this._wrapperEl[item.position];\n\n      const nextSiblingIndex = findIndex(category, sibling => sibling.order > item.order);\n\n      if (nextSiblingIndex >= 0) {\n        const nextSibling = category[nextSiblingIndex].element;\n        category.splice(nextSiblingIndex, 0, item);\n        wrapper.insertBefore(item.element, nextSibling);\n      } else {\n        category.push(item);\n        wrapper.appendChild(item.element);\n      }\n\n      item.init(viewer, this);\n    }\n  }\n\n  private _createPositionWrappers() {\n    const className = {\n      ...ControlBar.DEFAULT_CLASS,\n      ...this.className\n    };\n    const rootEl = this._rootEl;\n\n    // BG & FLOATING CONTROLS\n    const backgroundEl = createElement(className.CONTROLS_BG);\n    const floatLeftEl = createElement(className.CONTROLS_FLOAT_LEFT);\n    const floatRightEl = createElement(className.CONTROLS_FLOAT_RIGHT);\n\n    rootEl.appendChild(floatLeftEl);\n    rootEl.appendChild(floatRightEl);\n\n    // BOTTOM CONTROLS\n    const container = createElement(className.CONTROLS_MAIN);\n    const topWrapper = createElement(className.CONTROLS_TOP);\n    const bottomWrapper = createElement(className.CONTROLS_BOTTOM);\n    const midWrapper = createElement(className.CONTROLS_MID);\n    const leftControlsWrapper = createElement(className.CONTROLS_LEFT);\n    const rightControlsWrapper = createElement(className.CONTROLS_RIGHT);\n\n    midWrapper.appendChild(leftControlsWrapper);\n    midWrapper.appendChild(rightControlsWrapper);\n    container.appendChild(backgroundEl);\n    container.appendChild(topWrapper);\n    container.appendChild(midWrapper);\n    container.appendChild(bottomWrapper);\n    rootEl.appendChild(container);\n\n    this._bgEl = backgroundEl;\n    this._containerEl = container;\n    this._wrapperEl = {\n      [ControlBar.POSITION.MAIN_TOP]: topWrapper,\n      [ControlBar.POSITION.MAIN_LEFT]: leftControlsWrapper,\n      [ControlBar.POSITION.MAIN_RIGHT]: rightControlsWrapper,\n      [ControlBar.POSITION.MAIN_BOTTOM]: bottomWrapper,\n      [ControlBar.POSITION.TOP_LEFT]: floatLeftEl,\n      [ControlBar.POSITION.TOP_RIGHT]: floatRightEl\n    };\n  }\n\n  private _clearItemElements() {\n    const wrappers = Object.keys(ControlBar.POSITION).map(key => ControlBar.POSITION[key]);\n\n    // Remove all elements inside wrappers\n    wrappers.forEach(wrapper => {\n      while (wrapper.firstChild) {\n        wrapper.removeChild(wrapper.firstChild);\n      }\n    });\n  }\n\n  private _onStaticClick = ({ target: viewer, isTouch }: StaticClickEvent) => {\n    const autoHider = this._autoHider;\n\n    if (isTouch) {\n      if (!autoHider.enabled) return;\n\n      if (autoHider.hidden) {\n        autoHider.showTemporaliy();\n      } else {\n        autoHider.hide();\n      }\n    } else {\n      if (!this.clickToPlay) return;\n\n      const video = viewer.projection?.getTexture();\n      if (!video || !video.isVideo()) return;\n\n      if (video.isPaused()) {\n        video.source.play();\n      } else {\n        video.source.pause();\n      }\n    }\n  };\n\n  private _onNewSrcLoad = ({ target: viewer }: View360Events[\"projectionChange\"]) => {\n    const items = this._items;\n\n    this._updateBackground(viewer);\n    this._updateAutoHide(viewer);\n    this._updateKeyboardHandler(viewer);\n\n    Object.keys(items).forEach((key: ValueOf<typeof ControlBar.POSITION>) => {\n      const category = items[key];\n\n      category.forEach(item => {\n        item.destroy(viewer, this);\n        item.init(viewer, this);\n      });\n    });\n  };\n\n  private _updateAutoHide(viewer: View360) {\n    const autoHide = this.autoHide;\n    const autoHider = this._autoHider;\n\n    if (autoHide != null) {\n      if (autoHide) {\n        autoHider.enable(viewer);\n      } else {\n        autoHider.disable(viewer);\n      }\n    } else {\n      // Automatically choose whether to show background by content type\n      const texture = viewer.projection?.getTexture();\n\n      if (texture && texture.isVideo()) {\n        // Enable auto hide when content type is video\n        autoHider.enable(viewer);\n      } else {\n        autoHider.disable(viewer);\n      }\n    }\n  }\n\n  private _updateBackground(viewer: View360) {\n    const background = this._bgEl;\n    const showBackground = this.showBackground;\n    const hiddenClass = this.className.HIDDEN ?? ControlBar.DEFAULT_CLASS.HIDDEN;\n\n    if (showBackground != null) {\n      if (showBackground) {\n        background.classList.remove(hiddenClass);\n      } else {\n        background.classList.add(hiddenClass);\n      }\n    } else {\n      // Automatically choose whether to show background by content type\n      const texture = viewer.projection?.getTexture();\n\n      if (texture && texture.isVideo()) {\n        // Show bg when content type is video\n        background.classList.remove(hiddenClass);\n      } else {\n        background.classList.add(hiddenClass);\n      }\n    }\n  }\n\n  private _updateKeyboardHandler(viewer: View360) {\n    const panoRoot = viewer.rootEl;\n    const videoControl = this._videoControl;\n    const texture = viewer.projection?.getTexture();\n\n    if (this.keyboardControls && texture && texture.isVideo()) {\n      videoControl.enable(panoRoot, texture);\n    } else {\n      videoControl.disable(panoRoot);\n    }\n  }\n\n  private _createDefaultItems(): ControlBarItem[] {\n    const items: ControlBarItem[] = [];\n\n    if (this.progressBar) {\n      items.push(new ProgressBar(getObjectOption(this.progressBar)));\n    }\n\n    if (this.playButton) {\n      items.push(new PlayButton(getObjectOption(this.playButton)));\n    }\n\n    if (this.volumeButton) {\n      items.push(new VolumeControl(getObjectOption(this.volumeButton)));\n    }\n\n    if (this.gyroButton) {\n      items.push(new GyroButton(getObjectOption(this.gyroButton)));\n    }\n\n    if (this.vrButton) {\n      items.push(new VRButton(getObjectOption(this.vrButton)));\n    }\n\n    if (this.fullscreenButton) {\n      items.push(new FullscreenButton(getObjectOption(this.fullscreenButton)));\n    }\n\n    if (this.videoTime) {\n      items.push(new VideoTime(getObjectOption(this.videoTime)));\n    }\n\n    if (this.pieView) {\n      items.push(new PieView(getObjectOption(this.pieView)));\n    }\n\n    return items;\n  }\n}\n\nexport default ControlBar;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Camera from \"../core/Camera\";\nimport PanoControl from \"../control/PanoControl\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport Texture from \"../texture/Texture\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport { VideoConfig } from \"../type/external\";\nimport UniformCanvasCube from \"../uniform/UniformCanvasCube\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport UniformTextureCube from \"../uniform/UniformTextureCube\";\n\ntype CommonProjectionUniforms = {\n  uTexture: UniformTexture2D | UniformTextureCube | UniformCanvasCube;\n}\n\n/**\n * Common option for {@link Projection}s\n * @ko {@link Projection}을 위한 공통 옵션들\n * @category Projection\n * @since 4.0.0\n */\nexport interface ProjectionOptions {\n  /**\n   * @copy Projection#src\n   */\n  src: string | HTMLElement | Array<string | HTMLElement>;\n  /**\n   * @copy Projection#video\n   */\n  video?: boolean | Partial<VideoConfig>;\n}\n\n/**\n * Base class for projections.\n * @ko 프로젝션 베이스 클래스.\n * @category Projection\n * @since 4.0.0\n */\nabstract class Projection<T extends CommonProjectionUniforms = CommonProjectionUniforms> {\n  /**\n   * Source URL to panorama image/video.\n   * @ko 파노라마 이미지/비디오의 URL\n   * @since 4.0.0\n   */\n  public readonly src: ProjectionOptions[\"src\"];\n  /**\n   * Properties for the video element.\n   * Setting `false` will treat panorama source as an image, `true` will use default properties.\n   * @ko 비디오 엘리먼트에 설정할 프로퍼티를 담는 객체.\n   * @since 4.0.0\n   * @example\n   * Default properties\n   * ```ts\n   * autoplay: true\n   * muted: true\n   * loop: false\n   * volume: 1\n   * ```\n   */\n  public readonly video: ProjectionOptions[\"video\"];\n\n  protected _mesh: TriangleMesh<T> | null;\n\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor({\n    src,\n    video = false\n  }: ProjectionOptions) {\n    this.src = src;\n    this.video = video;\n    this._mesh = null;\n  }\n\n  /**\n   * Apply texture to current projection.\n   * @ko 주어진 텍스쳐를 현재 프로젝션에 적용합니다.\n   * @param ctx - Instance of the WebGLContext helper {@ko WebGL context 헬퍼의 인스턴스}\n   * @param texture - New texture to apply {@ko 새로 적용할 텍스쳐}\n   * @internal\n   * @since 4.0.0\n   */\n  public abstract applyTexture(ctx: WebGLContext, texture: Texture): void;\n\n  /**\n   * Release all resources projection has.\n   * This is automatically called on projection change & View360's destroy call\n   * @ko 현재 갖고 있는 모든 리소스를 반환합니다.\n   * 이 메소드는 프로젝션 변경 및 View360의 destroy 호출 시 자동으로 호출됩니다.\n   * @param ctx\n   */\n  public releaseAllResources(ctx: WebGLContext) {\n    this._mesh?.destroy(ctx);\n  }\n\n  /**\n   * Update camera to match projection's settings.\n   * @ko 현재 프로젝션의 세팅으로 카메라를 업데이트합니다.\n   * @param camera - Instance of the camera to update {@ko 업데이트할 카메라의 인스턴스}\n   * @since 4.0.0\n   */\n  public updateCamera(camera: Camera) {\n    // Use default mode & no view restriction\n    camera.resetRange();\n  }\n\n  /**\n   * Update control to match projection's settings.\n   * @ko 현재 프로젝션의 세팅으로 컨트롤을 업데이트합니다.\n   * @param control - Instance of the control to update {@ko 업데이트할 컨트롤의 인스턴스}\n   * @since 4.0.0\n   */\n  public updateControl(control: PanoControl) {\n    control.ignoreZoomScale = false;\n  }\n\n  /**\n   * Update projection.\n   * @ko 현재 프로젝션 정보를 갱신합니다.\n   * @param camera - Instance of the camera to reference {@ko 참조할 카메라의 인스턴스}\n   * @since 4.0.0\n   */\n  public update(camera: Camera) {} // eslint-disable-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n\n  /**\n   * Return active texture.\n   * @ko 현재 활성화된 텍스쳐를 반환합니다.\n   * @internal\n   * @since 4.0.0\n   */\n  public getTexture() {\n    if (!this._mesh) return null;\n\n    return this._mesh.program.uniforms.uTexture.texture;\n  }\n\n  /**\n   * A 3D triangle mesh for projection. It's `null` until loading the `src`.\n   * @ko Projection을 표시하기 위한 Mesh, src를 로드하기 전까지는 `null`입니다.\n   * @since 4.0.0\n   */\n  public getMesh(): TriangleMesh<T> | null {\n    return this._mesh;\n  }\n}\n\nexport default Projection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nabstract class Uniform {\n  public needsUpdate: boolean;\n\n  public constructor() {\n    this.needsUpdate = true;\n  }\n\n  public abstract update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation, isWebGL2: boolean): void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public destroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    // DO_NOTHING\n  }\n}\n\nexport default Uniform;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport TextureCube from \"../texture/TextureCube\";\nimport { reorderCube } from \"../utils\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Uniform from \"./Uniform\";\n\nclass UniformTextureCube extends Uniform {\n  public readonly texture: TextureCube;\n  private _webglTexture: WebGLTexture;\n  private _cubemapOrder: string;\n\n  public constructor(ctx: WebGLContext, texture: TextureCube, cubemapOrder: string) {\n    super();\n\n    this.texture = texture;\n    this._webglTexture = ctx.createWebGLCubeTexture(texture, texture.width);\n    this._cubemapOrder = cubemapOrder;\n  }\n\n  public destroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n    this.texture.destroy();\n    gl.deleteTexture(this._webglTexture);\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation, isWebGL2: boolean) {\n    const texture = this.texture;\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._webglTexture);\n\n    const sources = reorderCube(texture.sources, this._cubemapOrder);\n    sources.forEach((src, idx) => {\n      if (isWebGL2) {\n        gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + idx, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, src);\n      } else {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + idx, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, src);\n      }\n    });\n\n    if (!texture.isVideo()) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\nexport default UniformTextureCube;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture2D from \"../texture/Texture2D\";\nimport { range, reorderCube } from \"../utils\";\n\n/** @hidden */\nclass CubeTexturePainter {\n  public readonly texture: Texture2D;\n  private _renderingOrder: number[];\n  private _canvas: HTMLCanvasElement;\n  private _ctx: CanvasRenderingContext2D;\n  private _row: number;\n  private _column: number;\n  private _size: number;\n\n  public get size() { return this._size; }\n\n  public constructor(texture: Texture2D, cubemapOrder: string) {\n    this.texture = texture;\n    this._renderingOrder = reorderCube(range(6), cubemapOrder);\n\n    const canvas = document.createElement(\"canvas\");\n\n    this._calcRenderingSize();\n\n    canvas.width = this._size;\n    canvas.height = this._size;\n\n    this._canvas = canvas;\n    this._ctx = canvas.getContext(\"2d\")!;\n  }\n\n  public destroy() {\n    const canvas = this._canvas;\n\n    // release memories\n    canvas.width = 1;\n    canvas.height = 1;\n    this._canvas = null as any;\n  }\n\n  public draw(gl: WebGLRenderingContext | WebGL2RenderingContext, isWebGL2: boolean) {\n    const size = this._size;\n    const texture = this.texture;\n    let surfaceIdx = 0;\n\n    for (let row = 0; row < this._row; row++) {\n      for (let column = 0; column < this._column; column++) {\n        const x = size * column;\n        const y = size * row;\n        const renderingFace = this._renderingOrder[surfaceIdx];\n\n        this._ctx.drawImage(texture.source as CanvasImageSource, x, y, size, size, 0, 0, size, size);\n\n        if (isWebGL2) {\n          gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderingFace, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n        } else {\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderingFace, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n        }\n\n        surfaceIdx++;\n      }\n    }\n  }\n\n  private _calcRenderingSize() {\n    const {\n      width,\n      height\n    } = this.texture;\n    const aspect = width / height;\n\n    if (aspect === 1 / 6) {\n      this._size = width;\n      this._row = 6;\n      this._column = 1;\n    } else if (aspect === 6) {\n      this._size = height;\n      this._row = 1;\n      this._column = 6;\n    } else if (aspect === 2 / 3) {\n      this._size = width * 0.5;\n      this._row = 3;\n      this._column = 2;\n    } else {\n      this._size = width / 3;\n      this._row = 2;\n      this._column = 3;\n    }\n  }\n}\n\nexport default CubeTexturePainter;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport CubeTexturePainter from \"../core/CubeTexturePainter\";\nimport Texture2D from \"../texture/Texture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Uniform from \"./Uniform\";\n\nclass UniformCanvasCube extends Uniform {\n  private _webglTexture: WebGLTexture;\n  private _painter: CubeTexturePainter;\n\n  public get texture() { return this._painter.texture; }\n\n  public constructor(ctx: WebGLContext, texture: Texture2D, cubemapOrder: string) {\n    super();\n\n    this._painter = new CubeTexturePainter(texture as Texture2D, cubemapOrder);\n    this._webglTexture = ctx.createWebGLCubeTexture(texture, this._painter.size);\n  }\n\n  public destroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    gl.deleteTexture(this._webglTexture);\n    this._painter.destroy();\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation, isWebGL2: boolean) {\n    const texture = this.texture;\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._webglTexture);\n\n    this._painter.draw(gl, isWebGL2);\n\n    if (!texture.isVideo()) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\nexport default UniformCanvasCube;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Object3D from \"./Object3D\";\nimport ShaderProgram from \"./ShaderProgram\";\nimport VertexArrayObject from \"./VertexArrayObject\";\nimport Uniform from \"../uniform/Uniform\";\nimport WebGLContext from \"./WebGLContext\";\n\n/**\n * @hidden\n */\nclass TriangleMesh<T extends Record<string, Uniform> = Record<string, never>> extends Object3D {\n  /**\n   * @internal\n   * Geometry data for projection\n   */\n  public readonly vao: VertexArrayObject;\n  /**\n   * @internal\n   * Material(shader) data for projection\n   */\n  public readonly program: ShaderProgram<T>;\n\n  public constructor(vao: VertexArrayObject, program: ShaderProgram<T>) {\n    super();\n\n    this.vao = vao;\n    this.program = program;\n  }\n\n  public destroy(ctx: WebGLContext) {\n    ctx.releaseVAO(this.vao);\n    ctx.releaseShaderResources(this.program);\n  }\n}\n\nexport default TriangleMesh;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Uniform from \"../uniform/Uniform\";\nimport WebGLContext from \"./WebGLContext\";\nimport { UniformLocations } from \"../type/internal\";\n\nclass ShaderProgram<T extends Record<string, Uniform> = Record<string, Uniform>> {\n  public readonly program: WebGLProgram;\n  public readonly uniforms: T;\n  public readonly uniformLocations: UniformLocations<T>;\n\n  public constructor(ctx: WebGLContext, vertexShader: string, fragmentShader: string, uniforms: T) {\n    this.program = ctx.createProgram(vertexShader, fragmentShader);\n    this.uniforms = uniforms;\n    this.uniformLocations = ctx.getUniformLocations(this.program, uniforms);\n  }\n}\n\nexport default ShaderProgram;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { TypedArray } from \"../type/utils\";\n\n/**\n * @hidden\n */\nclass VertexData<T extends TypedArray> {\n  public readonly data: T;\n  public itemSize: number;\n  public count: number;\n\n  /** */\n  public constructor(data: T, itemSize: number) {\n    this.data = data;\n    this.itemSize = itemSize;\n    this.count = data.length / itemSize;\n  }\n}\n\nexport default VertexData;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport VertexData from \"../core/VertexData\";\n\n/**\n * @hidden\n */\nabstract class Geometry {\n  public readonly vertices: VertexData<Float32Array>;\n  public readonly indicies: VertexData<Uint16Array>;\n  public readonly uvs: VertexData<Float32Array>;\n\n  /** */\n  public constructor(vertices: number[], indicies: number[], uvs: number[]) {\n    this.vertices = new VertexData(new Float32Array(vertices), 3);\n    this.indicies = new VertexData(new Uint16Array(indicies), 1);\n    this.uvs = new VertexData(new Float32Array(uvs), 2);\n  }\n}\n\nexport default Geometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"./Geometry\";\nimport { ROTATE } from \"../const/internal\";\nimport { reorderCube } from \"../utils\";\n\n/**\n * @hidden\n */\nclass CubeGeometry extends Geometry {\n  public constructor({\n    order,\n    rotateUV\n  }: {\n    order: string;\n    rotateUV?: ROTATE[]\n  }) {\n    const vertices = [\n      // back\n      1, -1, 1,\n      -1, -1, 1,\n      -1, 1, 1,\n      1, 1, 1,\n\n      // front\n      -1, -1, -1,\n      1, -1, -1,\n      1, 1, -1,\n      -1, 1, -1,\n\n      // up\n      -1, 1, -1,\n      1, 1, -1,\n      1, 1, 1,\n      -1, 1, 1,\n\n      // down\n      -1, -1, 1,\n      1, -1, 1,\n      1, -1, -1,\n      -1, -1, -1,\n\n      // right\n      1, -1, -1,\n      1, -1, 1,\n      1, 1, 1,\n      1, 1, -1,\n\n      // left\n      -1, -1, 1,\n      -1, -1, -1,\n      -1, 1, -1,\n      -1, 1, 1\n    ];\n\n    const indicies = [\n      0, 1, 2,\n      0, 2, 3,\n      4, 5, 6,\n      4, 6, 7,\n      8, 9, 10,\n      8, 10, 11,\n      12, 13, 14,\n      12, 14, 15,\n      16, 17, 18,\n      16, 18, 19,\n      20, 21, 22,\n      20, 22, 23\n    ];\n\n    const oneThird = 1 / 3;\n    const coords: number[][] = [];\n\n    for (let r = 1; r >= 0; r--) {\n      for (let c = 0; c < 3; c++) {\n        const coord = [\n          c * oneThird, r * 0.5,\n          (c + 1) * oneThird, r * 0.5,\n          (c + 1) * oneThird, (r + 1) * 0.5,\n          c * oneThird, (r + 1) * 0.5\n        ];\n\n        coords.push(coord);\n      }\n    }\n\n    if (rotateUV) {\n      rotateUV.forEach((degree, idx) => {\n        if (degree === ROTATE.ZERO) return;\n\n        const coord = coords[idx];\n        let newOrder: number[];\n\n        if (degree === ROTATE.CW_90) {\n          newOrder = [1, 2, 3, 0];\n        } else if (degree === ROTATE.CCW_90) {\n          newOrder = [3, 0, 1, 2];\n        } else {\n          newOrder = [2, 3, 0, 1];\n        }\n\n        const newCoords = Array<number>(coord.length);\n        for (let uvIdx = 0; uvIdx < coord.length / 2; uvIdx++) {\n          newCoords[uvIdx * 2 + 0] = coord[newOrder[uvIdx] * 2 + 0];\n          newCoords[uvIdx * 2 + 1] = coord[newOrder[uvIdx] * 2 + 1];\n        }\n\n        coords[idx] = newCoords;\n      });\n    }\n\n    const uvs = reorderCube(coords, order, \"BFUDRL\")\n      .reduce((acc, val) => acc.concat(val), []);\n\n    super(vertices, indicies, uvs);\n  }\n}\n\nexport default CubeGeometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport UniformTextureCube from \"../uniform/UniformTextureCube\";\nimport UniformCanvasCube from \"../uniform/UniformCanvasCube\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport TextureCube from \"../texture/TextureCube\";\nimport CubeGeometry from \"../geometry/CubeGeometry\";\nimport vs from \"../shader/cube.vert\";\nimport fs from \"../shader/cube.frag\";\n\n/**\n * Options for {@link CubemapProjection}\n * @ko {@link CubemapProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface CubemapProjectionOptions extends ProjectionOptions {\n  /**\n   * Order of the cubemap images.\n   * @ko 큐브맵 이미지의 순서.\n   * @since 4.0.0\n   * @default \"RLUDFB\" (Right - Left - Up - Down - Front - Back)\n   */\n  cubemapOrder?: string;\n  /**\n   * Whether to flip cubemap image horizontally.\n   * @ko 큐브맵 이미지를 좌우대칭할지 여부.\n   * @since 4.0.0\n   * @default false\n   */\n  cubemapFlipX?: boolean;\n}\n\n/**\n * Projection based on cubemap images, accepts both multiple or single images.\n * @ko 큐브맵 이미지 기반의 프로젝션, 단일 혹은 여러 장의 이미지를 모두 사용 가능합니다.\n * @since 4.0.0\n * @category Projection\n */\nclass CubemapProjection extends Projection<{\n  uTexture: UniformTextureCube | UniformCanvasCube;\n}> {\n  private _cubemapOrder: NonNullable<CubemapProjectionOptions[\"cubemapOrder\"]>;\n  private _cubemapFlipX: NonNullable<CubemapProjectionOptions[\"cubemapFlipX\"]>;\n\n  /**\n   * Create new instance.\n   * @ko 새 인스턴스를 생성합니다.\n   * @param options Options {@ko Options}\n   */\n  public constructor(options: CubemapProjectionOptions) {\n    super(options);\n\n    const {\n      cubemapOrder = \"RLUDFB\",\n      cubemapFlipX = false\n    } = options;\n\n    this._cubemapOrder = cubemapOrder;\n    this._cubemapFlipX = cubemapFlipX;\n  }\n\n  public applyTexture(ctx: WebGLContext, texture: Texture2D) {\n    const cubemapOrder = this._cubemapOrder;\n    const cubemapFlipX = this._cubemapFlipX;\n    const uniforms = {\n      uTexture: texture.isCube()\n        ? new UniformTextureCube(ctx, texture as TextureCube, cubemapOrder)\n        : new UniformCanvasCube(ctx, texture as Texture2D, cubemapOrder)\n    };\n\n    const geometry = new CubeGeometry({\n      order: cubemapOrder\n    });\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    if (cubemapFlipX) {\n      mesh.scale[0] = -1;\n    }\n    mesh.updateMatrix();\n\n    this._mesh = mesh;\n  }\n}\n\nexport default CubemapProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Texture2D from \"../texture/Texture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Uniform from \"./Uniform\";\n\nclass UniformTexture2D extends Uniform {\n  public readonly texture: Texture2D;\n  private _webglTexture: WebGLTexture;\n\n  public constructor(ctx: WebGLContext, texture: Texture2D) {\n    super();\n\n    this.texture = texture;\n    this._webglTexture = ctx.createWebGLTexture(texture);\n  }\n\n  public destroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n    this.texture.destroy();\n    gl.deleteTexture(this._webglTexture);\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation, isWebGL2: boolean) {\n    const texture = this.texture;\n    const isVideo = texture.isVideo();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this._webglTexture);\n\n    if (!isVideo && isWebGL2) {\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);\n    }\n\n    if (!isVideo) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\nexport default UniformTexture2D;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport CubeGeometry from \"../geometry/CubeGeometry\";\nimport vs from \"../shader/common.vert\";\nimport fs from \"../shader/common.frag\";\n\n/**\n * Options for {@link CubestripProjection}\n * @ko {@link CubestripProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface CubestripProjectionOptions extends ProjectionOptions {\n  /**\n   * @copy CubemapProjectionOptions#cubemapOrder\n   */\n  cubemapOrder?: string;\n  /**\n   * @copy CubemapProjectionOptions#cubemapFlipX\n   */\n  cubemapFlipX?: boolean;\n}\n\n/**\n * Projection based on cubemap strip.\n * Slightly more efficient than {@link CubemapProjection} as it doesn't copy cubemap image to canvas while rendering.\n * Accepts only single image.\n * @ko 큐브맵 스트립 기반의 프로젝션.\n * {@link CubemapProjection}와 달리 렌더링하는 과정에 캔버스에 이미지를 복사하는 과정이 없기 때문에 살짝 더 효율적입니다.\n * 단일 이미지만 사용 가능합니다.\n * @since 4.0.0\n * @category Projection\n */\nclass CubestripProjection extends Projection<{\n  uTexture: UniformTexture2D;\n}> {\n  private _cubemapOrder: NonNullable<CubestripProjectionOptions[\"cubemapOrder\"]>;\n  private _cubemapFlipX: NonNullable<CubestripProjectionOptions[\"cubemapFlipX\"]>;\n\n  /**\n   * Create new instance.\n   * @ko 새 인스턴스를 생성합니다.\n   * @param options Options {@ko Options}\n   */\n  public constructor(options: CubestripProjectionOptions) {\n    super(options);\n\n    const {\n      cubemapOrder = \"RLUDFB\",\n      cubemapFlipX = false\n    } = options;\n\n    this._cubemapOrder = cubemapOrder;\n    this._cubemapFlipX = cubemapFlipX;\n  }\n\n  public applyTexture(ctx: WebGLContext, texture: Texture2D) {\n    const cubemapOrder = this._cubemapOrder;\n    const cubemapFlipX = this._cubemapFlipX;\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n    const geometry = new CubeGeometry({\n      order: cubemapOrder\n    });\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    if (cubemapFlipX) {\n      mesh.scale[0] = -1;\n    }\n    mesh.updateMatrix();\n\n    this._mesh = mesh;\n  }\n}\n\nexport default CubestripProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"./Geometry\";\n\n/**\n * @hidden\n */\nclass CylinderGeometry extends Geometry {\n  public constructor(maxTheta: number) {\n    const vertices: number[] = [];\n    const indicies: number[] = [];\n    const uvs: number[] = [];\n\n    const height = 1;\n    const radialSegments = 60;\n    const halfHeight = height * 0.5;\n    const heightSegments = [-halfHeight, halfHeight];\n    const invRadialSegments = 1 / radialSegments;\n    const angleConst = maxTheta * invRadialSegments;\n\n    for (let yIdx = 0; yIdx < 2; yIdx++) {\n      const y = heightSegments[yIdx];\n\n      for (let lngIdx = 0; lngIdx <= radialSegments; lngIdx++) {\n        const angle = lngIdx * angleConst + Math.PI - maxTheta * 0.5;\n        const x = Math.cos(angle);\n        const z = Math.sin(angle);\n        const u = lngIdx * invRadialSegments;\n        const v = yIdx;\n\n        uvs.push(u, v);\n        vertices.push(x, y, z);\n\n        if (yIdx === 0 && lngIdx < radialSegments) {\n          const a = lngIdx;\n          const b = a + radialSegments + 1;\n\n          indicies.push(a, b, a + 1, b, b + 1, a + 1);\n        }\n      }\n    }\n\n    super(vertices, indicies, uvs);\n  }\n}\n\nexport default CylinderGeometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n*/\nimport { quat } from \"gl-matrix\";\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport CylinderGeometry from \"../geometry/CylinderGeometry\";\nimport Camera from \"../core/Camera\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport { DEG_TO_RAD, RAD_TO_DEG } from \"../const/internal\";\nimport vs from \"../shader/common.vert\";\nimport fs from \"../shader/common.frag\";\nimport TriangleMesh from \"../core/TriangleMesh\";\n\n/**\n * Options for {@link CylindricalProjection}\n * @ko {@link CylindricalProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface CylindricalProjectionOptions extends ProjectionOptions {\n  src: string | HTMLElement;\n  /**\n   * Whether the panorama image covers full 360 degrees.\n   * @ko 파노라마 이미지가 360도를 전부 커버하는지 여부\n   * @since 4.0.0\n   * @default false\n   */\n  partial?: boolean;\n}\n\n/**\n * Projection based on cylindrical projection.\n * This can show panorama images taken from smartphones.\n * @ko 원통 투영법 기반의 프로젝션.\n * 일반적인 스마트폰 파노라마 사진을 표시하는데 사용될 수 있습니다.\n * @since 4.0.0\n * @category Projection\n */\nclass CylindricalProjection extends Projection<{\n  uTexture: UniformTexture2D;\n}> {\n  private _partial: boolean;\n\n  /**\n   * Create new instance.\n   * @ko 새 인스턴스를 생성합니다.\n   * @param options Options {@ko Options}\n   */\n  public constructor(options: CylindricalProjectionOptions) {\n    super(options);\n\n    const {\n      partial = false\n    } = options;\n\n    this._partial = partial;\n  }\n\n  public applyTexture(ctx: WebGLContext, texture: Texture2D) {\n    const partial = this._partial;\n    const { width, height } = texture;\n    const aspect = width / height;\n    const halfVFov = 180 / aspect;\n    const cylinderHeight = partial\n      ? 1\n      : 2 * Math.tan(halfVFov * DEG_TO_RAD);\n    const cylinderTheta = partial\n      ? aspect\n      : 2 * Math.PI;\n\n    const geometry = new CylinderGeometry(cylinderTheta);\n    const program = new ShaderProgram(ctx, vs, fs, {\n      uTexture: new UniformTexture2D(ctx, texture)\n    });\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    mesh.scale[1] = cylinderHeight;\n    quat.identity(mesh.rotation);\n    quat.rotateY(mesh.rotation, mesh.rotation, -Math.PI / 2);\n    mesh.updateMatrix();\n\n    this._mesh = mesh;\n  }\n\n  public updateCamera(camera: Camera) {\n    super.updateCamera(camera);\n\n    const mesh = this._mesh;\n    if (!mesh) return;\n\n    const uTexture = mesh.program.uniforms.uTexture;\n    const texture = uTexture.texture;\n    const { width, height } = texture;\n    const aspect = width / height;\n    const halfHeight = mesh.scale[1] * 0.5;\n\n    if (this._partial) {\n      const restrictedYaw = 0.5 * aspect * RAD_TO_DEG;\n      camera.restrictYawRange(-restrictedYaw, restrictedYaw);\n    }\n\n    const restrictedPitch = Math.atan2(halfHeight, 1) * RAD_TO_DEG;\n    const minZoom = Math.tan(camera.fov * DEG_TO_RAD * 0.5) / (halfHeight * camera.aspect);\n\n    camera.restrictPitchRange(-restrictedPitch, restrictedPitch);\n    camera.restrictZoomRange(minZoom, Infinity);\n    camera.restrictRenderHeight(halfHeight * 2);\n  }\n}\n\nexport default CylindricalProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport CubeGeometry from \"../geometry/CubeGeometry\";\nimport vs from \"../shader/common.vert\";\nimport fs from \"../shader/eac.frag\";\nimport { ROTATE } from \"../const/internal\";\n\n/**\n * Options for {@link EquiangularProjection}\n * @ko {@link EquiangularProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface EquiangularProjectionOptions extends ProjectionOptions {}\n\n/**\n * Equi-Angular Cubemap Projection.\n * This format is used by Youtube's 360 videos.\n * @ko Equi-Angular Cubemap 프로젝션.\n * 이 포맷은 주로 Youtube의 360 비디오에 사용됩니다.\n * @since 4.0.0\n * @category Projection\n */\nclass EquiangularProjection extends Projection<{\n  uTexture: UniformTexture2D;\n}> {\n  public applyTexture(ctx: WebGLContext, texture: Texture2D) {\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n    const geometry = new CubeGeometry({\n      order: \"LFRDBU\",\n      rotateUV: [\n        ROTATE.ZERO, ROTATE.ZERO, ROTATE.ZERO,\n        ROTATE.CW_90, ROTATE.CCW_90, ROTATE.CW_90\n      ]\n    });\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    this._mesh = mesh;\n  }\n}\n\nexport default EquiangularProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"./Geometry\";\n\n/**\n * @hidden\n */\nclass SphereGeometry extends Geometry {\n  /** */\n  public constructor() {\n    // const radius = 1;\n    const widthSegments = 60;\n    const heightSegments = 60;\n    const ANGLE_CORRECTION_FOR_CENTER_ALIGN = -0.5 * Math.PI;\n\n    const uvs: number[] = [];\n    const vertices: number[] = [];\n    const indicies: number[] = [];\n    let latIdx: number;\n    let lngIdx: number;\n\n    for (latIdx = 0; latIdx <= widthSegments; latIdx++) {\n      const theta = (latIdx / widthSegments - 0.5) * Math.PI;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n\n      for (lngIdx = 0; lngIdx <= heightSegments; lngIdx++) {\n        const phi = (lngIdx / heightSegments - 0.5) * 2 * Math.PI + ANGLE_CORRECTION_FOR_CENTER_ALIGN;\n        const sinPhi = Math.sin(phi);\n        const cosPhi = Math.cos(phi);\n        const x = cosPhi * cosTheta;\n        const y = sinTheta;\n        const z = sinPhi * cosTheta;\n        const u = lngIdx / heightSegments;\n        const v = latIdx / widthSegments;\n\n        uvs.push(u, v);\n        vertices.push(x, y, z);\n\n        if (lngIdx !== heightSegments && latIdx !== widthSegments) {\n          const a = latIdx * (heightSegments + 1) + lngIdx;\n          const b = a + heightSegments + 1;\n\n          indicies.push(a, a + 1, b, b, a + 1, b + 1);\n        }\n      }\n    }\n\n    super(vertices, indicies, uvs);\n  }\n}\n\nexport default SphereGeometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport Texture2D from \"../texture/Texture2D\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport SphereGeometry from \"../geometry/SphereGeometry\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport vs from \"../shader/common.vert\";\nimport fs from \"../shader/common.frag\";\n\n/**\n * Options for {@link EquirectProjection}\n * @ko {@link EquirectProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface EquirectProjectionOptions extends ProjectionOptions {\n  src: string | HTMLElement;\n}\n\n/**\n * Projection based on equirectangular projection.\n * @ko 등 장방형 도법(Equirectangular projection) 기반의 프로젝션\n * @since 4.0.0\n * @category Projection\n */\nclass EquirectProjection extends Projection<{\n  uTexture: UniformTexture2D\n}> {\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor(options: EquirectProjectionOptions) {\n    super(options);\n  }\n\n  public applyTexture(ctx: WebGLContext, texture: Texture2D) {\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n\n    const geometry = new SphereGeometry();\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    this._mesh = mesh;\n  }\n}\n\nexport default EquirectProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Uniform from \"./Uniform\";\n\nclass UniformFloat extends Uniform {\n  public val: number;\n\n  public constructor(val: number) {\n    super();\n\n    this.val = val;\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation) {\n    gl.uniform1f(location, this.val);\n\n    this.needsUpdate = false;\n  }\n}\n\nexport default UniformFloat;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Geometry from \"./Geometry\";\n\n/**\n * @hidden\n */\nclass PlaneGeometry extends Geometry {\n  /** */\n  public constructor(width: number = 2, height: number = 2, z: number = -1) {\n    const halfWidth = width * 0.5;\n    const halfHeight = height * 0.5;\n    const vertices = [\n      -halfWidth, -halfHeight, z,\n      halfWidth, -halfHeight, z,\n      -halfWidth, halfHeight, z,\n      halfWidth, halfHeight, z\n    ];\n    const indicies = [\n      0, 1, 2,\n      2, 1, 3\n    ];\n    const uvs = [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ];\n\n    super(vertices, indicies, uvs);\n  }\n}\n\nexport default PlaneGeometry;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport UniformFloat from \"../uniform/UniformFloat\";\nimport Camera from \"../core/Camera\";\nimport PanoControl from \"../control/PanoControl\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport Texture2D from \"../texture/Texture2D\";\nimport PlaneGeometry from \"../geometry/PlaneGeometry\";\nimport vs from \"../shader/little-planet.vert\";\nimport fs from \"../shader/little-planet.frag\";\nimport TriangleMesh from \"../core/TriangleMesh\";\n\n/**\n * Options for {@link LittlePlanetProjection}\n * @ko {@link LittlePlanetProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface LittlePlanetProjectionOptions extends ProjectionOptions {\n  src: string | HTMLElement;\n}\n\n/**\n * Projection based on so-called \"Little planet\" or \"Tiny planet\" effect.\n * @ko \"Little planet\" 혹은 \"Tiny planet\"로 불리는 이펙트 기반의 프로젝션\n * @since 4.0.0\n * @category Projection\n */\nclass LittlePlanetProjection extends Projection<{\n  uTexture: UniformTexture2D;\n  uYaw: UniformFloat;\n  uPitch: UniformFloat;\n  uZoom: UniformFloat;\n}> {\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor(options: LittlePlanetProjectionOptions) {\n    super(options);\n  }\n\n  public applyTexture(ctx: WebGLContext, texture: Texture2D) {\n    texture.wrapS = WebGLRenderingContext.REPEAT;\n    texture.wrapT = WebGLRenderingContext.REPEAT;\n\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture),\n      uYaw: new UniformFloat(0),\n      uPitch: new UniformFloat(0.5),\n      uZoom: new UniformFloat(1)\n    };\n\n    const geometry = new PlaneGeometry();\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    this._mesh = mesh;\n  }\n\n  public updateControl(control: PanoControl) {\n    control.ignoreZoomScale = true;\n  }\n\n  public update(camera: Camera) {\n    const mesh = this._mesh;\n    if (!mesh) return;\n\n    const uniforms = mesh.program.uniforms;\n\n    uniforms.uYaw.val = camera.yaw / 360;\n    // Range from 0 ~ 1\n    uniforms.uPitch.val = (camera.pitch / 180) + 0.5;\n    uniforms.uZoom.val = camera.zoom;\n\n    uniforms.uYaw.needsUpdate = true;\n    uniforms.uPitch.needsUpdate = true;\n    uniforms.uZoom.needsUpdate = true;\n  }\n}\n\nexport default LittlePlanetProjection;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Uniform from \"./Uniform\";\n\nclass UniformVector4Array extends Uniform {\n  public val: number[][];\n\n  public constructor(val: number[][]) {\n    super();\n\n    this.val = val;\n  }\n\n  public update(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation) {\n    gl.uniform4fv(location, this.val.reduce((arr, vector) => [...arr, ...vector], []));\n\n    this.needsUpdate = false;\n  }\n}\n\nexport default UniformVector4Array;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Projection, { ProjectionOptions } from \"./Projection\";\nimport UniformTexture2D from \"../uniform/UniformTexture2D\";\nimport WebGLContext from \"../core/WebGLContext\";\nimport Texture2D from \"../texture/Texture2D\";\nimport SphereGeometry from \"../geometry/SphereGeometry\";\nimport ShaderProgram from \"../core/ShaderProgram\";\nimport TriangleMesh from \"../core/TriangleMesh\";\nimport UniformVector4Array from \"../uniform/UniformVector4Array\";\nimport UniformFloat from \"../uniform/UniformFloat\";\nimport vs from \"../shader/stereoequi.vert\";\nimport fs from \"../shader/common.frag\";\n\n/**\n * Options for {@link StereoEquiProjection}\n * @ko {@link StereoEquiProjection}의 옵션들\n * @since 4.0.0\n * @category Projection\n */\nexport interface StereoEquiProjectionOptions extends ProjectionOptions {\n  src: string | HTMLElement;\n  /**\n   * Stereoscopic mode of the image\n   * @ko 이미지의 스테레오스코픽 모드\n   * @since 4.0.0\n   * @default \"top_bottom\"\n   */\n  mode: typeof StereoEquiProjection.MODE[keyof typeof StereoEquiProjection.MODE]\n}\n\n/**\n * Projection based on stereo equirectangular images.\n * @ko Stereo equirectangular 이미지 기반의 프로젝션\n * @since 4.0.0\n * @category Projection\n */\nclass StereoEquiProjection extends Projection<{\n  uTexture: UniformTexture2D;\n  uEye: UniformFloat;\n  uTexScaleOffset: UniformVector4Array;\n}> {\n  /**\n   * Available stereoscopic modes\n   * @ko 사용가능한 스테레오스코픽 모드들\n   * @since 4.0.0\n   */\n  public static MODE = {\n    /**\n     * @ko 이미지가 왼쪽/오른쪽으로 구성되어있을 경우\n     * @since 4.0.0\n     */\n    LEFT_RIGHT: \"left_right\",\n    /**\n     * @ko 이미지가 위/아래로 구성되어있을 경우\n     * @since 4.0.0\n     */\n    TOP_BOTTOM: \"top_bottom\",\n  } as const;\n\n  private _mode: StereoEquiProjectionOptions[\"mode\"];\n\n  /**\n   * Create new instance\n   * @ko 새로운 인스턴스를 생성합니다.\n   * @param options - Options {@ko 옵션들}\n   */\n  public constructor(options: StereoEquiProjectionOptions) {\n    super(options);\n\n    this._mode = options.mode;\n  }\n\n  public applyTexture(ctx: WebGLContext, texture: Texture2D) {\n    let leftEye: number[];\n    let rightEye: number[];\n\n    switch (this._mode) {\n      case StereoEquiProjection.MODE.LEFT_RIGHT:\n        leftEye = [0.5, 1, 0, 0];\n        rightEye = [0.5, 1, 0.5, 0];\n        break;\n      default:\n        // Default, uses \"top_bottom\"\n        leftEye = [1, 0.5, 0, 0];\n        rightEye = [1, 0.5, 0, 0.5];\n    }\n\n\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture),\n      uEye: new UniformFloat(0),\n      uTexScaleOffset: new UniformVector4Array([leftEye, rightEye])\n    };\n\n    const geometry = new SphereGeometry();\n    const program = new ShaderProgram(ctx, vs, fs, uniforms);\n\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n\n    this._mesh = mesh;\n  }\n}\n\nexport default StereoEquiProjection;\n","import Component from \"@egjs/component\";\nimport View360 from \"../View360\";\n\n/**\n * @hidden\n */\nconst withMethods = (prototype: any, attr: string) => {\n  [Component.prototype, View360.prototype].forEach(proto => {\n    Object.getOwnPropertyNames(proto)\n      .filter(name => name.charAt(0) !== \"_\" && name !== \"constructor\")\n      .forEach((name: string) => {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name)!;\n\n        if (descriptor.value) {\n          // Public Function\n          Object.defineProperty(prototype, name, {\n            value: function(...args) {\n              return descriptor.value.call(this[attr], ...args);\n            }\n          });\n        } else {\n          const getterDescriptor: { get?: () => any; set?: (val: any) => void } = {};\n          if (descriptor.get) {\n            getterDescriptor.get = function() {\n              return this[attr] && descriptor.get?.call(this[attr]);\n            };\n          }\n          if (descriptor.set) {\n            getterDescriptor.set = function(...args) {\n              return descriptor.set?.call(this[attr], ...args);\n            };\n          }\n\n          Object.defineProperty(prototype, name, getterDescriptor);\n        }\n      });\n  });\n};\n\nexport default withMethods;\n","/**\n * @hidden\n */\nexport const getValidProps = (propsObj: any) => {\n  return Object.keys(propsObj).reduce((props, propName) => {\n    if (propsObj[propName] != null) {\n      props[propName] = propsObj[propName];\n    }\n\n    return props;\n  }, {});\n};\n","export const VIEW360_METHODS = [\n  \"destroy\",\n  \"init\",\n  \"load\",\n  \"resize\",\n  \"addPlugins\",\n  \"removePlugins\",\n  \"renderFrame\",\n  // @egjs/component methods\n  \"on\",\n  \"hasOn\",\n  \"once\",\n  \"off\",\n  \"trigger\"\n] as const;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport View360, { View360Options, View360Events } from \"./View360\";\n\nexport * from \"./core\";\nexport * from \"./control\";\nexport * from \"./plugin\";\nexport * from \"./projection\";\nexport * from \"./hotspot\";\nexport * from \"./const/external\";\nexport * from \"./type/external\";\nexport * from \"./cfc\";\n\nexport type {\n  View360Options,\n  View360Events\n};\n\nexport default View360;\n","/*\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport View360, * as modules from \"./index\";\nimport { merge } from \"./utils\";\n\nmerge(View360, modules);\n\nexport default View360;\n"],"names":["View360Error","Error","constructor","message","code","Object","setPrototypeOf","prototype","name","ERROR_CODES","WRONG_TYPE","WRONG_OPTION","ELEMENT_NOT_FOUND","CANVAS_NOT_FOUND","WEBGL_NOT_SUPPORTED","FAILED_CREATE_CONTEXT_2D","PROVIDE_PROJECTION_FIRST","FAILED_LINKING_PROGRAM","INSUFFICIENT_ARGS","MESSAGES","val","types","map","type","join","optionName","query","msg","shaderLog","CODES","EVENTS","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","TOUCH_START","TOUCH_MOVE","TOUCH_END","WHEEL","RESIZE","CONTEXT_MENU","MOUSE_ENTER","MOUSE_LEAVE","POINTER_DOWN","POINTER_MOVE","POINTER_UP","POINTER_CANCEL","POINTER_ENTER","POINTER_LEAVE","KEY_DOWN","KEY_UP","LOAD","ERROR","CLICK","DOUBLE_CLICK","CONTEXT_CREATE_ERROR","CONTEXT_LOST","CONTEXT_RESTORED","DEVICE_ORIENTATION","DEVICE_MOTION","ORIENTATION_CHANGE","VIDEO_PLAY","VIDEO_PAUSE","VIDEO_LOADED_DATA","VIDEO_VOLUME_CHANGE","VIDEO_TIME_UPDATE","VIDEO_DURATION_CHANGE","VIDEO_CAN_PLAYTHROUGH","TRANSITION_END","XR_END","EL_DIV","EL_BUTTON","MOUSE_BUTTON","CURSOR","GRAB","GRABBING","NONE","KEY_DIRECTION","DIRECTION_KEY_CODE","SPACE_KEY_CODE","DIRECTION_KEY_NAME","LEFT","UP","RIGHT","DOWN","SPACE_KEY_NAME","FULLSCREEN_REQUEST","FULLSCREEN_ELEMENT","FULLSCREEN_EXIT","FULLSCREEN_CHANGE","DEFAULT_CLASS","CONTAINER","CANVAS","CTX_LOST","IN_VR","HOTSPOT_CONTAINER","HOTSPOT","HOTSPOT_VISIBLE","HOTSPOT_FLIP_X","HOTSPOT_FLIP_Y","READY","LOAD_START","PROJECTION_CHANGE","BEFORE_RENDER","RENDER","INPUT_START","INPUT_END","VIEW_CHANGE","STATIC_CLICK","VR_START","VR_END","EASING","LINEAR","x","SINE_WAVE","Math","sin","PI","EASE_OUT_CUBIC","pow","EASE_OUT_BOUNCE","n1","d1","CAMERA_EVENTS","CHANGE","ANIMATION_END","CONTROL_EVENTS","ENABLE","DISABLE","DEG_TO_RAD","RAD_TO_DEG","DEFAULT_EASING","DEFAULT_ANIMATION_DURATION","INFINITE_RANGE","min","Infinity","max","DEFAULT_PITCH_RANGE","DEFAULT_ZOOM_RANGE","ROTATE","VIDEO_TIME_CHANGE_EVENT","SVG_NAMESPACE","SESSION_VR","XR_REFERENCE_SPACE","EPSILON","_a","Number","isString","isElement","nodeType","Node","ELEMENT_NODE","createElement","className","tag","BROWSER","el","document","classList","add","getNullableElement","parent","targetEl","parentEl","queryResult","querySelector","getElement","findCanvas","root","selector","canvas","range","end","Array","apply","undef","idx","clamp","lerp","a","b","t","circulate","size","abs","offset","merge","target","srcs","forEach","source","keys","key","value","isArray","findIndex","array","checker","length","getObjectOption","toVerticalFov","fovRadian","aspect","atan","tan","reorderCube","arr","order","defaultOrder","split","face","indexOf","index","isFullscreen","sensorCanBeEnabledIOS","DeviceMotionEvent","window","isSecureContext","hfovToZoom","baseFov","fov","renderingWidth","zoomedWidth","eulerToQuat","out","yaw","pitch","roll","quat","pitchThreshold","pitchClamped","quatToEuler","quaternion","y","z","w","x2","y2","z2","w2","unit","test","atan2","view","vec3","up","viewXZ","sqrt","Motion","_val","start","_start","_end","progress","_progress","activated","_activated","duration","_duration","loop","_loop","_range","easing","_easing","reset","update","deltaTime","prev","nextProgress","easedProgress","defaultVal","delta","setNewEndByDelta","setRange","CameraAnimation","_motion","camera","from","to","_camera","_from","_to","_finishPromise","Promise","resolve","_finish","getFinishPromise","motion","rotation","zoom","rotate","Camera","Component","_aspect","changed","_changed","yawRange","_initialYawRange","pitchRange","_initialPitchRange","zoomRange","_initialZoomRange","initialYaw","initialPitch","initialZoom","rollOffset","position","animation","_up","_yawRange","_pitchRange","_zoomRange","_updateQuaternion","viewMatrix","mat4","projectionMatrix","_maxRenderHeight","destroy","off","resize","width","height","prevAspect","updateMatrix","lookAt","prevQuaternion","prevZoom","zoomDiff","normalized","isSameRotation","animateTo","finishPromise","then","trigger","restrictYawRange","restrictPitchRange","restrictZoomRange","restrictRenderHeight","resetRange","getYawRange","yawLimit","maxRenderHeight","halfHFov","getHorizontalFov","minYaw","maxYaw","halfVFovRad","h","d","theta","getPitchRange","pitchLimit","minPitch","maxPitch","halfVFov","getVerticalFov","getZoomRange","limit","minFov","maxFov","currentFov","current","_getZoomedHorizontalFov","hFov","vFov","fovToZoom","projMatrix","upDir","viewDir","onFrameRender","MouseInput","_onMouseDown","evt","_el","button","preventDefault","focus","_prevPos","clientX","clientY","addEventListener","_onMouseMove","_onMouseUp","srcEvent","isTouch","isKeyboard","prevPos","deltaX","deltaY","removeEventListener","scrolling","enable","element","disable","TouchInput","scrollable","_scrollable","_onTouchStart","touches","_scrolling","touch","_isFirstTouch","_onTouchMove","cancelable","_onTouchEnd","passive","KeyboardInput","active","pressed","_pressed","_onKeyDown","location","KeyboardEvent","DOM_KEY_LOCATION_STANDARD","_updateKeyPress","pressedCount","_getPressedKeyCount","repeat","_onKeyUp","_clearPressedKeys","_getDeltaByPressedKeys","reduce","obj","keyName","assign","event","isEnable","keyToUpdate","keyCode","filter","RotateControl","enabled","_enabled","enableBlocked","_enableBlocked","animating","_keyboardInput","_xMotion","_yMotion","_touchInput","pointerScale","_pointerScale","keyboardScale","_keyboardScale","disablePitch","_disablePitch","disableYaw","_disableYaw","disableKeyboard","_disableKeyboard","controlEl","_onInputStart","_changedWhileDragging","inputType","_onChange","invZoomScale","_zoomScale","screenScale","_screenScale","scale","scaledX","scaledY","_onInputEnd","_controlEl","_mouseInput","_bindInputs","xMotion","yMotion","keyboardInput","updateRange","setZoomScale","hfov","vfov","control","updateCursor","sync","mouseInput","touchInput","on","WheelInput","_onWheel","stopPropagation","_inputTimer","_clearTimer","_baseScale","setTimeout","capture","clearTimeout","PinchInput","prevDistance","_prevDistance","diff","pageX","pageY","distance","ZoomControl","_wheelInput","_scale","scaledDelta","_pinchInput","wheelInput","pinchInput","ROTATE_CONSTANT","PITCH_DELTA","YAW_DELTA_BY_ROLL","YAW_DELTA_BY_YAW","targetAxis","meshPoint","GyroInput","orientationUpdated","_orientationUpdated","ignoreRoll","_ignoreRoll","_onDeviceOrientation","prevOrientation","_orientation","alpha","beta","gamma","_needsCalibrate","_calibrateSensor","_updateScreenOrientation","screen","orientation","angle","undefined","_screenOrientation","_yawOrigin","_yawOffset","_updateRotation","collectDelta","prevRotation","_toEulerDelta","setInitialRotation","yawOrigin","sensorYaw","screenAngle","world","cos","prevQuat","currentQuat","_getDeltaYaw","_getDeltaPitch","prvQ","curQ","yawDeltaByYaw","_getRotationDelta","yawDeltaByRoll","_extractPitchFromQuat","prevQ","rotateKind","curQuaternion","prevPoint","curPoint","rotateDistance","rotateDirection","meshPoint2","meshPoint3","vecU","vecV","vecN","coefficientA","coefficientB","coefficientC","projectedPrevPoint","trigonometricRatio","acos","crossVec","thetaDirection","deltaRadian","baseV","GyroControl","_input","isAvailable","onDeviceMotionChange","listenDeviceMotion","res","rotationRate","timeout","race","available","requestSensorPermission","requestPermission","permissionState","catch","_updateYawPitch","input","yawDelta","pitchDelta","PanoControl","useGrabCursor","_useGrabCursor","_setCursor","disableContextMenu","_disableContextMenu","_blockContextMenu","_restoreContextMenu","_rotateControl","wheelScrollable","_zoomControl","ignoreZoomScale","_ignoreZoomScale","gyro","_gyroControl","_preventContextMenu","_onEnable","_onDisable","_onCameraAnimationEnd","_bindEvents","rotateControl","zoomControl","gyroControl","zoomScale","newCursor","style","cursor","Texture","flipY","wrapS","WebGLRenderingContext","CLAMP_TO_EDGE","wrapT","isVideo","isCube","Texture2D","TextureVideo","video","pause","removeAttribute","load","isPaused","paused","ended","readyState","hasAudio","audioTracks","webkitAudioDecodedByteCount","mozHasAudio","TextureCube","sources","TextureLoader","_loadChecker","ImReady","src","loadVideo","loadCubeImage","imgSrc","loadImage","images","_toImageArray","_load","image","naturalWidth","naturalHeight","videoConfig","config","autoplay","muted","volume","_toVideoElement","currentTime","play","videoWidth","videoHeight","content","onLoad","loader","reject","once","errorCount","check","imgEl","Image","crossOrigin","HTMLVideoElement","playsInline","setAttribute","_appendSourceElement","sourceCount","querySelectorAll","HTMLSourceElement","sourceEl","appendChild","FrameAnimator","maxDeltaTime","context","_context","_rafId","_rafTimer","_lastUpdateTime","callback","_time","frame","time","Date","now","requestAnimationFrame","stop","cancelAnimationFrame","changeContext","AutoResizer","useResizeObserver","_useResizeObserver","onResize","_skipFirstResize","isFirstResize","_onResize","_resizeObserver","ResizeObserver","bbox","getBoundingClientRect","resizeImmediate","resizeObserver","observe","disconnect","Autoplay","playing","_interrupted","delay","_delay","delayOnMouseLeave","_delayOnMouseLeave","speed","_speed","pauseOnHover","_pauseOnHover","canInterrupt","_canInterrupt","disableOnInterrupt","_disableOnInterrupt","viewer","options","_clearTimeout","_setUninterruptedAfterDelay","_onGyroEnable","_onMouseEnter","_hovering","_onMouseLeave","_control","_element","_interruptionTimer","enableAfterDelay","XRManager","ctx","exit","_onSessionEnd","_xrSession","_xrRefSpace","_ctx","_options","xr","navigator","isSessionSupported","enter","requiredFeatures","makeXRCompatible","session","requestSession","bindXRLayer","refSpace","requestReferenceSpace","_setSession","xrSession","canRender","pose","getViewerPose","getEyeParams","glLayer","renderState","baseLayer","views","viewport","getViewport","vMatrix","transform","inverse","matrix","pMatrix","Hotspot","HotspotRenderer","rootEl","renderer","_containerEl","_renderer","_hotspots","_zoom","refresh","container","hotspotEls","slice","_parseHotspot","render","hotspots","halfWidth","halfHeight","centerTransform","zoomTransform","hotspot","relPos","remove","screenPos","vec2","yawStr","dataset","pitchStr","positionStr","parseFloat","_yawPitchToVec3","pos","defaultPos","yawRad","pitchRad","VertexArrayObject","count","geometry","indicies","buffers","WebGLContext","_canvas","maxTextureSize","_maxTextureSize","isWebGL2","_isWebGL2","supportVAO","_extensions","vao","lost","_contextLost","debug","_debug","_onContextLost","_onContextRestore","loseContext","init","gl","_getContext","_gl","getParameter","MAX_TEXTURE_SIZE","getExtension","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","forceLoseContext","extension","forceRestoreContext","restoreContext","clear","COLOR_BUFFER_BIT","drawingBufferWidth","drawingBufferHeight","createVAO","shaderProgram","nativeVAO","_createNativeVAO","_createBuffer","uv","_bindNativeVAO","_supplyGeometryData","_unbindBuffers","draw","drawElements","TRIANGLES","UNSIGNED_SHORT","releaseVAO","_deleteNativeVAO","_deleteBuffer","getUniformLocations","program","uniforms","uniformLocations","locations","getUniformLocation","_getCommonUniformLocations","updateCommonUniforms","entity","mvMatrix","uniformMatrix4fv","uMVMatrix","uPMatrix","updateVRUniforms","eyeIndex","uEye","uniform1f","updateUniforms","uniform","needsUpdate","releaseShaderResources","deleteProgram","useProgram","createProgram","vertexShader","fragmentShader","vs","_compileShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramInfoLog","deleteShader","createWebGLTexture","texData","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","gl2","texStorage2D","RGBA8","createWebGLCubeTexture","TEXTURE_CUBE_MAP","attributes","getContextAttributes","xrCompatible","xrLayer","XRWebGLLayer","updateRenderState","bindXRFrame","bindFramebuffer","FRAMEBUFFER","framebuffer","useDefaultFrameBuffer","createBuffer","buffer","deleteBuffer","createVertexArray","ext","createVertexArrayOES","bindVertexArray","bindVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","_supplyIndiciesData","_supplyAttributeData","vertices","uvs","bufferData","data","STATIC_DRAW","attribute","attribLocation","getAttribLocation","vertexAttribPointer","itemSize","FLOAT","enableVertexAttribArray","shader","createShader","shaderSource","compileShader","webglIdentifiers","contextAttributes","preserveDrawingBuffer","antialias","onWebglContextCreationError","e","statusMessage","identifier","getContext","WebGLRenderer","_elementSize","pixelRatio","_pixelRatio","canvasSize","devicePixelRatio","clientWidth","clientHeight","projection","mesh","getMesh","renderVR","vr","eyeParams","eye","View360","_rootEl","_vr","_hotspot","plugins","_plugins","_projection","_initialized","initialized","_autoplay","autoInit","_autoInit","autoResize","_autoResize","canvasSelector","_canvasSelector","tabIndex","_tabIndex","_animator","updateCamera","renderFrame","autoPlayer","_emit","_renderFrameOnDemand","getTexture","_renderVRFrame","_delta","_autoResizer","_addEventHandlers","releaseAllResources","plugin","animator","_bindComponentEvents","_resizeComponents","_loadTexture","_applyProjection","hasAttribute","addPlugins","push","removePlugins","pluginIdx","splice","eventName","params","evtParams","prevProjection","applyTexture","updateControl","contentLoader","events","evtName","controlEventsToPropagate","VERSION","Object3D","LoadingSpinner","_startLoading","_container","_detachElements","parentElement","removeChild","_createElements","ring","RING","ControlBarItem","CONTROL_BAR_DEFAULT_CLASS","CONTROLS_ROOT","CONTROLS_BG","CONTROLS_MAIN","CONTROLS_TOP","CONTROLS_BOTTOM","CONTROLS_MID","CONTROLS_LEFT","CONTROLS_RIGHT","CONTROLS_FLOAT_LEFT","CONTROLS_FLOAT_RIGHT","CONTROLS_BUTTON","PROGRESS_ROOT","VOLUME_ROOT","RANGE_ROOT","RANGE_TRACK","RANGE_THUMB","RANGE_FILLER","PLAY_BUTTON","PAUSE_BUTTON","UNMUTED_BUTTON","MUTED_BUTTON","FULLSCREEN_BUTTON","FULLSCREEN_EXIT_BUTTON","VR_BUTTON","GYRO_ENABLED","GYRO_DISABLED","VIDEO_TIME_DISPLAY","PIEVIEW_ROOT","FIXED","UNAVAILABLE","HIDDEN","CONTROL_BAR_ITEM_POSITION","TOP_LEFT","TOP_RIGHT","MAIN_TOP","MAIN_BOTTOM","MAIN_LEFT","MAIN_RIGHT","RangeControl","_onHold","_bbox","elX","scrollX","pageXOffset","clamepdX","thumbEl","_fixedClass","clampedX","_onRelease","track","thumb","filler","draggable","trackEl","fillerEl","left","right","bottom","top","updateStyle","clampedProgress","ProgressBar","_rangeControl","_onTimeUpdate","_video","_currentTime","_onDurationChange","controlBar","_controlBar","dispatchEvent","CustomEvent","detail","_wasPaused","_playPromise","_onControl","rangeControl","unavailableClass","PlayButton","_onClick","_paused","_onPlay","title","_onPause","VolumeControl","_updateDisplay","disabled","_onVolumeChange","_buttonEl","containerEl","buttonEl","FullscreenButton","_targetEl","_exitFullscreen","_requestFullscreen","_onFullscreenChange","_fullscreenAvailable","_addFullscreenHandlers","_removeFullscreenHandlers","some","request","call","VideoTime","_onCustomTimeChange","timeMinute","floor","timeSeconds","timeSecondsFormatted","durationMinute","durationSeconds","durationSecondsFormatted","innerText","PieView","resetCamera","_viewer","_updatePie","piePath","_piePathEl","rangeCircle","_rangeCircleEl","halfFov","pieRadius","pieDeg","pieOffset","isFinite","radius","rangeDiff","_createPieElements","rootClass","pieSVG","createElementNS","VRButton","GyroButton","_updateStyle","enableButton","AutoHide","hidden","contains","_hiddenClass","initialDelay","idleDelay","activationDelay","_isCursorInside","show","_hideAfterDelay","_isFullscreen","showTemporaliy","_isGrabbing","pointerType","_onVideoPlay","_onVideoPause","_initialDelay","_idleDelay","_timer","hide","_clearHideTimer","VideoControl","videoEl","keyPressed","_changeVideoTime","_changeVideoVolume","spacePressed","_toggleVideo","forward","increase","ControlBar","backgroundEl","_bgEl","items","_items","customItems","_customItems","autoHide","showBackground","clickToPlay","keyboardControls","progressBar","playButton","volumeButton","fullscreenButton","videoTime","pieView","vrButton","gyroButton","_onStaticClick","autoHider","_autoHider","_onNewSrcLoad","_updateBackground","_updateAutoHide","_updateKeyboardHandler","category","item","_createPositionWrappers","POSITION","_videoControl","panoRoot","controlsRoot","defaultItems","_createDefaultItems","_addItem","_clearItemElements","wrapper","_wrapperEl","nextSiblingIndex","sibling","nextSibling","insertBefore","floatLeftEl","floatRightEl","topWrapper","bottomWrapper","midWrapper","leftControlsWrapper","rightControlsWrapper","wrappers","firstChild","background","hiddenClass","_b","videoControl","Projection","_mesh","uTexture","Uniform","UniformTextureCube","cubemapOrder","_webglTexture","_cubemapOrder","deleteTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","uniform1i","activeTexture","TEXTURE0","texSubImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGBA","UNSIGNED_BYTE","texImage2D","CubeTexturePainter","_size","_renderingOrder","_calcRenderingSize","surfaceIdx","row","_row","column","_column","renderingFace","drawImage","UniformCanvasCube","_painter","TriangleMesh","ShaderProgram","VertexData","Geometry","Float32Array","Uint16Array","CubeGeometry","rotateUV","oneThird","coords","r","c","coord","degree","ZERO","newOrder","CW_90","CCW_90","newCoords","uvIdx","acc","concat","CubemapProjection","cubemapFlipX","_cubemapFlipX","UniformTexture2D","CubestripProjection","CylinderGeometry","maxTheta","radialSegments","heightSegments","invRadialSegments","angleConst","yIdx","lngIdx","u","v","CylindricalProjection","partial","_partial","cylinderHeight","cylinderTheta","restrictedYaw","restrictedPitch","minZoom","EquiangularProjection","SphereGeometry","widthSegments","ANGLE_CORRECTION_FOR_CENTER_ALIGN","latIdx","sinTheta","cosTheta","phi","sinPhi","cosPhi","EquirectProjection","UniformFloat","PlaneGeometry","LittlePlanetProjection","REPEAT","uYaw","uPitch","uZoom","UniformVector4Array","uniform4fv","vector","StereoEquiProjection","_mode","mode","leftEye","rightEye","MODE","LEFT_RIGHT","uTexScaleOffset","TOP_BOTTOM","withMethods","attr","proto","getOwnPropertyNames","charAt","descriptor","getOwnPropertyDescriptor","defineProperty","args","getterDescriptor","get","set","getValidProps","propsObj","props","propName","VIEW360_METHODS","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}