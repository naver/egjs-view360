"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5145],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,w=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(w,i(i({ref:t},l),{},{components:n})):r.createElement(w,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>w,frontMatter:()=>p,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905)),o=n(5488),i=n(5162),s=n(3991);const p={title:"Properties and Methods",slug:"/properties-and-methods",sidebar_position:5},c=void 0,l={unversionedId:"tutorials/Properties",id:"tutorials/Properties",title:"Properties and Methods",description:"If you check the API documentation of the View360, you can see that there are various properties and methods defined in Properties and Methods section.",source:"@site/docs/tutorials/Properties.mdx",sourceDirName:"tutorials",slug:"/properties-and-methods",permalink:"/egjs-view360/docs/properties-and-methods",draft:!1,editUrl:"https://github.com/naver/egjs-view360/edit/master/demo/docs/tutorials/Properties.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Properties and Methods",slug:"/properties-and-methods",sidebar_position:5},sidebar:"docs",previous:{title:"Handling Errors",permalink:"/egjs-view360/docs/handling-errors"},next:{title:"Using hotspots",permalink:"/egjs-view360/docs/hotspot"}},d={},u=[],m={toc:u};function w(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"If you check the API documentation of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Class/View360"},"View360"),", you can see that there are various properties and methods defined in ",(0,a.kt)("strong",{parentName:"p"},"Properties")," and ",(0,a.kt)("strong",{parentName:"p"},"Methods")," section."),(0,a.kt)("p",null,"These properties and methods are defined in an instance of View360. That is, if you want to display the item ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Class/Camera#yaw"},"yaw")," on the console, and then invoke the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/Class/View360#load"},"load()")," method, you can write the code as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// I'll skip the option here.\nconst view360 = new View360(...);\n\n// Print the current yaw value to the console window\nconsole.log(view360.camera.yaw);\n\n// Load new projection\nview360.load(...);\n")),(0,a.kt)("p",null,"The same can be used if you are using a framework such as React (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"@egjs/react-view360"),").",(0,a.kt)("br",{parentName:"p"}),"\n","Different frameworks have different approaches to getting a reference of the component, but the rest is the same.",(0,a.kt)("br",{parentName:"p"}),"\n","Below is an example."),(0,a.kt)(o.Z,{groupId:"options",defaultValue:"react",lazy:!0,values:[{label:(0,a.kt)("div",{className:"framework-wrapper"},(0,a.kt)(s.err,{width:"18",height:"18",mdxType:"IconBrandReact"})," React"),value:"react",attributes:{"data-framework":"react"}},{label:(0,a.kt)("div",{className:"framework-wrapper"},(0,a.kt)(s.j3E,{width:"18",height:"18",mdxType:"IconBrandAngular"})," Angular"),value:"ng",attributes:{"data-framework":"ng"}},{label:(0,a.kt)("div",{className:"framework-wrapper"},(0,a.kt)(s.IAF,{width:"18",height:"18",mdxType:"IconBrandVue"})," Vue@2"),value:"vue2",attributes:{"data-framework":"vue"}},{label:(0,a.kt)("div",{className:"framework-wrapper"},(0,a.kt)(s.IAF,{width:"18",height:"18",mdxType:"IconBrandVue"})," Vue@3"),value:"vue3",attributes:{"data-framework":"vue"}},{label:(0,a.kt)("div",{className:"framework-wrapper"},(0,a.kt)(s.qn2,{width:"18",height:"18",mdxType:"IconBrandSvelte"})," Svelte"),value:"svelte",attributes:{"data-framework":"svelte"}}],mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"react",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import React, { useRef, useEffect } from "react";\nimport View360 from "@egjs/view360";\n\n// Suppose it\'s Typescript(.tsx) file\nexport default () => {\n  const viewerRef = useRef<View360>();\n\n  useEffect(() => {\n    // We got an instance of View360. This provides access to properties and methods.\n    const view360 = viewerRef.current;\n\n    console.log(view360.camera.yaw);\n    view360.load(...);\n  }, []);\n\n  return <View360 ref={viewerRef} />;\n}\n'))),(0,a.kt)(i.Z,{value:"ng",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Component, ViewChild } from "@angular/core";\n\n@Component({\n  selector: "demo-comp",\n  template: "<ngx-view360 #viewer />"\n})\nexport class DemoComponent {\n  // You can access properties and methods using this.view360.\n  @ViewChild("viewer") public view360;\n\n  public printCurrentYaw() {\n    console.log(this.view360.camera.yaw);\n  }\n\n  public loadNewProjection() {\n    this.view360.load(...);\n  }\n}\n'))),(0,a.kt)(i.Z,{value:"vue2",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <view360 ref="viewer" />\n</template>\n<script lang="ts">\nimport Vue from "vue";\n\n// You can access the instance with this.$refs.viewer.\n// Using this, you can access properties or invoke methods.\nexport default Vue.extend({\n  methods: {\n    printCurrentYaw() {\n      console.log(this.$refs.viewer.camera.yaw);\n    },\n    loadNewProjection() {\n      this.$refs.viewer.load(...);\n    }\n  }\n});\n<\/script>\n'))),(0,a.kt)(i.Z,{value:"vue3",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <view360 ref="viewer" />\n</template>\n<script lang="ts">\nimport { defineComponent } from "vue";\n\n// You can access the instance with this.$refs.viewer.\n// Using this, you can access properties or invoke methods.\nexport default defineComponent({\n  methods: {\n    printCurrentYaw() {\n      console.log(this.$refs.viewer.camera.yaw);\n    },\n    loadNewProjection() {\n      this.$refs.viewer.load(...);\n    }\n  }\n});\n<\/script>\n'))),(0,a.kt)(i.Z,{value:"svelte",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<script lang="tsx">\nimport View360 from "@egjs/svelte-view360";\n\n// You can bind component instance to this variable using "bind:this".\n// Using this, you can access properties or invoke methods.\nlet view360: View360;\n\nfunction printCurrentYaw() {\n  console.log(view360.camera.yaw);\n}\n\nfunction loadNewProjection() {\n  view360.load(...);\n}\n<\/script>\n\n<View360 bind:this={view360}>\n')))))}w.isMDXComponent=!0}}]);